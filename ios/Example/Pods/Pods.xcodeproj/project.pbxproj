// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		000000001870 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000001880 /* Addition.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000150 /* Addition.swift */; };
		000000001890 /* BigInt.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000160 /* BigInt.swift */; };
		0000000018A0 /* BigUInt.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000170 /* BigUInt.swift */; };
		0000000018B0 /* Bitwise Ops.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000180 /* Bitwise Ops.swift */; };
		0000000018C0 /* Codable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000190 /* Codable.swift */; };
		0000000018D0 /* Comparable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000001A0 /* Comparable.swift */; };
		0000000018E0 /* Data Conversion.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000001B0 /* Data Conversion.swift */; };
		0000000018F0 /* Division.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000001C0 /* Division.swift */; };
		000000001900 /* Exponentiation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000001D0 /* Exponentiation.swift */; };
		000000001910 /* Floating Point Conversion.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000001E0 /* Floating Point Conversion.swift */; };
		000000001920 /* GCD.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000001F0 /* GCD.swift */; };
		000000001930 /* Hashable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000200 /* Hashable.swift */; };
		000000001940 /* Integer Conversion.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000210 /* Integer Conversion.swift */; };
		000000001950 /* Multiplication.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000220 /* Multiplication.swift */; };
		000000001960 /* Prime Test.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000230 /* Prime Test.swift */; };
		000000001970 /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000240 /* Random.swift */; };
		000000001980 /* Shifts.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000250 /* Shifts.swift */; };
		000000001990 /* Square Root.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000260 /* Square Root.swift */; };
		0000000019A0 /* Strideable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000270 /* Strideable.swift */; };
		0000000019B0 /* String Conversion.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000280 /* String Conversion.swift */; };
		0000000019C0 /* Subtraction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000290 /* Subtraction.swift */; };
		0000000019D0 /* Words and Bits.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000002A0 /* Words and Bits.swift */; };
		000000001A20 /* BigInt-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001A10 /* BigInt-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001A60 /* BigInt-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000001A50 /* BigInt-dummy.m */; };
		000000001B00 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000001B10 /* BTC256.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000002C0 /* BTC256.m */; };
		000000001B20 /* BTCAddress.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000002E0 /* BTCAddress.m */; };
		000000001B30 /* BTCAssetAddress.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000310 /* BTCAssetAddress.m */; };
		000000001B40 /* BTCAssetID.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000330 /* BTCAssetID.m */; };
		000000001B50 /* BTCAssetType.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000350 /* BTCAssetType.m */; };
		000000001B60 /* BTCBase58.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000370 /* BTCBase58.m */; };
		000000001B70 /* BTCBigNumber.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000390 /* BTCBigNumber.m */; };
		000000001B80 /* BTCBitcoinURL.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000003B0 /* BTCBitcoinURL.m */; };
		000000001B90 /* BTCBlindSignature.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000003D0 /* BTCBlindSignature.m */; };
		000000001BA0 /* BTCBlock.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000003F0 /* BTCBlock.m */; };
		000000001BB0 /* BTCBlockchainInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000410 /* BTCBlockchainInfo.m */; };
		000000001BC0 /* BTCBlockHeader.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000430 /* BTCBlockHeader.m */; };
		000000001BD0 /* BTCChainCom.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000450 /* BTCChainCom.m */; };
		000000001BE0 /* BTCCurrencyConverter.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000470 /* BTCCurrencyConverter.m */; };
		000000001BF0 /* BTCCurvePoint.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000490 /* BTCCurvePoint.m */; };
		000000001C00 /* BTCData.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000004B0 /* BTCData.m */; };
		000000001C10 /* BTCEncryptedBackup.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000004D0 /* BTCEncryptedBackup.m */; };
		000000001C20 /* BTCEncryptedMessage.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000004F0 /* BTCEncryptedMessage.m */; };
		000000001C30 /* BTCErrors.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000510 /* BTCErrors.m */; };
		000000001C40 /* BTCFancyEncryptedMessage.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000530 /* BTCFancyEncryptedMessage.m */; };
		000000001C50 /* BTCHashID.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000550 /* BTCHashID.m */; };
		000000001C60 /* BTCKey.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000570 /* BTCKey.m */; };
		000000001C70 /* BTCKeychain.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000590 /* BTCKeychain.m */; };
		000000001C80 /* BTCMerkleTree.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000005B0 /* BTCMerkleTree.m */; };
		000000001C90 /* BTCMnemonic.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000005D0 /* BTCMnemonic.m */; };
		000000001CA0 /* BTCNetwork.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000005F0 /* BTCNetwork.m */; };
		000000001CB0 /* BTCNumberFormatter.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000610 /* BTCNumberFormatter.m */; };
		000000001CC0 /* BTCOpcode.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000630 /* BTCOpcode.m */; };
		000000001CD0 /* BTCOutpoint.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000650 /* BTCOutpoint.m */; };
		000000001CE0 /* BTCPaymentMethod.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000670 /* BTCPaymentMethod.m */; };
		000000001CF0 /* BTCPaymentMethodDetails.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000690 /* BTCPaymentMethodDetails.m */; };
		000000001D00 /* BTCPaymentMethodRequest.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000006B0 /* BTCPaymentMethodRequest.m */; };
		000000001D10 /* BTCPaymentProtocol.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000006D0 /* BTCPaymentProtocol.m */; };
		000000001D20 /* BTCPaymentRequest.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000006F0 /* BTCPaymentRequest.m */; };
		000000001D30 /* BTCPriceSource.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000710 /* BTCPriceSource.m */; };
		000000001D40 /* BTCProcessor.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000730 /* BTCProcessor.m */; };
		000000001D50 /* BTCProtocolBuffers.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000750 /* BTCProtocolBuffers.m */; };
		000000001D60 /* BTCProtocolSerialization.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000770 /* BTCProtocolSerialization.m */; };
		000000001D70 /* BTCQRCode.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000790 /* BTCQRCode.m */; };
		000000001D80 /* BTCScript.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000007B0 /* BTCScript.m */; };
		000000001D90 /* BTCScriptMachine.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000007D0 /* BTCScriptMachine.m */; };
		000000001DA0 /* BTCSecretSharing.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000800 /* BTCSecretSharing.m */; };
		000000001DB0 /* BTCTransaction.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000830 /* BTCTransaction.m */; };
		000000001DC0 /* BTCTransactionBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000850 /* BTCTransactionBuilder.m */; };
		000000001DD0 /* BTCTransactionInput.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000870 /* BTCTransactionInput.m */; };
		000000001DE0 /* BTCTransactionOutput.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000890 /* BTCTransactionOutput.m */; };
		000000001DF0 /* NS+BTCBase58.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000008D0 /* NS+BTCBase58.m */; };
		000000001E00 /* NSData+BTCData.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000008F0 /* NSData+BTCData.m */; };
		000000001E10 /* segwit_addr.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000000900 /* segwit_addr.c */; };
		000000001E20 /* b64.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000000920 /* b64.c */; };
		000000001E30 /* crypto-mcf.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000000940 /* crypto-mcf.c */; };
		000000001E40 /* crypto-scrypt-saltgen.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000000950 /* crypto-scrypt-saltgen.c */; };
		000000001E50 /* crypto_scrypt-check.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000000960 /* crypto_scrypt-check.c */; };
		000000001E60 /* crypto_scrypt-hash.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000000970 /* crypto_scrypt-hash.c */; };
		000000001E70 /* crypto_scrypt-hexconvert.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000000980 /* crypto_scrypt-hexconvert.c */; };
		000000001E80 /* crypto_scrypt-nosse.c in Sources */ = {isa = PBXBuildFile; fileRef = 0000000009A0 /* crypto_scrypt-nosse.c */; };
		000000001E90 /* sha256.c in Sources */ = {isa = PBXBuildFile; fileRef = 0000000009C0 /* sha256.c */; };
		000000001EA0 /* slowequals.c in Sources */ = {isa = PBXBuildFile; fileRef = 0000000009E0 /* slowequals.c */; };
		000000001EB0 /* BTC256.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000002B0 /* BTC256.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001EC0 /* BTCAddress.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000002D0 /* BTCAddress.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001ED0 /* BTCAddressSubclass.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000002F0 /* BTCAddressSubclass.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001EE0 /* BTCAssetAddress.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000300 /* BTCAssetAddress.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001EF0 /* BTCAssetID.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000320 /* BTCAssetID.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F00 /* BTCAssetType.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000340 /* BTCAssetType.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F10 /* BTCBase58.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000360 /* BTCBase58.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F20 /* BTCBigNumber.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000380 /* BTCBigNumber.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F30 /* BTCBitcoinURL.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000003A0 /* BTCBitcoinURL.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F40 /* BTCBlindSignature.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000003C0 /* BTCBlindSignature.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F50 /* BTCBlock.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000003E0 /* BTCBlock.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F60 /* BTCBlockchainInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000400 /* BTCBlockchainInfo.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F70 /* BTCBlockHeader.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000420 /* BTCBlockHeader.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F80 /* BTCChainCom.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000440 /* BTCChainCom.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001F90 /* BTCCurrencyConverter.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000460 /* BTCCurrencyConverter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001FA0 /* BTCCurvePoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000480 /* BTCCurvePoint.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001FB0 /* BTCData.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000004A0 /* BTCData.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001FC0 /* BTCEncryptedBackup.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000004C0 /* BTCEncryptedBackup.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001FD0 /* BTCEncryptedMessage.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000004E0 /* BTCEncryptedMessage.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001FE0 /* BTCErrors.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000500 /* BTCErrors.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000001FF0 /* BTCFancyEncryptedMessage.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000520 /* BTCFancyEncryptedMessage.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002000 /* BTCHashID.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000540 /* BTCHashID.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002010 /* BTCKey.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000560 /* BTCKey.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002020 /* BTCKeychain.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000580 /* BTCKeychain.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002030 /* BTCMerkleTree.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000005A0 /* BTCMerkleTree.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002040 /* BTCMnemonic.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000005C0 /* BTCMnemonic.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002050 /* BTCNetwork.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000005E0 /* BTCNetwork.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002060 /* BTCNumberFormatter.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000600 /* BTCNumberFormatter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002070 /* BTCOpcode.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000620 /* BTCOpcode.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002080 /* BTCOutpoint.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000640 /* BTCOutpoint.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002090 /* BTCPaymentMethod.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000660 /* BTCPaymentMethod.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000020A0 /* BTCPaymentMethodDetails.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000680 /* BTCPaymentMethodDetails.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000020B0 /* BTCPaymentMethodRequest.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000006A0 /* BTCPaymentMethodRequest.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000020C0 /* BTCPaymentProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000006C0 /* BTCPaymentProtocol.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000020D0 /* BTCPaymentRequest.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000006E0 /* BTCPaymentRequest.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000020E0 /* BTCPriceSource.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000700 /* BTCPriceSource.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000020F0 /* BTCProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000720 /* BTCProcessor.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002100 /* BTCProtocolBuffers.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000740 /* BTCProtocolBuffers.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002110 /* BTCProtocolSerialization.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000760 /* BTCProtocolSerialization.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002120 /* BTCQRCode.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000780 /* BTCQRCode.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002130 /* BTCScript.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000007A0 /* BTCScript.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002140 /* BTCScriptMachine.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000007C0 /* BTCScriptMachine.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002150 /* BTCScriptTestData.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000007E0 /* BTCScriptTestData.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002160 /* BTCSecretSharing.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000007F0 /* BTCSecretSharing.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002170 /* BTCSignatureHashType.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000810 /* BTCSignatureHashType.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002180 /* BTCTransaction.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000820 /* BTCTransaction.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002190 /* BTCTransactionBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000840 /* BTCTransactionBuilder.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000021A0 /* BTCTransactionInput.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000860 /* BTCTransactionInput.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000021B0 /* BTCTransactionOutput.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000880 /* BTCTransactionOutput.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000021C0 /* BTCUnitsAndLimits.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000008A0 /* BTCUnitsAndLimits.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000021D0 /* CoreBitcoin.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000008B0 /* CoreBitcoin.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000021E0 /* NS+BTCBase58.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000008C0 /* NS+BTCBase58.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000021F0 /* NSData+BTCData.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000008E0 /* NSData+BTCData.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002200 /* segwit_addr.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000910 /* segwit_addr.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002210 /* b64.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000930 /* b64.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002220 /* crypto_scrypt-hexconvert.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000990 /* crypto_scrypt-hexconvert.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002230 /* libscrypt.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000009B0 /* libscrypt.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002240 /* sha256.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000009D0 /* sha256.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002250 /* slowequals.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000009F0 /* slowequals.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002260 /* sysendian.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000A00 /* sysendian.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000022B0 /* CoreBitcoin-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000022A0 /* CoreBitcoin-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000022F0 /* CoreBitcoin-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000022E0 /* CoreBitcoin-dummy.m */; };
		000000002390 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		0000000023A0 /* AEAD.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A10 /* AEAD.swift */; };
		0000000023B0 /* AEADChaCha20Poly1305.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A20 /* AEADChaCha20Poly1305.swift */; };
		0000000023C0 /* AES.Cryptors.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A30 /* AES.Cryptors.swift */; };
		0000000023D0 /* AES.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A40 /* AES.swift */; };
		0000000023E0 /* Array+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A50 /* Array+Extension.swift */; };
		0000000023F0 /* Authenticator.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A60 /* Authenticator.swift */; };
		000000002400 /* BatchedCollection.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A70 /* BatchedCollection.swift */; };
		000000002410 /* Bit.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A80 /* Bit.swift */; };
		000000002420 /* BlockCipher.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000A90 /* BlockCipher.swift */; };
		000000002430 /* BlockMode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000AA0 /* BlockMode.swift */; };
		000000002440 /* BlockModeOptions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000AB0 /* BlockModeOptions.swift */; };
		000000002450 /* BlockModeWorker.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000AC0 /* BlockModeWorker.swift */; };
		000000002460 /* CBC.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000AD0 /* CBC.swift */; };
		000000002470 /* CFB.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000AE0 /* CFB.swift */; };
		000000002480 /* CTR.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000AF0 /* CTR.swift */; };
		000000002490 /* ECB.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B00 /* ECB.swift */; };
		0000000024A0 /* OFB.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B10 /* OFB.swift */; };
		0000000024B0 /* PCBC.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B20 /* PCBC.swift */; };
		0000000024C0 /* RandomAccessBlockModeWorker.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B30 /* RandomAccessBlockModeWorker.swift */; };
		0000000024D0 /* Blowfish.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B40 /* Blowfish.swift */; };
		0000000024E0 /* ChaCha20.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B50 /* ChaCha20.swift */; };
		0000000024F0 /* Checksum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B60 /* Checksum.swift */; };
		000000002500 /* Cipher.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B70 /* Cipher.swift */; };
		000000002510 /* CMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B80 /* CMAC.swift */; };
		000000002520 /* Collection+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000B90 /* Collection+Extension.swift */; };
		000000002530 /* CompactMap.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000BA0 /* CompactMap.swift */; };
		000000002540 /* Cryptors.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000BB0 /* Cryptors.swift */; };
		000000002550 /* Digest.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000BC0 /* Digest.swift */; };
		000000002560 /* DigestType.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000BD0 /* DigestType.swift */; };
		000000002570 /* AES+Foundation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000BE0 /* AES+Foundation.swift */; };
		000000002580 /* Array+Foundation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000BF0 /* Array+Foundation.swift */; };
		000000002590 /* Blowfish+Foundation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C00 /* Blowfish+Foundation.swift */; };
		0000000025A0 /* ChaCha20+Foundation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C10 /* ChaCha20+Foundation.swift */; };
		0000000025B0 /* Data+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C20 /* Data+Extension.swift */; };
		0000000025C0 /* HMAC+Foundation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C30 /* HMAC+Foundation.swift */; };
		0000000025D0 /* Rabbit+Foundation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C40 /* Rabbit+Foundation.swift */; };
		0000000025E0 /* String+FoundationExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C50 /* String+FoundationExtension.swift */; };
		0000000025F0 /* Utils+Foundation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C60 /* Utils+Foundation.swift */; };
		000000002600 /* Generics.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C70 /* Generics.swift */; };
		000000002610 /* HKDF.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C80 /* HKDF.swift */; };
		000000002620 /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000C90 /* HMAC.swift */; };
		000000002630 /* Int+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000CA0 /* Int+Extension.swift */; };
		000000002640 /* MD5.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000CB0 /* MD5.swift */; };
		000000002650 /* NoPadding.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000CC0 /* NoPadding.swift */; };
		000000002660 /* Operators.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000CD0 /* Operators.swift */; };
		000000002670 /* Padding.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000CE0 /* Padding.swift */; };
		000000002680 /* PBKDF1.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000CF0 /* PBKDF1.swift */; };
		000000002690 /* PBKDF2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D00 /* PBKDF2.swift */; };
		0000000026A0 /* PKCS5.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D10 /* PKCS5.swift */; };
		0000000026B0 /* PKCS7.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D20 /* PKCS7.swift */; };
		0000000026C0 /* PKCS7Padding.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D30 /* PKCS7Padding.swift */; };
		0000000026D0 /* Poly1305.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D40 /* Poly1305.swift */; };
		0000000026E0 /* Rabbit.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D50 /* Rabbit.swift */; };
		0000000026F0 /* RandomAccessCryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D60 /* RandomAccessCryptor.swift */; };
		000000002700 /* RandomBytesSequence.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D70 /* RandomBytesSequence.swift */; };
		000000002710 /* SecureBytes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D80 /* SecureBytes.swift */; };
		000000002720 /* SHA1.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000D90 /* SHA1.swift */; };
		000000002730 /* SHA2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000DA0 /* SHA2.swift */; };
		000000002740 /* SHA3.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000DB0 /* SHA3.swift */; };
		000000002750 /* String+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000DC0 /* String+Extension.swift */; };
		000000002760 /* UInt16+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000DD0 /* UInt16+Extension.swift */; };
		000000002770 /* UInt32+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000DE0 /* UInt32+Extension.swift */; };
		000000002780 /* UInt64+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000DF0 /* UInt64+Extension.swift */; };
		000000002790 /* UInt8+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E00 /* UInt8+Extension.swift */; };
		0000000027A0 /* Updatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E10 /* Updatable.swift */; };
		0000000027B0 /* Utils.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E20 /* Utils.swift */; };
		0000000027C0 /* ZeroPadding.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E30 /* ZeroPadding.swift */; };
		000000002810 /* CryptoSwift-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000002800 /* CryptoSwift-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002850 /* CryptoSwift-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000002840 /* CryptoSwift-dummy.m */; };
		0000000028F0 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000002900 /* UIApplication+StrictKeyWindow.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000001660 /* UIApplication+StrictKeyWindow.m */; };
		000000002910 /* UIImage+Compare.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000001680 /* UIImage+Compare.m */; };
		000000002920 /* UIImage+Diff.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000016A0 /* UIImage+Diff.m */; };
		000000002930 /* UIImage+Snapshot.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000016C0 /* UIImage+Snapshot.m */; };
		000000002940 /* FBSnapshotTestCase.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000016E0 /* FBSnapshotTestCase.m */; };
		000000002950 /* FBSnapshotTestCasePlatform.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000001700 /* FBSnapshotTestCasePlatform.m */; };
		000000002960 /* FBSnapshotTestController.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000001720 /* FBSnapshotTestController.m */; };
		000000002970 /* UIApplication+StrictKeyWindow.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001650 /* UIApplication+StrictKeyWindow.h */; settings = {ATTRIBUTES = (Project, ); }; };
		000000002980 /* UIImage+Compare.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001670 /* UIImage+Compare.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000002990 /* UIImage+Diff.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001690 /* UIImage+Diff.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000029A0 /* UIImage+Snapshot.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000016B0 /* UIImage+Snapshot.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000029B0 /* FBSnapshotTestCase.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000016D0 /* FBSnapshotTestCase.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000029C0 /* FBSnapshotTestCasePlatform.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000016F0 /* FBSnapshotTestCasePlatform.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000029D0 /* FBSnapshotTestController.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001710 /* FBSnapshotTestController.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000029E0 /* SwiftSupport.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001740 /* SwiftSupport.swift */; };
		000000002A30 /* FBSnapshotTestCase-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000002A20 /* FBSnapshotTestCase-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002A70 /* FBSnapshotTestCase-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000002A60 /* FBSnapshotTestCase-dummy.m */; };
		000000002B10 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000002B20 /* LTHRadioButton.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E40 /* LTHRadioButton.swift */; };
		000000002B70 /* LTHRadioButton-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000002B60 /* LTHRadioButton-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002BB0 /* LTHRadioButton-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000002BA0 /* LTHRadioButton-dummy.m */; };
		000000002C50 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000002C60 /* OrderedDictionary.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E60 /* OrderedDictionary.m */; settings = {COMPILER_FLAGS = "-DOS_OBJECT_USE_OBJC=0"; }; };
		000000002C70 /* OrderedDictionary.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000000E50 /* OrderedDictionary.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002CC0 /* OrderedDictionary-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000002CB0 /* OrderedDictionary-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002D00 /* OrderedDictionary-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000002CF0 /* OrderedDictionary-dummy.m */; };
		000000002DA0 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000002DB0 /* Primitive Types.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E70 /* Primitive Types.swift */; };
		000000002DC0 /* RandomUInt64.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E80 /* RandomUInt64.swift */; };
		000000002DD0 /* SipHashable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000E90 /* SipHashable.swift */; };
		000000002DE0 /* SipHasher.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000EA0 /* SipHasher.swift */; };
		000000002E30 /* SipHash-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000002E20 /* SipHash-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000002E70 /* SipHash-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000002E60 /* SipHash-dummy.m */; };
		000000002F10 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000002F20 /* BLE.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000EC0 /* BLE.swift */; };
		000000002F30 /* BLEDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000ED0 /* BLEDelegate.swift */; };
		000000002F40 /* APDU.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000EF0 /* APDU.swift */; };
		000000002F50 /* Applet.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000F00 /* Applet.swift */; };
		000000002F60 /* BIP44.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000F10 /* BIP44.swift */; };
		000000002F70 /* BTCKey.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000F30 /* BTCKey.swift */; };
		000000002F80 /* BTCTransaction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000F40 /* BTCTransaction.swift */; };
		000000002F90 /* BTCTransactionSigner.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000F50 /* BTCTransactionSigner.swift */; };
		000000002FA0 /* OmniTransaction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000F60 /* OmniTransaction.swift */; };
		000000002FB0 /* OmniTransactionSigner.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000F70 /* OmniTransactionSigner.swift */; };
		000000002FC0 /* SegWit.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000F80 /* SegWit.swift */; };
		000000002FD0 /* Bech32Address.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000FA0 /* Bech32Address.swift */; };
		000000002FE0 /* CosmosHrp.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000FB0 /* CosmosHrp.swift */; };
		000000002FF0 /* CosmosKey.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000FC0 /* CosmosKey.swift */; };
		000000003000 /* CosmosTransaction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000FD0 /* CosmosTransaction.swift */; };
		000000003010 /* EOSKey.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000000FF0 /* EOSKey.swift */; };
		000000003020 /* EOSSignResult.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001000 /* EOSSignResult.swift */; };
		000000003030 /* EOSTransaction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001010 /* EOSTransaction.swift */; };
		000000003040 /* EOSTransactionSigner.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001020 /* EOSTransactionSigner.swift */; };
		000000003050 /* ETHKey.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001040 /* ETHKey.swift */; };
		000000003060 /* ETHTransaction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001050 /* ETHTransaction.swift */; };
		000000003070 /* ImkeyError.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001060 /* ImkeyError.swift */; };
		000000003080 /* Network.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001070 /* Network.swift */; };
		000000003090 /* TransactionSignedResult.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001080 /* TransactionSignedResult.swift */; };
		0000000030A0 /* Wallet.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001090 /* Wallet.swift */; };
		0000000030B0 /* APPDelete.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000010B0 /* APPDelete.swift */; };
		0000000030C0 /* APPDownload.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000010C0 /* APPDownload.swift */; };
		0000000030D0 /* APPUpdate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000010D0 /* APPUpdate.swift */; };
		0000000030E0 /* AuthCodeStorage.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000010E0 /* AuthCodeStorage.swift */; };
		0000000030F0 /* Constants.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000010F0 /* Constants.swift */; };
		000000003100 /* HTTP.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001100 /* HTTP.swift */; };
		000000003110 /* KeyFileStorage.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001120 /* KeyFileStorage.swift */; };
		000000003120 /* KeyManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001130 /* KeyManager.swift */; };
		000000003130 /* TLVUtil.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001140 /* TLVUtil.swift */; };
		000000003140 /* Manage.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001150 /* Manage.swift */; };
		000000003150 /* SEActive.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001160 /* SEActive.swift */; };
		000000003160 /* SECertCheck.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001170 /* SECertCheck.swift */; };
		000000003170 /* SECheck.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001180 /* SECheck.swift */; };
		000000003180 /* SEQuery.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001190 /* SEQuery.swift */; };
		000000003190 /* TSMReq.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000011A0 /* TSMReq.swift */; };
		0000000031A0 /* AES128_ik.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000011C0 /* AES128_ik.swift */; };
		0000000031B0 /* Encryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000011D0 /* Encryptor.swift */; };
		0000000031C0 /* Keccak256_ik.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000011E0 /* Keccak256_ik.swift */; };
		0000000031D0 /* RSAUtils.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000011F0 /* RSAUtils.swift */; };
		0000000031E0 /* Secp256k1.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001200 /* Secp256k1.swift */; };
		0000000031F0 /* BigNumber.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001280 /* BigNumber.swift */; };
		000000003200 /* ByteUtil.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001290 /* ByteUtil.swift */; };
		000000003210 /* Data+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000012A0 /* Data+Extension.swift */; };
		000000003220 /* Hex.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000012B0 /* Hex.swift */; };
		000000003230 /* Log.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000012C0 /* Log.swift */; };
		000000003240 /* RLP.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000012D0 /* RLP.swift */; };
		000000003250 /* SigUtil.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000012E0 /* SigUtil.swift */; };
		000000003260 /* String+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0000000012F0 /* String+Extension.swift */; };
		000000003270 /* ValidatorAddress.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000000001300 /* ValidatorAddress.swift */; };
		000000003280 /* imKeyConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001210 /* imKeyConnector.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000003290 /* ErrorCodesAndMacros.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001230 /* ErrorCodesAndMacros.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000032A0 /* FTBLEDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001240 /* FTBLEDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000032B0 /* FTBLEInterface.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001250 /* FTBLEInterface.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000032C0 /* libFtBTKeyApi.a in Sources */ = {isa = PBXBuildFile; fileRef = 000000001260 /* libFtBTKeyApi.a */; };
		000000003310 /* imKeyConnector-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000003300 /* imKeyConnector-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000003350 /* imKeyConnector-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000003340 /* imKeyConnector-dummy.m */; };
		0000000033F0 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000003400 /* lax_der_parsing.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000001310 /* lax_der_parsing.c */; };
		000000003410 /* lax_der_privatekey_parsing.c in Sources */ = {isa = PBXBuildFile; fileRef = 000000001330 /* lax_der_privatekey_parsing.c */; };
		000000003420 /* secp256k1.c in Sources */ = {isa = PBXBuildFile; fileRef = 0000000015D0 /* secp256k1.c */; };
		000000003430 /* lax_der_parsing.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001320 /* lax_der_parsing.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003440 /* lax_der_privatekey_parsing.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001340 /* lax_der_privatekey_parsing.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003450 /* secp256k1.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001350 /* secp256k1.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000003460 /* secp256k1_ecdh.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001360 /* secp256k1_ecdh.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000003470 /* secp256k1_recovery.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001370 /* secp256k1_recovery.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000003480 /* basic-config.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001380 /* basic-config.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003490 /* ecdsa.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001390 /* ecdsa.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000034A0 /* ecdsa_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000013A0 /* ecdsa_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000034B0 /* eckey.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000013B0 /* eckey.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000034C0 /* eckey_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000013C0 /* eckey_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000034D0 /* ecmult.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000013D0 /* ecmult.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000034E0 /* ecmult_const.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000013E0 /* ecmult_const.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000034F0 /* ecmult_const_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000013F0 /* ecmult_const_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003500 /* ecmult_gen.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001400 /* ecmult_gen.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003510 /* ecmult_gen_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001410 /* ecmult_gen_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003520 /* ecmult_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001420 /* ecmult_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003530 /* field.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001430 /* field.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003540 /* field_10x26.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001440 /* field_10x26.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003550 /* field_10x26_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001450 /* field_10x26_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003560 /* field_5x52.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001460 /* field_5x52.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003570 /* field_5x52_asm_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001470 /* field_5x52_asm_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003580 /* field_5x52_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001480 /* field_5x52_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003590 /* field_5x52_int128_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001490 /* field_5x52_int128_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000035A0 /* field_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000014A0 /* field_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000035B0 /* group.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000014B0 /* group.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000035C0 /* group_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000014C0 /* group_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000035D0 /* hash.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000014D0 /* hash.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000035E0 /* hash_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000014E0 /* hash_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000035F0 /* num.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000014F0 /* num.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003600 /* num_gmp.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001500 /* num_gmp.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003610 /* num_gmp_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001510 /* num_gmp_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003620 /* num_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001520 /* num_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003630 /* scalar.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001530 /* scalar.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003640 /* scalar_4x64.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001540 /* scalar_4x64.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003650 /* scalar_4x64_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001550 /* scalar_4x64_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003660 /* scalar_8x32.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001560 /* scalar_8x32.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003670 /* scalar_8x32_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001570 /* scalar_8x32_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003680 /* scalar_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001580 /* scalar_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003690 /* scalar_low.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001590 /* scalar_low.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000036A0 /* scalar_low_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000015A0 /* scalar_low_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000036B0 /* scratch.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000015B0 /* scratch.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000036C0 /* scratch_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000015C0 /* scratch_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000036D0 /* util.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000015E0 /* util.h */; settings = {ATTRIBUTES = (Private, ); }; };
		0000000036E0 /* main_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000015F0 /* main_impl.h */; settings = {ATTRIBUTES = (Project, ); }; };
		0000000036F0 /* main_impl.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001600 /* main_impl.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003700 /* secp256k1-config.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001610 /* secp256k1-config.h */; settings = {ATTRIBUTES = (Project, ); }; };
		000000003710 /* secp256k1_main.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001620 /* secp256k1_main.h */; settings = {ATTRIBUTES = (Project, ); }; };
		000000003720 /* secp256k1_ec_mult_static_context.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000001630 /* secp256k1_ec_mult_static_context.h */; settings = {ATTRIBUTES = (Private, ); }; };
		000000003770 /* secp256k1.swift-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000003760 /* secp256k1.swift-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		0000000037B0 /* secp256k1.swift-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 0000000037A0 /* secp256k1.swift-dummy.m */; };
		000000003850 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		0000000038C0 /* Pods-imKeyConnector_Example-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 0000000038B0 /* Pods-imKeyConnector_Example-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000003920 /* Pods-imKeyConnector_Example-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000003910 /* Pods-imKeyConnector_Example-dummy.m */; };
		0000000039C0 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000001860 /* Foundation.framework */; };
		000000003A30 /* Pods-imKeyConnector_Tests-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 000000003A20 /* Pods-imKeyConnector_Tests-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
		000000003A90 /* Pods-imKeyConnector_Tests-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 000000003A80 /* Pods-imKeyConnector_Tests-dummy.m */; };
		000000003AB0 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003AA0 /* UIKit.framework */; };
		000000003AD0 /* XCTest.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003AC0 /* XCTest.framework */; };
		000000003AE0 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003AA0 /* UIKit.framework */; };
		000000003B00 /* QuartzCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003AF0 /* QuartzCore.framework */; };
		000000003B60 /* SipHash.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003B50 /* SipHash.framework */; };
		000000003C60 /* CryptoSwift.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003C50 /* CryptoSwift.framework */; };
		000000003CA0 /* BigInt.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003C90 /* BigInt.framework */; };
		000000003CE0 /* CoreBitcoin.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003CD0 /* CoreBitcoin.framework */; };
		000000003D20 /* secp256k1.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003D10 /* secp256k1.framework */; };
		000000003D60 /* OrderedDictionary.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003D50 /* OrderedDictionary.framework */; };
		000000003D90 /* SipHash.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 000000003B50 /* SipHash.framework */; };
		D83079A82370B93500E58044 /* libconnector.a in Frameworks */ = {isa = PBXBuildFile; fileRef = D83079A62370B93400E58044 /* libconnector.a */; };
		D83079A92370B93500E58044 /* connector.h in Headers */ = {isa = PBXBuildFile; fileRef = D83079A72370B93500E58044 /* connector.h */; settings = {ATTRIBUTES = (Public, ); }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		000000003B10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0000000017C0;
			remoteInfo = BigInt;
		};
		000000003B30 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002D10;
			remoteInfo = SipHash;
		};
		000000003B70 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000001A70;
			remoteInfo = CoreBitcoin;
		};
		000000003B90 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002300;
			remoteInfo = CryptoSwift;
		};
		000000003BB0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002A80;
			remoteInfo = LTHRadioButton;
		};
		000000003BD0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002BC0;
			remoteInfo = OrderedDictionary;
		};
		000000003BF0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002D10;
			remoteInfo = SipHash;
		};
		000000003C10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002E80;
			remoteInfo = imKeyConnector;
		};
		000000003C30 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002300;
			remoteInfo = CryptoSwift;
		};
		000000003C70 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0000000017C0;
			remoteInfo = BigInt;
		};
		000000003CB0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000001A70;
			remoteInfo = CoreBitcoin;
		};
		000000003CF0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000003360;
			remoteInfo = secp256k1.swift;
		};
		000000003D30 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002BC0;
			remoteInfo = OrderedDictionary;
		};
		000000003D70 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002D10;
			remoteInfo = SipHash;
		};
		000000003DA0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000003360;
			remoteInfo = secp256k1.swift;
		};
		000000003DC0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0000000037C0;
			remoteInfo = "Pods-imKeyConnector_Example";
		};
		000000003DE0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 000000000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 000000002860;
			remoteInfo = FBSnapshotTestCase;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		000000000140 /* Podfile */ = {isa = PBXFileReference; explicitFileType = text.script.ruby; includeInIndex = 1; name = Podfile; path = ../Podfile; sourceTree = SOURCE_ROOT; xcLanguageSpecificationIdentifier = xcode.lang.ruby; };
		000000000150 /* Addition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Addition.swift; path = sources/Addition.swift; sourceTree = "<group>"; };
		000000000160 /* BigInt.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BigInt.swift; path = sources/BigInt.swift; sourceTree = "<group>"; };
		000000000170 /* BigUInt.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BigUInt.swift; path = sources/BigUInt.swift; sourceTree = "<group>"; };
		000000000180 /* Bitwise Ops.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Bitwise Ops.swift"; path = "sources/Bitwise Ops.swift"; sourceTree = "<group>"; };
		000000000190 /* Codable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Codable.swift; path = sources/Codable.swift; sourceTree = "<group>"; };
		0000000001A0 /* Comparable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Comparable.swift; path = sources/Comparable.swift; sourceTree = "<group>"; };
		0000000001B0 /* Data Conversion.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Data Conversion.swift"; path = "sources/Data Conversion.swift"; sourceTree = "<group>"; };
		0000000001C0 /* Division.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Division.swift; path = sources/Division.swift; sourceTree = "<group>"; };
		0000000001D0 /* Exponentiation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Exponentiation.swift; path = sources/Exponentiation.swift; sourceTree = "<group>"; };
		0000000001E0 /* Floating Point Conversion.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Floating Point Conversion.swift"; path = "sources/Floating Point Conversion.swift"; sourceTree = "<group>"; };
		0000000001F0 /* GCD.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = GCD.swift; path = sources/GCD.swift; sourceTree = "<group>"; };
		000000000200 /* Hashable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Hashable.swift; path = sources/Hashable.swift; sourceTree = "<group>"; };
		000000000210 /* Integer Conversion.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Integer Conversion.swift"; path = "sources/Integer Conversion.swift"; sourceTree = "<group>"; };
		000000000220 /* Multiplication.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Multiplication.swift; path = sources/Multiplication.swift; sourceTree = "<group>"; };
		000000000230 /* Prime Test.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Prime Test.swift"; path = "sources/Prime Test.swift"; sourceTree = "<group>"; };
		000000000240 /* Random.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Random.swift; path = sources/Random.swift; sourceTree = "<group>"; };
		000000000250 /* Shifts.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Shifts.swift; path = sources/Shifts.swift; sourceTree = "<group>"; };
		000000000260 /* Square Root.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Square Root.swift"; path = "sources/Square Root.swift"; sourceTree = "<group>"; };
		000000000270 /* Strideable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Strideable.swift; path = sources/Strideable.swift; sourceTree = "<group>"; };
		000000000280 /* String Conversion.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "String Conversion.swift"; path = "sources/String Conversion.swift"; sourceTree = "<group>"; };
		000000000290 /* Subtraction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Subtraction.swift; path = sources/Subtraction.swift; sourceTree = "<group>"; };
		0000000002A0 /* Words and Bits.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Words and Bits.swift"; path = "sources/Words and Bits.swift"; sourceTree = "<group>"; };
		0000000002B0 /* BTC256.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTC256.h; path = CoreBitcoin/BTC256.h; sourceTree = "<group>"; };
		0000000002C0 /* BTC256.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTC256.m; path = CoreBitcoin/BTC256.m; sourceTree = "<group>"; };
		0000000002D0 /* BTCAddress.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCAddress.h; path = CoreBitcoin/BTCAddress.h; sourceTree = "<group>"; };
		0000000002E0 /* BTCAddress.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCAddress.m; path = CoreBitcoin/BTCAddress.m; sourceTree = "<group>"; };
		0000000002F0 /* BTCAddressSubclass.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCAddressSubclass.h; path = CoreBitcoin/BTCAddressSubclass.h; sourceTree = "<group>"; };
		000000000300 /* BTCAssetAddress.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCAssetAddress.h; path = CoreBitcoin/BTCAssetAddress.h; sourceTree = "<group>"; };
		000000000310 /* BTCAssetAddress.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCAssetAddress.m; path = CoreBitcoin/BTCAssetAddress.m; sourceTree = "<group>"; };
		000000000320 /* BTCAssetID.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCAssetID.h; path = CoreBitcoin/BTCAssetID.h; sourceTree = "<group>"; };
		000000000330 /* BTCAssetID.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCAssetID.m; path = CoreBitcoin/BTCAssetID.m; sourceTree = "<group>"; };
		000000000340 /* BTCAssetType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCAssetType.h; path = CoreBitcoin/BTCAssetType.h; sourceTree = "<group>"; };
		000000000350 /* BTCAssetType.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCAssetType.m; path = CoreBitcoin/BTCAssetType.m; sourceTree = "<group>"; };
		000000000360 /* BTCBase58.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCBase58.h; path = CoreBitcoin/BTCBase58.h; sourceTree = "<group>"; };
		000000000370 /* BTCBase58.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCBase58.m; path = CoreBitcoin/BTCBase58.m; sourceTree = "<group>"; };
		000000000380 /* BTCBigNumber.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCBigNumber.h; path = CoreBitcoin/BTCBigNumber.h; sourceTree = "<group>"; };
		000000000390 /* BTCBigNumber.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCBigNumber.m; path = CoreBitcoin/BTCBigNumber.m; sourceTree = "<group>"; };
		0000000003A0 /* BTCBitcoinURL.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCBitcoinURL.h; path = CoreBitcoin/BTCBitcoinURL.h; sourceTree = "<group>"; };
		0000000003B0 /* BTCBitcoinURL.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCBitcoinURL.m; path = CoreBitcoin/BTCBitcoinURL.m; sourceTree = "<group>"; };
		0000000003C0 /* BTCBlindSignature.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCBlindSignature.h; path = CoreBitcoin/BTCBlindSignature.h; sourceTree = "<group>"; };
		0000000003D0 /* BTCBlindSignature.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCBlindSignature.m; path = CoreBitcoin/BTCBlindSignature.m; sourceTree = "<group>"; };
		0000000003E0 /* BTCBlock.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCBlock.h; path = CoreBitcoin/BTCBlock.h; sourceTree = "<group>"; };
		0000000003F0 /* BTCBlock.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCBlock.m; path = CoreBitcoin/BTCBlock.m; sourceTree = "<group>"; };
		000000000400 /* BTCBlockchainInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCBlockchainInfo.h; path = CoreBitcoin/BTCBlockchainInfo.h; sourceTree = "<group>"; };
		000000000410 /* BTCBlockchainInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCBlockchainInfo.m; path = CoreBitcoin/BTCBlockchainInfo.m; sourceTree = "<group>"; };
		000000000420 /* BTCBlockHeader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCBlockHeader.h; path = CoreBitcoin/BTCBlockHeader.h; sourceTree = "<group>"; };
		000000000430 /* BTCBlockHeader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCBlockHeader.m; path = CoreBitcoin/BTCBlockHeader.m; sourceTree = "<group>"; };
		000000000440 /* BTCChainCom.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCChainCom.h; path = CoreBitcoin/BTCChainCom.h; sourceTree = "<group>"; };
		000000000450 /* BTCChainCom.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCChainCom.m; path = CoreBitcoin/BTCChainCom.m; sourceTree = "<group>"; };
		000000000460 /* BTCCurrencyConverter.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCCurrencyConverter.h; path = CoreBitcoin/BTCCurrencyConverter.h; sourceTree = "<group>"; };
		000000000470 /* BTCCurrencyConverter.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCCurrencyConverter.m; path = CoreBitcoin/BTCCurrencyConverter.m; sourceTree = "<group>"; };
		000000000480 /* BTCCurvePoint.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCCurvePoint.h; path = CoreBitcoin/BTCCurvePoint.h; sourceTree = "<group>"; };
		000000000490 /* BTCCurvePoint.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCCurvePoint.m; path = CoreBitcoin/BTCCurvePoint.m; sourceTree = "<group>"; };
		0000000004A0 /* BTCData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCData.h; path = CoreBitcoin/BTCData.h; sourceTree = "<group>"; };
		0000000004B0 /* BTCData.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCData.m; path = CoreBitcoin/BTCData.m; sourceTree = "<group>"; };
		0000000004C0 /* BTCEncryptedBackup.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCEncryptedBackup.h; path = CoreBitcoin/BTCEncryptedBackup.h; sourceTree = "<group>"; };
		0000000004D0 /* BTCEncryptedBackup.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCEncryptedBackup.m; path = CoreBitcoin/BTCEncryptedBackup.m; sourceTree = "<group>"; };
		0000000004E0 /* BTCEncryptedMessage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCEncryptedMessage.h; path = CoreBitcoin/BTCEncryptedMessage.h; sourceTree = "<group>"; };
		0000000004F0 /* BTCEncryptedMessage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCEncryptedMessage.m; path = CoreBitcoin/BTCEncryptedMessage.m; sourceTree = "<group>"; };
		000000000500 /* BTCErrors.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCErrors.h; path = CoreBitcoin/BTCErrors.h; sourceTree = "<group>"; };
		000000000510 /* BTCErrors.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCErrors.m; path = CoreBitcoin/BTCErrors.m; sourceTree = "<group>"; };
		000000000520 /* BTCFancyEncryptedMessage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCFancyEncryptedMessage.h; path = CoreBitcoin/BTCFancyEncryptedMessage.h; sourceTree = "<group>"; };
		000000000530 /* BTCFancyEncryptedMessage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCFancyEncryptedMessage.m; path = CoreBitcoin/BTCFancyEncryptedMessage.m; sourceTree = "<group>"; };
		000000000540 /* BTCHashID.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCHashID.h; path = CoreBitcoin/BTCHashID.h; sourceTree = "<group>"; };
		000000000550 /* BTCHashID.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCHashID.m; path = CoreBitcoin/BTCHashID.m; sourceTree = "<group>"; };
		000000000560 /* BTCKey.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCKey.h; path = CoreBitcoin/BTCKey.h; sourceTree = "<group>"; };
		000000000570 /* BTCKey.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCKey.m; path = CoreBitcoin/BTCKey.m; sourceTree = "<group>"; };
		000000000580 /* BTCKeychain.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCKeychain.h; path = CoreBitcoin/BTCKeychain.h; sourceTree = "<group>"; };
		000000000590 /* BTCKeychain.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCKeychain.m; path = CoreBitcoin/BTCKeychain.m; sourceTree = "<group>"; };
		0000000005A0 /* BTCMerkleTree.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCMerkleTree.h; path = CoreBitcoin/BTCMerkleTree.h; sourceTree = "<group>"; };
		0000000005B0 /* BTCMerkleTree.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCMerkleTree.m; path = CoreBitcoin/BTCMerkleTree.m; sourceTree = "<group>"; };
		0000000005C0 /* BTCMnemonic.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCMnemonic.h; path = CoreBitcoin/BTCMnemonic.h; sourceTree = "<group>"; };
		0000000005D0 /* BTCMnemonic.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCMnemonic.m; path = CoreBitcoin/BTCMnemonic.m; sourceTree = "<group>"; };
		0000000005E0 /* BTCNetwork.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCNetwork.h; path = CoreBitcoin/BTCNetwork.h; sourceTree = "<group>"; };
		0000000005F0 /* BTCNetwork.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCNetwork.m; path = CoreBitcoin/BTCNetwork.m; sourceTree = "<group>"; };
		000000000600 /* BTCNumberFormatter.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCNumberFormatter.h; path = CoreBitcoin/BTCNumberFormatter.h; sourceTree = "<group>"; };
		000000000610 /* BTCNumberFormatter.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCNumberFormatter.m; path = CoreBitcoin/BTCNumberFormatter.m; sourceTree = "<group>"; };
		000000000620 /* BTCOpcode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCOpcode.h; path = CoreBitcoin/BTCOpcode.h; sourceTree = "<group>"; };
		000000000630 /* BTCOpcode.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCOpcode.m; path = CoreBitcoin/BTCOpcode.m; sourceTree = "<group>"; };
		000000000640 /* BTCOutpoint.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCOutpoint.h; path = CoreBitcoin/BTCOutpoint.h; sourceTree = "<group>"; };
		000000000650 /* BTCOutpoint.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCOutpoint.m; path = CoreBitcoin/BTCOutpoint.m; sourceTree = "<group>"; };
		000000000660 /* BTCPaymentMethod.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCPaymentMethod.h; path = CoreBitcoin/BTCPaymentMethod.h; sourceTree = "<group>"; };
		000000000670 /* BTCPaymentMethod.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCPaymentMethod.m; path = CoreBitcoin/BTCPaymentMethod.m; sourceTree = "<group>"; };
		000000000680 /* BTCPaymentMethodDetails.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCPaymentMethodDetails.h; path = CoreBitcoin/BTCPaymentMethodDetails.h; sourceTree = "<group>"; };
		000000000690 /* BTCPaymentMethodDetails.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCPaymentMethodDetails.m; path = CoreBitcoin/BTCPaymentMethodDetails.m; sourceTree = "<group>"; };
		0000000006A0 /* BTCPaymentMethodRequest.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCPaymentMethodRequest.h; path = CoreBitcoin/BTCPaymentMethodRequest.h; sourceTree = "<group>"; };
		0000000006B0 /* BTCPaymentMethodRequest.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCPaymentMethodRequest.m; path = CoreBitcoin/BTCPaymentMethodRequest.m; sourceTree = "<group>"; };
		0000000006C0 /* BTCPaymentProtocol.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCPaymentProtocol.h; path = CoreBitcoin/BTCPaymentProtocol.h; sourceTree = "<group>"; };
		0000000006D0 /* BTCPaymentProtocol.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCPaymentProtocol.m; path = CoreBitcoin/BTCPaymentProtocol.m; sourceTree = "<group>"; };
		0000000006E0 /* BTCPaymentRequest.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCPaymentRequest.h; path = CoreBitcoin/BTCPaymentRequest.h; sourceTree = "<group>"; };
		0000000006F0 /* BTCPaymentRequest.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCPaymentRequest.m; path = CoreBitcoin/BTCPaymentRequest.m; sourceTree = "<group>"; };
		000000000700 /* BTCPriceSource.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCPriceSource.h; path = CoreBitcoin/BTCPriceSource.h; sourceTree = "<group>"; };
		000000000710 /* BTCPriceSource.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCPriceSource.m; path = CoreBitcoin/BTCPriceSource.m; sourceTree = "<group>"; };
		000000000720 /* BTCProcessor.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCProcessor.h; path = CoreBitcoin/BTCProcessor.h; sourceTree = "<group>"; };
		000000000730 /* BTCProcessor.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCProcessor.m; path = CoreBitcoin/BTCProcessor.m; sourceTree = "<group>"; };
		000000000740 /* BTCProtocolBuffers.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCProtocolBuffers.h; path = CoreBitcoin/BTCProtocolBuffers.h; sourceTree = "<group>"; };
		000000000750 /* BTCProtocolBuffers.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCProtocolBuffers.m; path = CoreBitcoin/BTCProtocolBuffers.m; sourceTree = "<group>"; };
		000000000760 /* BTCProtocolSerialization.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCProtocolSerialization.h; path = CoreBitcoin/BTCProtocolSerialization.h; sourceTree = "<group>"; };
		000000000770 /* BTCProtocolSerialization.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCProtocolSerialization.m; path = CoreBitcoin/BTCProtocolSerialization.m; sourceTree = "<group>"; };
		000000000780 /* BTCQRCode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCQRCode.h; path = CoreBitcoin/BTCQRCode.h; sourceTree = "<group>"; };
		000000000790 /* BTCQRCode.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCQRCode.m; path = CoreBitcoin/BTCQRCode.m; sourceTree = "<group>"; };
		0000000007A0 /* BTCScript.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCScript.h; path = CoreBitcoin/BTCScript.h; sourceTree = "<group>"; };
		0000000007B0 /* BTCScript.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCScript.m; path = CoreBitcoin/BTCScript.m; sourceTree = "<group>"; };
		0000000007C0 /* BTCScriptMachine.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCScriptMachine.h; path = CoreBitcoin/BTCScriptMachine.h; sourceTree = "<group>"; };
		0000000007D0 /* BTCScriptMachine.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCScriptMachine.m; path = CoreBitcoin/BTCScriptMachine.m; sourceTree = "<group>"; };
		0000000007E0 /* BTCScriptTestData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCScriptTestData.h; path = CoreBitcoin/BTCScriptTestData.h; sourceTree = "<group>"; };
		0000000007F0 /* BTCSecretSharing.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCSecretSharing.h; path = CoreBitcoin/BTCSecretSharing.h; sourceTree = "<group>"; };
		000000000800 /* BTCSecretSharing.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCSecretSharing.m; path = CoreBitcoin/BTCSecretSharing.m; sourceTree = "<group>"; };
		000000000810 /* BTCSignatureHashType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCSignatureHashType.h; path = CoreBitcoin/BTCSignatureHashType.h; sourceTree = "<group>"; };
		000000000820 /* BTCTransaction.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCTransaction.h; path = CoreBitcoin/BTCTransaction.h; sourceTree = "<group>"; };
		000000000830 /* BTCTransaction.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCTransaction.m; path = CoreBitcoin/BTCTransaction.m; sourceTree = "<group>"; };
		000000000840 /* BTCTransactionBuilder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCTransactionBuilder.h; path = CoreBitcoin/BTCTransactionBuilder.h; sourceTree = "<group>"; };
		000000000850 /* BTCTransactionBuilder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCTransactionBuilder.m; path = CoreBitcoin/BTCTransactionBuilder.m; sourceTree = "<group>"; };
		000000000860 /* BTCTransactionInput.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCTransactionInput.h; path = CoreBitcoin/BTCTransactionInput.h; sourceTree = "<group>"; };
		000000000870 /* BTCTransactionInput.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCTransactionInput.m; path = CoreBitcoin/BTCTransactionInput.m; sourceTree = "<group>"; };
		000000000880 /* BTCTransactionOutput.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCTransactionOutput.h; path = CoreBitcoin/BTCTransactionOutput.h; sourceTree = "<group>"; };
		000000000890 /* BTCTransactionOutput.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = BTCTransactionOutput.m; path = CoreBitcoin/BTCTransactionOutput.m; sourceTree = "<group>"; };
		0000000008A0 /* BTCUnitsAndLimits.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = BTCUnitsAndLimits.h; path = CoreBitcoin/BTCUnitsAndLimits.h; sourceTree = "<group>"; };
		0000000008B0 /* CoreBitcoin.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CoreBitcoin.h; path = CoreBitcoin/CoreBitcoin.h; sourceTree = "<group>"; };
		0000000008C0 /* NS+BTCBase58.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NS+BTCBase58.h"; path = "CoreBitcoin/NS+BTCBase58.h"; sourceTree = "<group>"; };
		0000000008D0 /* NS+BTCBase58.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NS+BTCBase58.m"; path = "CoreBitcoin/NS+BTCBase58.m"; sourceTree = "<group>"; };
		0000000008E0 /* NSData+BTCData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSData+BTCData.h"; path = "CoreBitcoin/NSData+BTCData.h"; sourceTree = "<group>"; };
		0000000008F0 /* NSData+BTCData.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSData+BTCData.m"; path = "CoreBitcoin/NSData+BTCData.m"; sourceTree = "<group>"; };
		000000000900 /* segwit_addr.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = segwit_addr.c; path = CoreBitcoin/segwit_addr.c; sourceTree = "<group>"; };
		000000000910 /* segwit_addr.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = segwit_addr.h; path = CoreBitcoin/segwit_addr.h; sourceTree = "<group>"; };
		000000000920 /* b64.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = b64.c; path = libscrypt/b64.c; sourceTree = "<group>"; };
		000000000930 /* b64.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = b64.h; path = libscrypt/b64.h; sourceTree = "<group>"; };
		000000000940 /* crypto-mcf.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = "crypto-mcf.c"; path = "libscrypt/crypto-mcf.c"; sourceTree = "<group>"; };
		000000000950 /* crypto-scrypt-saltgen.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = "crypto-scrypt-saltgen.c"; path = "libscrypt/crypto-scrypt-saltgen.c"; sourceTree = "<group>"; };
		000000000960 /* crypto_scrypt-check.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = "crypto_scrypt-check.c"; path = "libscrypt/crypto_scrypt-check.c"; sourceTree = "<group>"; };
		000000000970 /* crypto_scrypt-hash.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = "crypto_scrypt-hash.c"; path = "libscrypt/crypto_scrypt-hash.c"; sourceTree = "<group>"; };
		000000000980 /* crypto_scrypt-hexconvert.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = "crypto_scrypt-hexconvert.c"; path = "libscrypt/crypto_scrypt-hexconvert.c"; sourceTree = "<group>"; };
		000000000990 /* crypto_scrypt-hexconvert.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "crypto_scrypt-hexconvert.h"; path = "libscrypt/crypto_scrypt-hexconvert.h"; sourceTree = "<group>"; };
		0000000009A0 /* crypto_scrypt-nosse.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = "crypto_scrypt-nosse.c"; path = "libscrypt/crypto_scrypt-nosse.c"; sourceTree = "<group>"; };
		0000000009B0 /* libscrypt.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = libscrypt.h; path = libscrypt/libscrypt.h; sourceTree = "<group>"; };
		0000000009C0 /* sha256.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = sha256.c; path = libscrypt/sha256.c; sourceTree = "<group>"; };
		0000000009D0 /* sha256.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = sha256.h; path = libscrypt/sha256.h; sourceTree = "<group>"; };
		0000000009E0 /* slowequals.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = slowequals.c; path = libscrypt/slowequals.c; sourceTree = "<group>"; };
		0000000009F0 /* slowequals.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = slowequals.h; path = libscrypt/slowequals.h; sourceTree = "<group>"; };
		000000000A00 /* sysendian.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = sysendian.h; path = libscrypt/sysendian.h; sourceTree = "<group>"; };
		000000000A10 /* AEAD.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AEAD.swift; path = Sources/CryptoSwift/AEAD/AEAD.swift; sourceTree = "<group>"; };
		000000000A20 /* AEADChaCha20Poly1305.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AEADChaCha20Poly1305.swift; path = Sources/CryptoSwift/AEAD/AEADChaCha20Poly1305.swift; sourceTree = "<group>"; };
		000000000A30 /* AES.Cryptors.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AES.Cryptors.swift; path = Sources/CryptoSwift/AES.Cryptors.swift; sourceTree = "<group>"; };
		000000000A40 /* AES.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AES.swift; path = Sources/CryptoSwift/AES.swift; sourceTree = "<group>"; };
		000000000A50 /* Array+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Array+Extension.swift"; path = "Sources/CryptoSwift/Array+Extension.swift"; sourceTree = "<group>"; };
		000000000A60 /* Authenticator.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Authenticator.swift; path = Sources/CryptoSwift/Authenticator.swift; sourceTree = "<group>"; };
		000000000A70 /* BatchedCollection.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BatchedCollection.swift; path = Sources/CryptoSwift/BatchedCollection.swift; sourceTree = "<group>"; };
		000000000A80 /* Bit.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Bit.swift; path = Sources/CryptoSwift/Bit.swift; sourceTree = "<group>"; };
		000000000A90 /* BlockCipher.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BlockCipher.swift; path = Sources/CryptoSwift/BlockCipher.swift; sourceTree = "<group>"; };
		000000000AA0 /* BlockMode.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BlockMode.swift; path = Sources/CryptoSwift/BlockMode/BlockMode.swift; sourceTree = "<group>"; };
		000000000AB0 /* BlockModeOptions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BlockModeOptions.swift; path = Sources/CryptoSwift/BlockMode/BlockModeOptions.swift; sourceTree = "<group>"; };
		000000000AC0 /* BlockModeWorker.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BlockModeWorker.swift; path = Sources/CryptoSwift/BlockMode/BlockModeWorker.swift; sourceTree = "<group>"; };
		000000000AD0 /* CBC.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CBC.swift; path = Sources/CryptoSwift/BlockMode/CBC.swift; sourceTree = "<group>"; };
		000000000AE0 /* CFB.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CFB.swift; path = Sources/CryptoSwift/BlockMode/CFB.swift; sourceTree = "<group>"; };
		000000000AF0 /* CTR.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CTR.swift; path = Sources/CryptoSwift/BlockMode/CTR.swift; sourceTree = "<group>"; };
		000000000B00 /* ECB.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ECB.swift; path = Sources/CryptoSwift/BlockMode/ECB.swift; sourceTree = "<group>"; };
		000000000B10 /* OFB.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = OFB.swift; path = Sources/CryptoSwift/BlockMode/OFB.swift; sourceTree = "<group>"; };
		000000000B20 /* PCBC.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PCBC.swift; path = Sources/CryptoSwift/BlockMode/PCBC.swift; sourceTree = "<group>"; };
		000000000B30 /* RandomAccessBlockModeWorker.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RandomAccessBlockModeWorker.swift; path = Sources/CryptoSwift/BlockMode/RandomAccessBlockModeWorker.swift; sourceTree = "<group>"; };
		000000000B40 /* Blowfish.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Blowfish.swift; path = Sources/CryptoSwift/Blowfish.swift; sourceTree = "<group>"; };
		000000000B50 /* ChaCha20.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ChaCha20.swift; path = Sources/CryptoSwift/ChaCha20.swift; sourceTree = "<group>"; };
		000000000B60 /* Checksum.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Checksum.swift; path = Sources/CryptoSwift/Checksum.swift; sourceTree = "<group>"; };
		000000000B70 /* Cipher.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Cipher.swift; path = Sources/CryptoSwift/Cipher.swift; sourceTree = "<group>"; };
		000000000B80 /* CMAC.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CMAC.swift; path = Sources/CryptoSwift/CMAC.swift; sourceTree = "<group>"; };
		000000000B90 /* Collection+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Collection+Extension.swift"; path = "Sources/CryptoSwift/Collection+Extension.swift"; sourceTree = "<group>"; };
		000000000BA0 /* CompactMap.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CompactMap.swift; path = Sources/CryptoSwift/CompactMap.swift; sourceTree = "<group>"; };
		000000000BB0 /* Cryptors.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Cryptors.swift; path = Sources/CryptoSwift/Cryptors.swift; sourceTree = "<group>"; };
		000000000BC0 /* Digest.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Digest.swift; path = Sources/CryptoSwift/Digest.swift; sourceTree = "<group>"; };
		000000000BD0 /* DigestType.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = DigestType.swift; path = Sources/CryptoSwift/DigestType.swift; sourceTree = "<group>"; };
		000000000BE0 /* AES+Foundation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "AES+Foundation.swift"; path = "Sources/CryptoSwift/Foundation/AES+Foundation.swift"; sourceTree = "<group>"; };
		000000000BF0 /* Array+Foundation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Array+Foundation.swift"; path = "Sources/CryptoSwift/Foundation/Array+Foundation.swift"; sourceTree = "<group>"; };
		000000000C00 /* Blowfish+Foundation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Blowfish+Foundation.swift"; path = "Sources/CryptoSwift/Foundation/Blowfish+Foundation.swift"; sourceTree = "<group>"; };
		000000000C10 /* ChaCha20+Foundation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "ChaCha20+Foundation.swift"; path = "Sources/CryptoSwift/Foundation/ChaCha20+Foundation.swift"; sourceTree = "<group>"; };
		000000000C20 /* Data+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Data+Extension.swift"; path = "Sources/CryptoSwift/Foundation/Data+Extension.swift"; sourceTree = "<group>"; };
		000000000C30 /* HMAC+Foundation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "HMAC+Foundation.swift"; path = "Sources/CryptoSwift/Foundation/HMAC+Foundation.swift"; sourceTree = "<group>"; };
		000000000C40 /* Rabbit+Foundation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Rabbit+Foundation.swift"; path = "Sources/CryptoSwift/Foundation/Rabbit+Foundation.swift"; sourceTree = "<group>"; };
		000000000C50 /* String+FoundationExtension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "String+FoundationExtension.swift"; path = "Sources/CryptoSwift/Foundation/String+FoundationExtension.swift"; sourceTree = "<group>"; };
		000000000C60 /* Utils+Foundation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Utils+Foundation.swift"; path = "Sources/CryptoSwift/Foundation/Utils+Foundation.swift"; sourceTree = "<group>"; };
		000000000C70 /* Generics.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Generics.swift; path = Sources/CryptoSwift/Generics.swift; sourceTree = "<group>"; };
		000000000C80 /* HKDF.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = HKDF.swift; path = Sources/CryptoSwift/HKDF.swift; sourceTree = "<group>"; };
		000000000C90 /* HMAC.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = HMAC.swift; path = Sources/CryptoSwift/HMAC.swift; sourceTree = "<group>"; };
		000000000CA0 /* Int+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Int+Extension.swift"; path = "Sources/CryptoSwift/Int+Extension.swift"; sourceTree = "<group>"; };
		000000000CB0 /* MD5.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MD5.swift; path = Sources/CryptoSwift/MD5.swift; sourceTree = "<group>"; };
		000000000CC0 /* NoPadding.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = NoPadding.swift; path = Sources/CryptoSwift/NoPadding.swift; sourceTree = "<group>"; };
		000000000CD0 /* Operators.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Operators.swift; path = Sources/CryptoSwift/Operators.swift; sourceTree = "<group>"; };
		000000000CE0 /* Padding.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Padding.swift; path = Sources/CryptoSwift/Padding.swift; sourceTree = "<group>"; };
		000000000CF0 /* PBKDF1.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PBKDF1.swift; path = Sources/CryptoSwift/PKCS/PBKDF1.swift; sourceTree = "<group>"; };
		000000000D00 /* PBKDF2.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PBKDF2.swift; path = Sources/CryptoSwift/PKCS/PBKDF2.swift; sourceTree = "<group>"; };
		000000000D10 /* PKCS5.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PKCS5.swift; path = Sources/CryptoSwift/PKCS/PKCS5.swift; sourceTree = "<group>"; };
		000000000D20 /* PKCS7.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PKCS7.swift; path = Sources/CryptoSwift/PKCS/PKCS7.swift; sourceTree = "<group>"; };
		000000000D30 /* PKCS7Padding.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PKCS7Padding.swift; path = Sources/CryptoSwift/PKCS/PKCS7Padding.swift; sourceTree = "<group>"; };
		000000000D40 /* Poly1305.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Poly1305.swift; path = Sources/CryptoSwift/Poly1305.swift; sourceTree = "<group>"; };
		000000000D50 /* Rabbit.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Rabbit.swift; path = Sources/CryptoSwift/Rabbit.swift; sourceTree = "<group>"; };
		000000000D60 /* RandomAccessCryptor.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RandomAccessCryptor.swift; path = Sources/CryptoSwift/RandomAccessCryptor.swift; sourceTree = "<group>"; };
		000000000D70 /* RandomBytesSequence.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RandomBytesSequence.swift; path = Sources/CryptoSwift/RandomBytesSequence.swift; sourceTree = "<group>"; };
		000000000D80 /* SecureBytes.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SecureBytes.swift; path = Sources/CryptoSwift/SecureBytes.swift; sourceTree = "<group>"; };
		000000000D90 /* SHA1.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SHA1.swift; path = Sources/CryptoSwift/SHA1.swift; sourceTree = "<group>"; };
		000000000DA0 /* SHA2.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SHA2.swift; path = Sources/CryptoSwift/SHA2.swift; sourceTree = "<group>"; };
		000000000DB0 /* SHA3.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SHA3.swift; path = Sources/CryptoSwift/SHA3.swift; sourceTree = "<group>"; };
		000000000DC0 /* String+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "String+Extension.swift"; path = "Sources/CryptoSwift/String+Extension.swift"; sourceTree = "<group>"; };
		000000000DD0 /* UInt16+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UInt16+Extension.swift"; path = "Sources/CryptoSwift/UInt16+Extension.swift"; sourceTree = "<group>"; };
		000000000DE0 /* UInt32+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UInt32+Extension.swift"; path = "Sources/CryptoSwift/UInt32+Extension.swift"; sourceTree = "<group>"; };
		000000000DF0 /* UInt64+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UInt64+Extension.swift"; path = "Sources/CryptoSwift/UInt64+Extension.swift"; sourceTree = "<group>"; };
		000000000E00 /* UInt8+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UInt8+Extension.swift"; path = "Sources/CryptoSwift/UInt8+Extension.swift"; sourceTree = "<group>"; };
		000000000E10 /* Updatable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Updatable.swift; path = Sources/CryptoSwift/Updatable.swift; sourceTree = "<group>"; };
		000000000E20 /* Utils.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Utils.swift; path = Sources/CryptoSwift/Utils.swift; sourceTree = "<group>"; };
		000000000E30 /* ZeroPadding.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ZeroPadding.swift; path = Sources/CryptoSwift/ZeroPadding.swift; sourceTree = "<group>"; };
		000000000E40 /* LTHRadioButton.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = LTHRadioButton.swift; path = source/LTHRadioButton.swift; sourceTree = "<group>"; };
		000000000E50 /* OrderedDictionary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = OrderedDictionary.h; path = OrderedDictionary/OrderedDictionary.h; sourceTree = "<group>"; };
		000000000E60 /* OrderedDictionary.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = OrderedDictionary.m; path = OrderedDictionary/OrderedDictionary.m; sourceTree = "<group>"; };
		000000000E70 /* Primitive Types.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Primitive Types.swift"; path = "SipHash/Primitive Types.swift"; sourceTree = "<group>"; };
		000000000E80 /* RandomUInt64.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RandomUInt64.swift; path = SipHash/RandomUInt64.swift; sourceTree = "<group>"; };
		000000000E90 /* SipHashable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SipHashable.swift; path = SipHash/SipHashable.swift; sourceTree = "<group>"; };
		000000000EA0 /* SipHasher.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SipHasher.swift; path = SipHash/SipHasher.swift; sourceTree = "<group>"; };
		000000000EC0 /* BLE.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = BLE.swift; sourceTree = "<group>"; };
		000000000ED0 /* BLEDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = BLEDelegate.swift; sourceTree = "<group>"; };
		000000000EF0 /* APDU.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = APDU.swift; sourceTree = "<group>"; };
		000000000F00 /* Applet.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Applet.swift; sourceTree = "<group>"; };
		000000000F10 /* BIP44.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = BIP44.swift; sourceTree = "<group>"; };
		000000000F30 /* BTCKey.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = BTCKey.swift; sourceTree = "<group>"; };
		000000000F40 /* BTCTransaction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = BTCTransaction.swift; sourceTree = "<group>"; };
		000000000F50 /* BTCTransactionSigner.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = BTCTransactionSigner.swift; sourceTree = "<group>"; };
		000000000F60 /* OmniTransaction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = OmniTransaction.swift; sourceTree = "<group>"; };
		000000000F70 /* OmniTransactionSigner.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = OmniTransactionSigner.swift; sourceTree = "<group>"; };
		000000000F80 /* SegWit.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = SegWit.swift; sourceTree = "<group>"; };
		000000000FA0 /* Bech32Address.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Bech32Address.swift; sourceTree = "<group>"; };
		000000000FB0 /* CosmosHrp.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = CosmosHrp.swift; sourceTree = "<group>"; };
		000000000FC0 /* CosmosKey.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = CosmosKey.swift; sourceTree = "<group>"; };
		000000000FD0 /* CosmosTransaction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = CosmosTransaction.swift; sourceTree = "<group>"; };
		000000000FF0 /* EOSKey.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = EOSKey.swift; sourceTree = "<group>"; };
		000000001000 /* EOSSignResult.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = EOSSignResult.swift; sourceTree = "<group>"; };
		000000001010 /* EOSTransaction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = EOSTransaction.swift; sourceTree = "<group>"; };
		000000001020 /* EOSTransactionSigner.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = EOSTransactionSigner.swift; sourceTree = "<group>"; };
		000000001040 /* ETHKey.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = ETHKey.swift; sourceTree = "<group>"; };
		000000001050 /* ETHTransaction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = ETHTransaction.swift; sourceTree = "<group>"; };
		000000001060 /* ImkeyError.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = ImkeyError.swift; sourceTree = "<group>"; };
		000000001070 /* Network.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Network.swift; sourceTree = "<group>"; };
		000000001080 /* TransactionSignedResult.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = TransactionSignedResult.swift; sourceTree = "<group>"; };
		000000001090 /* Wallet.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Wallet.swift; sourceTree = "<group>"; };
		0000000010B0 /* APPDelete.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = APPDelete.swift; sourceTree = "<group>"; };
		0000000010C0 /* APPDownload.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = APPDownload.swift; sourceTree = "<group>"; };
		0000000010D0 /* APPUpdate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = APPUpdate.swift; sourceTree = "<group>"; };
		0000000010E0 /* AuthCodeStorage.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = AuthCodeStorage.swift; sourceTree = "<group>"; };
		0000000010F0 /* Constants.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Constants.swift; sourceTree = "<group>"; };
		000000001100 /* HTTP.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = HTTP.swift; sourceTree = "<group>"; };
		000000001120 /* KeyFileStorage.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = KeyFileStorage.swift; sourceTree = "<group>"; };
		000000001130 /* KeyManager.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = KeyManager.swift; sourceTree = "<group>"; };
		000000001140 /* TLVUtil.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = TLVUtil.swift; sourceTree = "<group>"; };
		000000001150 /* Manage.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Manage.swift; sourceTree = "<group>"; };
		000000001160 /* SEActive.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = SEActive.swift; sourceTree = "<group>"; };
		000000001170 /* SECertCheck.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = SECertCheck.swift; sourceTree = "<group>"; };
		000000001180 /* SECheck.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = SECheck.swift; sourceTree = "<group>"; };
		000000001190 /* SEQuery.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = SEQuery.swift; sourceTree = "<group>"; };
		0000000011A0 /* TSMReq.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = TSMReq.swift; sourceTree = "<group>"; };
		0000000011C0 /* AES128_ik.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = AES128_ik.swift; sourceTree = "<group>"; };
		0000000011D0 /* Encryptor.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Encryptor.swift; sourceTree = "<group>"; };
		0000000011E0 /* Keccak256_ik.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Keccak256_ik.swift; sourceTree = "<group>"; };
		0000000011F0 /* RSAUtils.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = RSAUtils.swift; sourceTree = "<group>"; };
		000000001200 /* Secp256k1.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Secp256k1.swift; sourceTree = "<group>"; };
		000000001210 /* imKeyConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = imKeyConnector.h; path = imKeyConnector/Classes/imKeyConnector.h; sourceTree = "<group>"; };
		000000001230 /* ErrorCodesAndMacros.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = ErrorCodesAndMacros.h; sourceTree = "<group>"; };
		000000001240 /* FTBLEDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = FTBLEDelegate.h; sourceTree = "<group>"; };
		000000001250 /* FTBLEInterface.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = FTBLEInterface.h; sourceTree = "<group>"; };
		000000001260 /* libFtBTKeyApi.a */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = archive.ar; path = libFtBTKeyApi.a; sourceTree = "<group>"; };
		000000001280 /* BigNumber.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = BigNumber.swift; sourceTree = "<group>"; };
		000000001290 /* ByteUtil.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = ByteUtil.swift; sourceTree = "<group>"; };
		0000000012A0 /* Data+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = "Data+Extension.swift"; sourceTree = "<group>"; };
		0000000012B0 /* Hex.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Hex.swift; sourceTree = "<group>"; };
		0000000012C0 /* Log.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = Log.swift; sourceTree = "<group>"; };
		0000000012D0 /* RLP.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = RLP.swift; sourceTree = "<group>"; };
		0000000012E0 /* SigUtil.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = SigUtil.swift; sourceTree = "<group>"; };
		0000000012F0 /* String+Extension.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = "String+Extension.swift"; sourceTree = "<group>"; };
		000000001300 /* ValidatorAddress.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; path = ValidatorAddress.swift; sourceTree = "<group>"; };
		000000001310 /* lax_der_parsing.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = lax_der_parsing.c; path = secp256k1/Classes/secp256k1/contrib/lax_der_parsing.c; sourceTree = "<group>"; };
		000000001320 /* lax_der_parsing.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = lax_der_parsing.h; path = secp256k1/Classes/secp256k1/contrib/lax_der_parsing.h; sourceTree = "<group>"; };
		000000001330 /* lax_der_privatekey_parsing.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = lax_der_privatekey_parsing.c; path = secp256k1/Classes/secp256k1/contrib/lax_der_privatekey_parsing.c; sourceTree = "<group>"; };
		000000001340 /* lax_der_privatekey_parsing.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = lax_der_privatekey_parsing.h; path = secp256k1/Classes/secp256k1/contrib/lax_der_privatekey_parsing.h; sourceTree = "<group>"; };
		000000001350 /* secp256k1.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = secp256k1.h; path = secp256k1/Classes/secp256k1/include/secp256k1.h; sourceTree = "<group>"; };
		000000001360 /* secp256k1_ecdh.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = secp256k1_ecdh.h; path = secp256k1/Classes/secp256k1/include/secp256k1_ecdh.h; sourceTree = "<group>"; };
		000000001370 /* secp256k1_recovery.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = secp256k1_recovery.h; path = secp256k1/Classes/secp256k1/include/secp256k1_recovery.h; sourceTree = "<group>"; };
		000000001380 /* basic-config.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "basic-config.h"; path = "secp256k1/Classes/secp256k1/src/basic-config.h"; sourceTree = "<group>"; };
		000000001390 /* ecdsa.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = ecdsa.h; path = secp256k1/Classes/secp256k1/src/ecdsa.h; sourceTree = "<group>"; };
		0000000013A0 /* ecdsa_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = ecdsa_impl.h; path = secp256k1/Classes/secp256k1/src/ecdsa_impl.h; sourceTree = "<group>"; };
		0000000013B0 /* eckey.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = eckey.h; path = secp256k1/Classes/secp256k1/src/eckey.h; sourceTree = "<group>"; };
		0000000013C0 /* eckey_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = eckey_impl.h; path = secp256k1/Classes/secp256k1/src/eckey_impl.h; sourceTree = "<group>"; };
		0000000013D0 /* ecmult.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = ecmult.h; path = secp256k1/Classes/secp256k1/src/ecmult.h; sourceTree = "<group>"; };
		0000000013E0 /* ecmult_const.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = ecmult_const.h; path = secp256k1/Classes/secp256k1/src/ecmult_const.h; sourceTree = "<group>"; };
		0000000013F0 /* ecmult_const_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = ecmult_const_impl.h; path = secp256k1/Classes/secp256k1/src/ecmult_const_impl.h; sourceTree = "<group>"; };
		000000001400 /* ecmult_gen.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = ecmult_gen.h; path = secp256k1/Classes/secp256k1/src/ecmult_gen.h; sourceTree = "<group>"; };
		000000001410 /* ecmult_gen_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = ecmult_gen_impl.h; path = secp256k1/Classes/secp256k1/src/ecmult_gen_impl.h; sourceTree = "<group>"; };
		000000001420 /* ecmult_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = ecmult_impl.h; path = secp256k1/Classes/secp256k1/src/ecmult_impl.h; sourceTree = "<group>"; };
		000000001430 /* field.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = field.h; path = secp256k1/Classes/secp256k1/src/field.h; sourceTree = "<group>"; };
		000000001440 /* field_10x26.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = field_10x26.h; path = secp256k1/Classes/secp256k1/src/field_10x26.h; sourceTree = "<group>"; };
		000000001450 /* field_10x26_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = field_10x26_impl.h; path = secp256k1/Classes/secp256k1/src/field_10x26_impl.h; sourceTree = "<group>"; };
		000000001460 /* field_5x52.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = field_5x52.h; path = secp256k1/Classes/secp256k1/src/field_5x52.h; sourceTree = "<group>"; };
		000000001470 /* field_5x52_asm_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = field_5x52_asm_impl.h; path = secp256k1/Classes/secp256k1/src/field_5x52_asm_impl.h; sourceTree = "<group>"; };
		000000001480 /* field_5x52_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = field_5x52_impl.h; path = secp256k1/Classes/secp256k1/src/field_5x52_impl.h; sourceTree = "<group>"; };
		000000001490 /* field_5x52_int128_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = field_5x52_int128_impl.h; path = secp256k1/Classes/secp256k1/src/field_5x52_int128_impl.h; sourceTree = "<group>"; };
		0000000014A0 /* field_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = field_impl.h; path = secp256k1/Classes/secp256k1/src/field_impl.h; sourceTree = "<group>"; };
		0000000014B0 /* group.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = group.h; path = secp256k1/Classes/secp256k1/src/group.h; sourceTree = "<group>"; };
		0000000014C0 /* group_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = group_impl.h; path = secp256k1/Classes/secp256k1/src/group_impl.h; sourceTree = "<group>"; };
		0000000014D0 /* hash.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = hash.h; path = secp256k1/Classes/secp256k1/src/hash.h; sourceTree = "<group>"; };
		0000000014E0 /* hash_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = hash_impl.h; path = secp256k1/Classes/secp256k1/src/hash_impl.h; sourceTree = "<group>"; };
		0000000014F0 /* num.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = num.h; path = secp256k1/Classes/secp256k1/src/num.h; sourceTree = "<group>"; };
		000000001500 /* num_gmp.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = num_gmp.h; path = secp256k1/Classes/secp256k1/src/num_gmp.h; sourceTree = "<group>"; };
		000000001510 /* num_gmp_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = num_gmp_impl.h; path = secp256k1/Classes/secp256k1/src/num_gmp_impl.h; sourceTree = "<group>"; };
		000000001520 /* num_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = num_impl.h; path = secp256k1/Classes/secp256k1/src/num_impl.h; sourceTree = "<group>"; };
		000000001530 /* scalar.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scalar.h; path = secp256k1/Classes/secp256k1/src/scalar.h; sourceTree = "<group>"; };
		000000001540 /* scalar_4x64.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scalar_4x64.h; path = secp256k1/Classes/secp256k1/src/scalar_4x64.h; sourceTree = "<group>"; };
		000000001550 /* scalar_4x64_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scalar_4x64_impl.h; path = secp256k1/Classes/secp256k1/src/scalar_4x64_impl.h; sourceTree = "<group>"; };
		000000001560 /* scalar_8x32.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scalar_8x32.h; path = secp256k1/Classes/secp256k1/src/scalar_8x32.h; sourceTree = "<group>"; };
		000000001570 /* scalar_8x32_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scalar_8x32_impl.h; path = secp256k1/Classes/secp256k1/src/scalar_8x32_impl.h; sourceTree = "<group>"; };
		000000001580 /* scalar_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scalar_impl.h; path = secp256k1/Classes/secp256k1/src/scalar_impl.h; sourceTree = "<group>"; };
		000000001590 /* scalar_low.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scalar_low.h; path = secp256k1/Classes/secp256k1/src/scalar_low.h; sourceTree = "<group>"; };
		0000000015A0 /* scalar_low_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scalar_low_impl.h; path = secp256k1/Classes/secp256k1/src/scalar_low_impl.h; sourceTree = "<group>"; };
		0000000015B0 /* scratch.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scratch.h; path = secp256k1/Classes/secp256k1/src/scratch.h; sourceTree = "<group>"; };
		0000000015C0 /* scratch_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = scratch_impl.h; path = secp256k1/Classes/secp256k1/src/scratch_impl.h; sourceTree = "<group>"; };
		0000000015D0 /* secp256k1.c */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.c; name = secp256k1.c; path = secp256k1/Classes/secp256k1/src/secp256k1.c; sourceTree = "<group>"; };
		0000000015E0 /* util.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = util.h; path = secp256k1/Classes/secp256k1/src/util.h; sourceTree = "<group>"; };
		0000000015F0 /* main_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = main_impl.h; path = secp256k1/Classes/secp256k1/src/modules/ecdh/main_impl.h; sourceTree = "<group>"; };
		000000001600 /* main_impl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = main_impl.h; path = secp256k1/Classes/secp256k1/src/modules/recovery/main_impl.h; sourceTree = "<group>"; };
		000000001610 /* secp256k1-config.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "secp256k1-config.h"; path = "secp256k1/Classes/secp256k1-config.h"; sourceTree = "<group>"; };
		000000001620 /* secp256k1_main.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = secp256k1_main.h; path = secp256k1/Classes/secp256k1_main.h; sourceTree = "<group>"; };
		000000001630 /* secp256k1_ec_mult_static_context.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = secp256k1_ec_mult_static_context.h; path = secp256k1/Classes/secp256k1_ec_mult_static_context.h; sourceTree = "<group>"; };
		000000001650 /* UIApplication+StrictKeyWindow.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIApplication+StrictKeyWindow.h"; path = "FBSnapshotTestCase/Categories/UIApplication+StrictKeyWindow.h"; sourceTree = "<group>"; };
		000000001660 /* UIApplication+StrictKeyWindow.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIApplication+StrictKeyWindow.m"; path = "FBSnapshotTestCase/Categories/UIApplication+StrictKeyWindow.m"; sourceTree = "<group>"; };
		000000001670 /* UIImage+Compare.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+Compare.h"; path = "FBSnapshotTestCase/Categories/UIImage+Compare.h"; sourceTree = "<group>"; };
		000000001680 /* UIImage+Compare.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+Compare.m"; path = "FBSnapshotTestCase/Categories/UIImage+Compare.m"; sourceTree = "<group>"; };
		000000001690 /* UIImage+Diff.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+Diff.h"; path = "FBSnapshotTestCase/Categories/UIImage+Diff.h"; sourceTree = "<group>"; };
		0000000016A0 /* UIImage+Diff.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+Diff.m"; path = "FBSnapshotTestCase/Categories/UIImage+Diff.m"; sourceTree = "<group>"; };
		0000000016B0 /* UIImage+Snapshot.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+Snapshot.h"; path = "FBSnapshotTestCase/Categories/UIImage+Snapshot.h"; sourceTree = "<group>"; };
		0000000016C0 /* UIImage+Snapshot.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+Snapshot.m"; path = "FBSnapshotTestCase/Categories/UIImage+Snapshot.m"; sourceTree = "<group>"; };
		0000000016D0 /* FBSnapshotTestCase.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBSnapshotTestCase.h; path = FBSnapshotTestCase/FBSnapshotTestCase.h; sourceTree = "<group>"; };
		0000000016E0 /* FBSnapshotTestCase.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FBSnapshotTestCase.m; path = FBSnapshotTestCase/FBSnapshotTestCase.m; sourceTree = "<group>"; };
		0000000016F0 /* FBSnapshotTestCasePlatform.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBSnapshotTestCasePlatform.h; path = FBSnapshotTestCase/FBSnapshotTestCasePlatform.h; sourceTree = "<group>"; };
		000000001700 /* FBSnapshotTestCasePlatform.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FBSnapshotTestCasePlatform.m; path = FBSnapshotTestCase/FBSnapshotTestCasePlatform.m; sourceTree = "<group>"; };
		000000001710 /* FBSnapshotTestController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBSnapshotTestController.h; path = FBSnapshotTestCase/FBSnapshotTestController.h; sourceTree = "<group>"; };
		000000001720 /* FBSnapshotTestController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FBSnapshotTestController.m; path = FBSnapshotTestCase/FBSnapshotTestController.m; sourceTree = "<group>"; };
		000000001740 /* SwiftSupport.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SwiftSupport.swift; path = FBSnapshotTestCase/SwiftSupport.swift; sourceTree = "<group>"; };
		000000001760 /* openssl.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = openssl.framework; path = "OpenSSL-iOS/bin/openssl.framework"; sourceTree = "<group>"; };
		000000001790 /* LICENSE */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
		0000000017A0 /* README.md */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		0000000017B0 /* imKeyConnector.podspec */ = {isa = PBXFileReference; explicitFileType = text.script.ruby; includeInIndex = 1; path = imKeyConnector.podspec; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.ruby; };
		000000001800 /* BigInt.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = BigInt.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000001860 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.3.sdk/System/Library/Frameworks/Foundation.framework; sourceTree = DEVELOPER_DIR; };
		0000000019F0 /* BigInt.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = BigInt.xcconfig; sourceTree = "<group>"; };
		000000001A00 /* BigInt.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = BigInt.modulemap; sourceTree = "<group>"; };
		000000001A10 /* BigInt-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "BigInt-umbrella.h"; sourceTree = "<group>"; };
		000000001A30 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000001A40 /* BigInt-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "BigInt-prefix.pch"; sourceTree = "<group>"; };
		000000001A50 /* BigInt-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "BigInt-dummy.m"; sourceTree = "<group>"; };
		000000001AB0 /* CoreBitcoin.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CoreBitcoin.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000002280 /* CoreBitcoin.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = CoreBitcoin.xcconfig; sourceTree = "<group>"; };
		000000002290 /* CoreBitcoin.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = CoreBitcoin.modulemap; sourceTree = "<group>"; };
		0000000022A0 /* CoreBitcoin-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "CoreBitcoin-umbrella.h"; sourceTree = "<group>"; };
		0000000022C0 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		0000000022D0 /* CoreBitcoin-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "CoreBitcoin-prefix.pch"; sourceTree = "<group>"; };
		0000000022E0 /* CoreBitcoin-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "CoreBitcoin-dummy.m"; sourceTree = "<group>"; };
		000000002340 /* CryptoSwift.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CryptoSwift.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		0000000027E0 /* CryptoSwift.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = CryptoSwift.xcconfig; sourceTree = "<group>"; };
		0000000027F0 /* CryptoSwift.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = CryptoSwift.modulemap; sourceTree = "<group>"; };
		000000002800 /* CryptoSwift-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "CryptoSwift-umbrella.h"; sourceTree = "<group>"; };
		000000002820 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000002830 /* CryptoSwift-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "CryptoSwift-prefix.pch"; sourceTree = "<group>"; };
		000000002840 /* CryptoSwift-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "CryptoSwift-dummy.m"; sourceTree = "<group>"; };
		0000000028A0 /* FBSnapshotTestCase.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = FBSnapshotTestCase.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000002A00 /* FBSnapshotTestCase.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FBSnapshotTestCase.xcconfig; sourceTree = "<group>"; };
		000000002A10 /* FBSnapshotTestCase.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FBSnapshotTestCase.modulemap; sourceTree = "<group>"; };
		000000002A20 /* FBSnapshotTestCase-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FBSnapshotTestCase-umbrella.h"; sourceTree = "<group>"; };
		000000002A40 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000002A50 /* FBSnapshotTestCase-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FBSnapshotTestCase-prefix.pch"; sourceTree = "<group>"; };
		000000002A60 /* FBSnapshotTestCase-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FBSnapshotTestCase-dummy.m"; sourceTree = "<group>"; };
		000000002AC0 /* LTHRadioButton.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = LTHRadioButton.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000002B40 /* LTHRadioButton.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = LTHRadioButton.xcconfig; sourceTree = "<group>"; };
		000000002B50 /* LTHRadioButton.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = LTHRadioButton.modulemap; sourceTree = "<group>"; };
		000000002B60 /* LTHRadioButton-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "LTHRadioButton-umbrella.h"; sourceTree = "<group>"; };
		000000002B80 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000002B90 /* LTHRadioButton-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "LTHRadioButton-prefix.pch"; sourceTree = "<group>"; };
		000000002BA0 /* LTHRadioButton-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "LTHRadioButton-dummy.m"; sourceTree = "<group>"; };
		000000002C00 /* OrderedDictionary.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = OrderedDictionary.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000002C90 /* OrderedDictionary.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = OrderedDictionary.xcconfig; sourceTree = "<group>"; };
		000000002CA0 /* OrderedDictionary.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = OrderedDictionary.modulemap; sourceTree = "<group>"; };
		000000002CB0 /* OrderedDictionary-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "OrderedDictionary-umbrella.h"; sourceTree = "<group>"; };
		000000002CD0 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000002CE0 /* OrderedDictionary-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "OrderedDictionary-prefix.pch"; sourceTree = "<group>"; };
		000000002CF0 /* OrderedDictionary-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "OrderedDictionary-dummy.m"; sourceTree = "<group>"; };
		000000002D50 /* SipHash.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = SipHash.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000002E00 /* SipHash.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SipHash.xcconfig; sourceTree = "<group>"; };
		000000002E10 /* SipHash.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = SipHash.modulemap; sourceTree = "<group>"; };
		000000002E20 /* SipHash-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SipHash-umbrella.h"; sourceTree = "<group>"; };
		000000002E40 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000002E50 /* SipHash-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SipHash-prefix.pch"; sourceTree = "<group>"; };
		000000002E60 /* SipHash-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "SipHash-dummy.m"; sourceTree = "<group>"; };
		000000002EC0 /* imKeyConnector.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = imKeyConnector.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		0000000032E0 /* imKeyConnector.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = imKeyConnector.xcconfig; sourceTree = "<group>"; };
		0000000032F0 /* imKeyConnector.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = imKeyConnector.modulemap; sourceTree = "<group>"; };
		000000003300 /* imKeyConnector-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "imKeyConnector-umbrella.h"; sourceTree = "<group>"; };
		000000003320 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000003330 /* imKeyConnector-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "imKeyConnector-prefix.pch"; sourceTree = "<group>"; };
		000000003340 /* imKeyConnector-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "imKeyConnector-dummy.m"; sourceTree = "<group>"; };
		0000000033A0 /* secp256k1.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = secp256k1.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000003740 /* secp256k1.swift.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = secp256k1.swift.xcconfig; sourceTree = "<group>"; };
		000000003750 /* secp256k1.swift.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = secp256k1.swift.modulemap; sourceTree = "<group>"; };
		000000003760 /* secp256k1.swift-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "secp256k1.swift-umbrella.h"; sourceTree = "<group>"; };
		000000003780 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000003790 /* secp256k1.swift-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "secp256k1.swift-prefix.pch"; sourceTree = "<group>"; };
		0000000037A0 /* secp256k1.swift-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "secp256k1.swift-dummy.m"; sourceTree = "<group>"; };
		000000003800 /* Pods_imKeyConnector_Example.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Pods_imKeyConnector_Example.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000003870 /* Pods-imKeyConnector_Example.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "Pods-imKeyConnector_Example.release.xcconfig"; sourceTree = "<group>"; };
		000000003880 /* Pods-imKeyConnector_Example.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "Pods-imKeyConnector_Example.debug.xcconfig"; sourceTree = "<group>"; };
		000000003890 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		0000000038A0 /* Pods-imKeyConnector_Example.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = "Pods-imKeyConnector_Example.modulemap"; sourceTree = "<group>"; };
		0000000038B0 /* Pods-imKeyConnector_Example-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Pods-imKeyConnector_Example-umbrella.h"; sourceTree = "<group>"; };
		0000000038D0 /* Pods-imKeyConnector_Example-frameworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "Pods-imKeyConnector_Example-frameworks.sh"; sourceTree = "<group>"; };
		0000000038E0 /* Pods-imKeyConnector_Example-resources.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "Pods-imKeyConnector_Example-resources.sh"; sourceTree = "<group>"; };
		0000000038F0 /* Pods-imKeyConnector_Example-acknowledgements.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "Pods-imKeyConnector_Example-acknowledgements.plist"; sourceTree = "<group>"; };
		000000003900 /* Pods-imKeyConnector_Example-acknowledgements.markdown */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text; path = "Pods-imKeyConnector_Example-acknowledgements.markdown"; sourceTree = "<group>"; };
		000000003910 /* Pods-imKeyConnector_Example-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "Pods-imKeyConnector_Example-dummy.m"; sourceTree = "<group>"; };
		000000003970 /* Pods_imKeyConnector_Tests.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Pods_imKeyConnector_Tests.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		0000000039E0 /* Pods-imKeyConnector_Tests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "Pods-imKeyConnector_Tests.release.xcconfig"; sourceTree = "<group>"; };
		0000000039F0 /* Pods-imKeyConnector_Tests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "Pods-imKeyConnector_Tests.debug.xcconfig"; sourceTree = "<group>"; };
		000000003A00 /* Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		000000003A10 /* Pods-imKeyConnector_Tests.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = "Pods-imKeyConnector_Tests.modulemap"; sourceTree = "<group>"; };
		000000003A20 /* Pods-imKeyConnector_Tests-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Pods-imKeyConnector_Tests-umbrella.h"; sourceTree = "<group>"; };
		000000003A40 /* Pods-imKeyConnector_Tests-frameworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "Pods-imKeyConnector_Tests-frameworks.sh"; sourceTree = "<group>"; };
		000000003A50 /* Pods-imKeyConnector_Tests-resources.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "Pods-imKeyConnector_Tests-resources.sh"; sourceTree = "<group>"; };
		000000003A60 /* Pods-imKeyConnector_Tests-acknowledgements.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "Pods-imKeyConnector_Tests-acknowledgements.plist"; sourceTree = "<group>"; };
		000000003A70 /* Pods-imKeyConnector_Tests-acknowledgements.markdown */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text; path = "Pods-imKeyConnector_Tests-acknowledgements.markdown"; sourceTree = "<group>"; };
		000000003A80 /* Pods-imKeyConnector_Tests-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "Pods-imKeyConnector_Tests-dummy.m"; sourceTree = "<group>"; };
		000000003AA0 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.3.sdk/System/Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
		000000003AC0 /* XCTest.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = XCTest.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.3.sdk/System/Library/Frameworks/XCTest.framework; sourceTree = DEVELOPER_DIR; };
		000000003AF0 /* QuartzCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = QuartzCore.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.3.sdk/System/Library/Frameworks/QuartzCore.framework; sourceTree = DEVELOPER_DIR; };
		000000003B50 /* SipHash.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = SipHash.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000003C50 /* CryptoSwift.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CryptoSwift.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000003C90 /* BigInt.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = BigInt.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000003CD0 /* CoreBitcoin.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CoreBitcoin.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000003D10 /* secp256k1.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = secp256k1.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		000000003D50 /* OrderedDictionary.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = OrderedDictionary.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		D83079A62370B93400E58044 /* libconnector.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libconnector.a; sourceTree = "<group>"; };
		D83079A72370B93500E58044 /* connector.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = connector.h; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		000000001830 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000001870 /* Foundation.framework in Frameworks */,
				000000003B60 /* SipHash.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000001AE0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000001B00 /* Foundation.framework in Frameworks */,
				000000003AB0 /* UIKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002370 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002390 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000028D0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0000000028F0 /* Foundation.framework in Frameworks */,
				000000003B00 /* QuartzCore.framework in Frameworks */,
				000000003AE0 /* UIKit.framework in Frameworks */,
				000000003AD0 /* XCTest.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002AF0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002B10 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002C30 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002C50 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002D80 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002DA0 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002EF0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000003CA0 /* BigInt.framework in Frameworks */,
				000000003CE0 /* CoreBitcoin.framework in Frameworks */,
				000000003C60 /* CryptoSwift.framework in Frameworks */,
				000000002F10 /* Foundation.framework in Frameworks */,
				000000003D60 /* OrderedDictionary.framework in Frameworks */,
				000000003D20 /* secp256k1.framework in Frameworks */,
				000000003D90 /* SipHash.framework in Frameworks */,
				D83079A82370B93500E58044 /* libconnector.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000033D0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0000000033F0 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000003830 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000003850 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000039A0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0000000039C0 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		000000000010 = {
			isa = PBXGroup;
			children = (
				000000000140 /* Podfile */,
				000000000090 /* Development Pods */,
				000000000060 /* Frameworks */,
				000000000080 /* Pods */,
				000000000020 /* Products */,
				000000000070 /* Targets Support Files */,
			);
			sourceTree = "<group>";
		};
		000000000020 /* Products */ = {
			isa = PBXGroup;
			children = (
				000000001800 /* BigInt.framework */,
				000000001AB0 /* CoreBitcoin.framework */,
				000000002340 /* CryptoSwift.framework */,
				0000000028A0 /* FBSnapshotTestCase.framework */,
				000000002EC0 /* imKeyConnector.framework */,
				000000002AC0 /* LTHRadioButton.framework */,
				000000002C00 /* OrderedDictionary.framework */,
				000000003800 /* Pods_imKeyConnector_Example.framework */,
				000000003970 /* Pods_imKeyConnector_Tests.framework */,
				0000000033A0 /* secp256k1.framework */,
				000000002D50 /* SipHash.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		000000000060 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				000000003C90 /* BigInt.framework */,
				000000003CD0 /* CoreBitcoin.framework */,
				000000003C50 /* CryptoSwift.framework */,
				000000003D50 /* OrderedDictionary.framework */,
				000000003D10 /* secp256k1.framework */,
				000000003B50 /* SipHash.framework */,
				000000001850 /* iOS */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		000000000070 /* Targets Support Files */ = {
			isa = PBXGroup;
			children = (
				000000003860 /* Pods-imKeyConnector_Example */,
				0000000039D0 /* Pods-imKeyConnector_Tests */,
			);
			name = "Targets Support Files";
			sourceTree = "<group>";
		};
		000000000080 /* Pods */ = {
			isa = PBXGroup;
			children = (
				0000000000A0 /* BigInt */,
				0000000000B0 /* CoreBitcoin */,
				0000000000C0 /* CryptoSwift */,
				000000000130 /* FBSnapshotTestCase */,
				0000000000D0 /* GRKOpenSSLFramework */,
				0000000000E0 /* LTHRadioButton */,
				0000000000F0 /* OrderedDictionary */,
				000000000120 /* secp256k1.swift */,
				000000000100 /* SipHash */,
			);
			name = Pods;
			sourceTree = "<group>";
		};
		000000000090 /* Development Pods */ = {
			isa = PBXGroup;
			children = (
				000000000110 /* imKeyConnector */,
			);
			name = "Development Pods";
			sourceTree = "<group>";
		};
		0000000000A0 /* BigInt */ = {
			isa = PBXGroup;
			children = (
				000000000150 /* Addition.swift */,
				000000000160 /* BigInt.swift */,
				000000000170 /* BigUInt.swift */,
				000000000180 /* Bitwise Ops.swift */,
				000000000190 /* Codable.swift */,
				0000000001A0 /* Comparable.swift */,
				0000000001B0 /* Data Conversion.swift */,
				0000000001C0 /* Division.swift */,
				0000000001D0 /* Exponentiation.swift */,
				0000000001E0 /* Floating Point Conversion.swift */,
				0000000001F0 /* GCD.swift */,
				000000000200 /* Hashable.swift */,
				000000000210 /* Integer Conversion.swift */,
				000000000220 /* Multiplication.swift */,
				000000000230 /* Prime Test.swift */,
				000000000240 /* Random.swift */,
				000000000250 /* Shifts.swift */,
				000000000260 /* Square Root.swift */,
				000000000270 /* Strideable.swift */,
				000000000280 /* String Conversion.swift */,
				000000000290 /* Subtraction.swift */,
				0000000002A0 /* Words and Bits.swift */,
				0000000019E0 /* Support Files */,
			);
			path = BigInt;
			sourceTree = "<group>";
		};
		0000000000B0 /* CoreBitcoin */ = {
			isa = PBXGroup;
			children = (
				000000000920 /* b64.c */,
				000000000930 /* b64.h */,
				0000000002B0 /* BTC256.h */,
				0000000002C0 /* BTC256.m */,
				0000000002D0 /* BTCAddress.h */,
				0000000002E0 /* BTCAddress.m */,
				0000000002F0 /* BTCAddressSubclass.h */,
				000000000300 /* BTCAssetAddress.h */,
				000000000310 /* BTCAssetAddress.m */,
				000000000320 /* BTCAssetID.h */,
				000000000330 /* BTCAssetID.m */,
				000000000340 /* BTCAssetType.h */,
				000000000350 /* BTCAssetType.m */,
				000000000360 /* BTCBase58.h */,
				000000000370 /* BTCBase58.m */,
				000000000380 /* BTCBigNumber.h */,
				000000000390 /* BTCBigNumber.m */,
				0000000003A0 /* BTCBitcoinURL.h */,
				0000000003B0 /* BTCBitcoinURL.m */,
				0000000003C0 /* BTCBlindSignature.h */,
				0000000003D0 /* BTCBlindSignature.m */,
				0000000003E0 /* BTCBlock.h */,
				0000000003F0 /* BTCBlock.m */,
				000000000400 /* BTCBlockchainInfo.h */,
				000000000410 /* BTCBlockchainInfo.m */,
				000000000420 /* BTCBlockHeader.h */,
				000000000430 /* BTCBlockHeader.m */,
				000000000440 /* BTCChainCom.h */,
				000000000450 /* BTCChainCom.m */,
				000000000460 /* BTCCurrencyConverter.h */,
				000000000470 /* BTCCurrencyConverter.m */,
				000000000480 /* BTCCurvePoint.h */,
				000000000490 /* BTCCurvePoint.m */,
				0000000004A0 /* BTCData.h */,
				0000000004B0 /* BTCData.m */,
				0000000004C0 /* BTCEncryptedBackup.h */,
				0000000004D0 /* BTCEncryptedBackup.m */,
				0000000004E0 /* BTCEncryptedMessage.h */,
				0000000004F0 /* BTCEncryptedMessage.m */,
				000000000500 /* BTCErrors.h */,
				000000000510 /* BTCErrors.m */,
				000000000520 /* BTCFancyEncryptedMessage.h */,
				000000000530 /* BTCFancyEncryptedMessage.m */,
				000000000540 /* BTCHashID.h */,
				000000000550 /* BTCHashID.m */,
				000000000560 /* BTCKey.h */,
				000000000570 /* BTCKey.m */,
				000000000580 /* BTCKeychain.h */,
				000000000590 /* BTCKeychain.m */,
				0000000005A0 /* BTCMerkleTree.h */,
				0000000005B0 /* BTCMerkleTree.m */,
				0000000005C0 /* BTCMnemonic.h */,
				0000000005D0 /* BTCMnemonic.m */,
				0000000005E0 /* BTCNetwork.h */,
				0000000005F0 /* BTCNetwork.m */,
				000000000600 /* BTCNumberFormatter.h */,
				000000000610 /* BTCNumberFormatter.m */,
				000000000620 /* BTCOpcode.h */,
				000000000630 /* BTCOpcode.m */,
				000000000640 /* BTCOutpoint.h */,
				000000000650 /* BTCOutpoint.m */,
				000000000660 /* BTCPaymentMethod.h */,
				000000000670 /* BTCPaymentMethod.m */,
				000000000680 /* BTCPaymentMethodDetails.h */,
				000000000690 /* BTCPaymentMethodDetails.m */,
				0000000006A0 /* BTCPaymentMethodRequest.h */,
				0000000006B0 /* BTCPaymentMethodRequest.m */,
				0000000006C0 /* BTCPaymentProtocol.h */,
				0000000006D0 /* BTCPaymentProtocol.m */,
				0000000006E0 /* BTCPaymentRequest.h */,
				0000000006F0 /* BTCPaymentRequest.m */,
				000000000700 /* BTCPriceSource.h */,
				000000000710 /* BTCPriceSource.m */,
				000000000720 /* BTCProcessor.h */,
				000000000730 /* BTCProcessor.m */,
				000000000740 /* BTCProtocolBuffers.h */,
				000000000750 /* BTCProtocolBuffers.m */,
				000000000760 /* BTCProtocolSerialization.h */,
				000000000770 /* BTCProtocolSerialization.m */,
				000000000780 /* BTCQRCode.h */,
				000000000790 /* BTCQRCode.m */,
				0000000007A0 /* BTCScript.h */,
				0000000007B0 /* BTCScript.m */,
				0000000007C0 /* BTCScriptMachine.h */,
				0000000007D0 /* BTCScriptMachine.m */,
				0000000007E0 /* BTCScriptTestData.h */,
				0000000007F0 /* BTCSecretSharing.h */,
				000000000800 /* BTCSecretSharing.m */,
				000000000810 /* BTCSignatureHashType.h */,
				000000000820 /* BTCTransaction.h */,
				000000000830 /* BTCTransaction.m */,
				000000000840 /* BTCTransactionBuilder.h */,
				000000000850 /* BTCTransactionBuilder.m */,
				000000000860 /* BTCTransactionInput.h */,
				000000000870 /* BTCTransactionInput.m */,
				000000000880 /* BTCTransactionOutput.h */,
				000000000890 /* BTCTransactionOutput.m */,
				0000000008A0 /* BTCUnitsAndLimits.h */,
				0000000008B0 /* CoreBitcoin.h */,
				000000000940 /* crypto-mcf.c */,
				000000000950 /* crypto-scrypt-saltgen.c */,
				000000000960 /* crypto_scrypt-check.c */,
				000000000970 /* crypto_scrypt-hash.c */,
				000000000980 /* crypto_scrypt-hexconvert.c */,
				000000000990 /* crypto_scrypt-hexconvert.h */,
				0000000009A0 /* crypto_scrypt-nosse.c */,
				0000000009B0 /* libscrypt.h */,
				0000000008C0 /* NS+BTCBase58.h */,
				0000000008D0 /* NS+BTCBase58.m */,
				0000000008E0 /* NSData+BTCData.h */,
				0000000008F0 /* NSData+BTCData.m */,
				000000000900 /* segwit_addr.c */,
				000000000910 /* segwit_addr.h */,
				0000000009C0 /* sha256.c */,
				0000000009D0 /* sha256.h */,
				0000000009E0 /* slowequals.c */,
				0000000009F0 /* slowequals.h */,
				000000000A00 /* sysendian.h */,
				000000002270 /* Support Files */,
			);
			path = CoreBitcoin;
			sourceTree = "<group>";
		};
		0000000000C0 /* CryptoSwift */ = {
			isa = PBXGroup;
			children = (
				000000000A10 /* AEAD.swift */,
				000000000A20 /* AEADChaCha20Poly1305.swift */,
				000000000A40 /* AES.swift */,
				000000000BE0 /* AES+Foundation.swift */,
				000000000A30 /* AES.Cryptors.swift */,
				000000000A50 /* Array+Extension.swift */,
				000000000BF0 /* Array+Foundation.swift */,
				000000000A60 /* Authenticator.swift */,
				000000000A70 /* BatchedCollection.swift */,
				000000000A80 /* Bit.swift */,
				000000000A90 /* BlockCipher.swift */,
				000000000AA0 /* BlockMode.swift */,
				000000000AB0 /* BlockModeOptions.swift */,
				000000000AC0 /* BlockModeWorker.swift */,
				000000000B40 /* Blowfish.swift */,
				000000000C00 /* Blowfish+Foundation.swift */,
				000000000AD0 /* CBC.swift */,
				000000000AE0 /* CFB.swift */,
				000000000B50 /* ChaCha20.swift */,
				000000000C10 /* ChaCha20+Foundation.swift */,
				000000000B60 /* Checksum.swift */,
				000000000B70 /* Cipher.swift */,
				000000000B80 /* CMAC.swift */,
				000000000B90 /* Collection+Extension.swift */,
				000000000BA0 /* CompactMap.swift */,
				000000000BB0 /* Cryptors.swift */,
				000000000AF0 /* CTR.swift */,
				000000000C20 /* Data+Extension.swift */,
				000000000BC0 /* Digest.swift */,
				000000000BD0 /* DigestType.swift */,
				000000000B00 /* ECB.swift */,
				000000000C70 /* Generics.swift */,
				000000000C80 /* HKDF.swift */,
				000000000C90 /* HMAC.swift */,
				000000000C30 /* HMAC+Foundation.swift */,
				000000000CA0 /* Int+Extension.swift */,
				000000000CB0 /* MD5.swift */,
				000000000CC0 /* NoPadding.swift */,
				000000000B10 /* OFB.swift */,
				000000000CD0 /* Operators.swift */,
				000000000CE0 /* Padding.swift */,
				000000000CF0 /* PBKDF1.swift */,
				000000000D00 /* PBKDF2.swift */,
				000000000B20 /* PCBC.swift */,
				000000000D10 /* PKCS5.swift */,
				000000000D20 /* PKCS7.swift */,
				000000000D30 /* PKCS7Padding.swift */,
				000000000D40 /* Poly1305.swift */,
				000000000D50 /* Rabbit.swift */,
				000000000C40 /* Rabbit+Foundation.swift */,
				000000000B30 /* RandomAccessBlockModeWorker.swift */,
				000000000D60 /* RandomAccessCryptor.swift */,
				000000000D70 /* RandomBytesSequence.swift */,
				000000000D80 /* SecureBytes.swift */,
				000000000D90 /* SHA1.swift */,
				000000000DA0 /* SHA2.swift */,
				000000000DB0 /* SHA3.swift */,
				000000000DC0 /* String+Extension.swift */,
				000000000C50 /* String+FoundationExtension.swift */,
				000000000DD0 /* UInt16+Extension.swift */,
				000000000DE0 /* UInt32+Extension.swift */,
				000000000DF0 /* UInt64+Extension.swift */,
				000000000E00 /* UInt8+Extension.swift */,
				000000000E10 /* Updatable.swift */,
				000000000E20 /* Utils.swift */,
				000000000C60 /* Utils+Foundation.swift */,
				000000000E30 /* ZeroPadding.swift */,
				0000000027D0 /* Support Files */,
			);
			path = CryptoSwift;
			sourceTree = "<group>";
		};
		0000000000D0 /* GRKOpenSSLFramework */ = {
			isa = PBXGroup;
			children = (
				000000001750 /* Frameworks */,
			);
			path = GRKOpenSSLFramework;
			sourceTree = "<group>";
		};
		0000000000E0 /* LTHRadioButton */ = {
			isa = PBXGroup;
			children = (
				000000000E40 /* LTHRadioButton.swift */,
				000000002B30 /* Support Files */,
			);
			path = LTHRadioButton;
			sourceTree = "<group>";
		};
		0000000000F0 /* OrderedDictionary */ = {
			isa = PBXGroup;
			children = (
				000000000E50 /* OrderedDictionary.h */,
				000000000E60 /* OrderedDictionary.m */,
				000000002C80 /* Support Files */,
			);
			path = OrderedDictionary;
			sourceTree = "<group>";
		};
		000000000100 /* SipHash */ = {
			isa = PBXGroup;
			children = (
				000000000E70 /* Primitive Types.swift */,
				000000000E80 /* RandomUInt64.swift */,
				000000000E90 /* SipHashable.swift */,
				000000000EA0 /* SipHasher.swift */,
				000000002DF0 /* Support Files */,
			);
			path = SipHash;
			sourceTree = "<group>";
		};
		000000000110 /* imKeyConnector */ = {
			isa = PBXGroup;
			children = (
				000000001210 /* imKeyConnector.h */,
				000000000EB0 /* Bluetooth */,
				000000000EE0 /* Core */,
				0000000010A0 /* Device */,
				0000000011B0 /* Encryptor */,
				000000001770 /* Frameworks */,
				000000001220 /* include */,
				000000001780 /* Pod */,
				0000000032D0 /* Support Files */,
				000000001270 /* Util */,
			);
			name = imKeyConnector;
			path = ../..;
			sourceTree = "<group>";
		};
		000000000120 /* secp256k1.swift */ = {
			isa = PBXGroup;
			children = (
				000000001380 /* basic-config.h */,
				000000001390 /* ecdsa.h */,
				0000000013A0 /* ecdsa_impl.h */,
				0000000013B0 /* eckey.h */,
				0000000013C0 /* eckey_impl.h */,
				0000000013D0 /* ecmult.h */,
				0000000013E0 /* ecmult_const.h */,
				0000000013F0 /* ecmult_const_impl.h */,
				000000001400 /* ecmult_gen.h */,
				000000001410 /* ecmult_gen_impl.h */,
				000000001420 /* ecmult_impl.h */,
				000000001430 /* field.h */,
				000000001440 /* field_10x26.h */,
				000000001450 /* field_10x26_impl.h */,
				000000001460 /* field_5x52.h */,
				000000001470 /* field_5x52_asm_impl.h */,
				000000001480 /* field_5x52_impl.h */,
				000000001490 /* field_5x52_int128_impl.h */,
				0000000014A0 /* field_impl.h */,
				0000000014B0 /* group.h */,
				0000000014C0 /* group_impl.h */,
				0000000014D0 /* hash.h */,
				0000000014E0 /* hash_impl.h */,
				000000001310 /* lax_der_parsing.c */,
				000000001320 /* lax_der_parsing.h */,
				000000001330 /* lax_der_privatekey_parsing.c */,
				000000001340 /* lax_der_privatekey_parsing.h */,
				000000001600 /* main_impl.h */,
				0000000015F0 /* main_impl.h */,
				0000000014F0 /* num.h */,
				000000001500 /* num_gmp.h */,
				000000001510 /* num_gmp_impl.h */,
				000000001520 /* num_impl.h */,
				000000001530 /* scalar.h */,
				000000001540 /* scalar_4x64.h */,
				000000001550 /* scalar_4x64_impl.h */,
				000000001560 /* scalar_8x32.h */,
				000000001570 /* scalar_8x32_impl.h */,
				000000001580 /* scalar_impl.h */,
				000000001590 /* scalar_low.h */,
				0000000015A0 /* scalar_low_impl.h */,
				0000000015B0 /* scratch.h */,
				0000000015C0 /* scratch_impl.h */,
				0000000015D0 /* secp256k1.c */,
				000000001350 /* secp256k1.h */,
				000000001610 /* secp256k1-config.h */,
				000000001630 /* secp256k1_ec_mult_static_context.h */,
				000000001360 /* secp256k1_ecdh.h */,
				000000001620 /* secp256k1_main.h */,
				000000001370 /* secp256k1_recovery.h */,
				0000000015E0 /* util.h */,
				000000003730 /* Support Files */,
			);
			path = secp256k1.swift;
			sourceTree = "<group>";
		};
		000000000130 /* FBSnapshotTestCase */ = {
			isa = PBXGroup;
			children = (
				000000001640 /* Core */,
				0000000029F0 /* Support Files */,
				000000001730 /* SwiftSupport */,
			);
			path = FBSnapshotTestCase;
			sourceTree = "<group>";
		};
		000000000EB0 /* Bluetooth */ = {
			isa = PBXGroup;
			children = (
				000000000EC0 /* BLE.swift */,
				000000000ED0 /* BLEDelegate.swift */,
			);
			name = Bluetooth;
			path = imKeyConnector/Classes/Bluetooth;
			sourceTree = "<group>";
		};
		000000000EE0 /* Core */ = {
			isa = PBXGroup;
			children = (
				000000000EF0 /* APDU.swift */,
				000000000F00 /* Applet.swift */,
				000000000F10 /* BIP44.swift */,
				000000001060 /* ImkeyError.swift */,
				000000001070 /* Network.swift */,
				000000001080 /* TransactionSignedResult.swift */,
				000000001090 /* Wallet.swift */,
				000000000F20 /* Bitcoin */,
				000000000F90 /* Cosmos */,
				000000000FE0 /* EOS */,
				000000001030 /* Ethereum */,
			);
			name = Core;
			path = imKeyConnector/Classes/Core;
			sourceTree = "<group>";
		};
		000000000F20 /* Bitcoin */ = {
			isa = PBXGroup;
			children = (
				000000000F30 /* BTCKey.swift */,
				000000000F40 /* BTCTransaction.swift */,
				000000000F50 /* BTCTransactionSigner.swift */,
				000000000F60 /* OmniTransaction.swift */,
				000000000F70 /* OmniTransactionSigner.swift */,
				000000000F80 /* SegWit.swift */,
			);
			path = Bitcoin;
			sourceTree = "<group>";
		};
		000000000F90 /* Cosmos */ = {
			isa = PBXGroup;
			children = (
				000000000FA0 /* Bech32Address.swift */,
				000000000FB0 /* CosmosHrp.swift */,
				000000000FC0 /* CosmosKey.swift */,
				000000000FD0 /* CosmosTransaction.swift */,
			);
			path = Cosmos;
			sourceTree = "<group>";
		};
		000000000FE0 /* EOS */ = {
			isa = PBXGroup;
			children = (
				000000000FF0 /* EOSKey.swift */,
				000000001000 /* EOSSignResult.swift */,
				000000001010 /* EOSTransaction.swift */,
				000000001020 /* EOSTransactionSigner.swift */,
			);
			path = EOS;
			sourceTree = "<group>";
		};
		000000001030 /* Ethereum */ = {
			isa = PBXGroup;
			children = (
				000000001040 /* ETHKey.swift */,
				000000001050 /* ETHTransaction.swift */,
			);
			path = Ethereum;
			sourceTree = "<group>";
		};
		0000000010A0 /* Device */ = {
			isa = PBXGroup;
			children = (
				0000000010B0 /* APPDelete.swift */,
				0000000010C0 /* APPDownload.swift */,
				0000000010D0 /* APPUpdate.swift */,
				0000000010E0 /* AuthCodeStorage.swift */,
				0000000010F0 /* Constants.swift */,
				000000001100 /* HTTP.swift */,
				000000001150 /* Manage.swift */,
				000000001160 /* SEActive.swift */,
				000000001170 /* SECertCheck.swift */,
				000000001180 /* SECheck.swift */,
				000000001190 /* SEQuery.swift */,
				0000000011A0 /* TSMReq.swift */,
				000000001110 /* key */,
			);
			name = Device;
			path = imKeyConnector/Classes/Device;
			sourceTree = "<group>";
		};
		000000001110 /* key */ = {
			isa = PBXGroup;
			children = (
				000000001120 /* KeyFileStorage.swift */,
				000000001130 /* KeyManager.swift */,
				000000001140 /* TLVUtil.swift */,
			);
			path = key;
			sourceTree = "<group>";
		};
		0000000011B0 /* Encryptor */ = {
			isa = PBXGroup;
			children = (
				0000000011C0 /* AES128_ik.swift */,
				0000000011D0 /* Encryptor.swift */,
				0000000011E0 /* Keccak256_ik.swift */,
				0000000011F0 /* RSAUtils.swift */,
				000000001200 /* Secp256k1.swift */,
			);
			name = Encryptor;
			path = imKeyConnector/Classes/Encryptor;
			sourceTree = "<group>";
		};
		000000001220 /* include */ = {
			isa = PBXGroup;
			children = (
				D83079A72370B93500E58044 /* connector.h */,
				D83079A62370B93400E58044 /* libconnector.a */,
				000000001230 /* ErrorCodesAndMacros.h */,
				000000001240 /* FTBLEDelegate.h */,
				000000001250 /* FTBLEInterface.h */,
				000000001260 /* libFtBTKeyApi.a */,
			);
			name = include;
			path = imKeyConnector/Classes/include;
			sourceTree = "<group>";
		};
		000000001270 /* Util */ = {
			isa = PBXGroup;
			children = (
				000000001280 /* BigNumber.swift */,
				000000001290 /* ByteUtil.swift */,
				0000000012A0 /* Data+Extension.swift */,
				0000000012B0 /* Hex.swift */,
				0000000012C0 /* Log.swift */,
				0000000012D0 /* RLP.swift */,
				0000000012E0 /* SigUtil.swift */,
				0000000012F0 /* String+Extension.swift */,
				000000001300 /* ValidatorAddress.swift */,
			);
			name = Util;
			path = imKeyConnector/Classes/Util;
			sourceTree = "<group>";
		};
		000000001640 /* Core */ = {
			isa = PBXGroup;
			children = (
				0000000016D0 /* FBSnapshotTestCase.h */,
				0000000016E0 /* FBSnapshotTestCase.m */,
				0000000016F0 /* FBSnapshotTestCasePlatform.h */,
				000000001700 /* FBSnapshotTestCasePlatform.m */,
				000000001710 /* FBSnapshotTestController.h */,
				000000001720 /* FBSnapshotTestController.m */,
				000000001650 /* UIApplication+StrictKeyWindow.h */,
				000000001660 /* UIApplication+StrictKeyWindow.m */,
				000000001670 /* UIImage+Compare.h */,
				000000001680 /* UIImage+Compare.m */,
				000000001690 /* UIImage+Diff.h */,
				0000000016A0 /* UIImage+Diff.m */,
				0000000016B0 /* UIImage+Snapshot.h */,
				0000000016C0 /* UIImage+Snapshot.m */,
			);
			name = Core;
			sourceTree = "<group>";
		};
		000000001730 /* SwiftSupport */ = {
			isa = PBXGroup;
			children = (
				000000001740 /* SwiftSupport.swift */,
			);
			name = SwiftSupport;
			sourceTree = "<group>";
		};
		000000001750 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				000000001760 /* openssl.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		000000001770 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		000000001780 /* Pod */ = {
			isa = PBXGroup;
			children = (
				0000000017B0 /* imKeyConnector.podspec */,
				000000001790 /* LICENSE */,
				0000000017A0 /* README.md */,
			);
			name = Pod;
			sourceTree = "<group>";
		};
		000000001850 /* iOS */ = {
			isa = PBXGroup;
			children = (
				000000001860 /* Foundation.framework */,
				000000003AF0 /* QuartzCore.framework */,
				000000003AA0 /* UIKit.framework */,
				000000003AC0 /* XCTest.framework */,
			);
			name = iOS;
			sourceTree = "<group>";
		};
		0000000019E0 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				000000001A00 /* BigInt.modulemap */,
				0000000019F0 /* BigInt.xcconfig */,
				000000001A50 /* BigInt-dummy.m */,
				000000001A40 /* BigInt-prefix.pch */,
				000000001A10 /* BigInt-umbrella.h */,
				000000001A30 /* Info.plist */,
			);
			name = "Support Files";
			path = "../Target Support Files/BigInt";
			sourceTree = "<group>";
		};
		000000002270 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				000000002290 /* CoreBitcoin.modulemap */,
				000000002280 /* CoreBitcoin.xcconfig */,
				0000000022E0 /* CoreBitcoin-dummy.m */,
				0000000022D0 /* CoreBitcoin-prefix.pch */,
				0000000022A0 /* CoreBitcoin-umbrella.h */,
				0000000022C0 /* Info.plist */,
			);
			name = "Support Files";
			path = "../Target Support Files/CoreBitcoin";
			sourceTree = "<group>";
		};
		0000000027D0 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				0000000027F0 /* CryptoSwift.modulemap */,
				0000000027E0 /* CryptoSwift.xcconfig */,
				000000002840 /* CryptoSwift-dummy.m */,
				000000002830 /* CryptoSwift-prefix.pch */,
				000000002800 /* CryptoSwift-umbrella.h */,
				000000002820 /* Info.plist */,
			);
			name = "Support Files";
			path = "../Target Support Files/CryptoSwift";
			sourceTree = "<group>";
		};
		0000000029F0 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				000000002A10 /* FBSnapshotTestCase.modulemap */,
				000000002A00 /* FBSnapshotTestCase.xcconfig */,
				000000002A60 /* FBSnapshotTestCase-dummy.m */,
				000000002A50 /* FBSnapshotTestCase-prefix.pch */,
				000000002A20 /* FBSnapshotTestCase-umbrella.h */,
				000000002A40 /* Info.plist */,
			);
			name = "Support Files";
			path = "../Target Support Files/FBSnapshotTestCase";
			sourceTree = "<group>";
		};
		000000002B30 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				000000002B80 /* Info.plist */,
				000000002B50 /* LTHRadioButton.modulemap */,
				000000002B40 /* LTHRadioButton.xcconfig */,
				000000002BA0 /* LTHRadioButton-dummy.m */,
				000000002B90 /* LTHRadioButton-prefix.pch */,
				000000002B60 /* LTHRadioButton-umbrella.h */,
			);
			name = "Support Files";
			path = "../Target Support Files/LTHRadioButton";
			sourceTree = "<group>";
		};
		000000002C80 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				000000002CD0 /* Info.plist */,
				000000002CA0 /* OrderedDictionary.modulemap */,
				000000002C90 /* OrderedDictionary.xcconfig */,
				000000002CF0 /* OrderedDictionary-dummy.m */,
				000000002CE0 /* OrderedDictionary-prefix.pch */,
				000000002CB0 /* OrderedDictionary-umbrella.h */,
			);
			name = "Support Files";
			path = "../Target Support Files/OrderedDictionary";
			sourceTree = "<group>";
		};
		000000002DF0 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				000000002E40 /* Info.plist */,
				000000002E10 /* SipHash.modulemap */,
				000000002E00 /* SipHash.xcconfig */,
				000000002E60 /* SipHash-dummy.m */,
				000000002E50 /* SipHash-prefix.pch */,
				000000002E20 /* SipHash-umbrella.h */,
			);
			name = "Support Files";
			path = "../Target Support Files/SipHash";
			sourceTree = "<group>";
		};
		0000000032D0 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				0000000032F0 /* imKeyConnector.modulemap */,
				0000000032E0 /* imKeyConnector.xcconfig */,
				000000003340 /* imKeyConnector-dummy.m */,
				000000003330 /* imKeyConnector-prefix.pch */,
				000000003300 /* imKeyConnector-umbrella.h */,
				000000003320 /* Info.plist */,
			);
			name = "Support Files";
			path = "Example/Pods/Target Support Files/imKeyConnector";
			sourceTree = "<group>";
		};
		000000003730 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				000000003780 /* Info.plist */,
				000000003750 /* secp256k1.swift.modulemap */,
				000000003740 /* secp256k1.swift.xcconfig */,
				0000000037A0 /* secp256k1.swift-dummy.m */,
				000000003790 /* secp256k1.swift-prefix.pch */,
				000000003760 /* secp256k1.swift-umbrella.h */,
			);
			name = "Support Files";
			path = "../Target Support Files/secp256k1.swift";
			sourceTree = "<group>";
		};
		000000003860 /* Pods-imKeyConnector_Example */ = {
			isa = PBXGroup;
			children = (
				000000003890 /* Info.plist */,
				0000000038A0 /* Pods-imKeyConnector_Example.modulemap */,
				000000003900 /* Pods-imKeyConnector_Example-acknowledgements.markdown */,
				0000000038F0 /* Pods-imKeyConnector_Example-acknowledgements.plist */,
				000000003910 /* Pods-imKeyConnector_Example-dummy.m */,
				0000000038D0 /* Pods-imKeyConnector_Example-frameworks.sh */,
				0000000038E0 /* Pods-imKeyConnector_Example-resources.sh */,
				0000000038B0 /* Pods-imKeyConnector_Example-umbrella.h */,
				000000003880 /* Pods-imKeyConnector_Example.debug.xcconfig */,
				000000003870 /* Pods-imKeyConnector_Example.release.xcconfig */,
			);
			name = "Pods-imKeyConnector_Example";
			path = "Target Support Files/Pods-imKeyConnector_Example";
			sourceTree = "<group>";
		};
		0000000039D0 /* Pods-imKeyConnector_Tests */ = {
			isa = PBXGroup;
			children = (
				000000003A00 /* Info.plist */,
				000000003A10 /* Pods-imKeyConnector_Tests.modulemap */,
				000000003A70 /* Pods-imKeyConnector_Tests-acknowledgements.markdown */,
				000000003A60 /* Pods-imKeyConnector_Tests-acknowledgements.plist */,
				000000003A80 /* Pods-imKeyConnector_Tests-dummy.m */,
				000000003A40 /* Pods-imKeyConnector_Tests-frameworks.sh */,
				000000003A50 /* Pods-imKeyConnector_Tests-resources.sh */,
				000000003A20 /* Pods-imKeyConnector_Tests-umbrella.h */,
				0000000039F0 /* Pods-imKeyConnector_Tests.debug.xcconfig */,
				0000000039E0 /* Pods-imKeyConnector_Tests.release.xcconfig */,
			);
			name = "Pods-imKeyConnector_Tests";
			path = "Target Support Files/Pods-imKeyConnector_Tests";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		000000001810 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000001A20 /* BigInt-umbrella.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000001AC0 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002210 /* b64.h in Headers */,
				000000001EB0 /* BTC256.h in Headers */,
				000000001EC0 /* BTCAddress.h in Headers */,
				000000001ED0 /* BTCAddressSubclass.h in Headers */,
				000000001EE0 /* BTCAssetAddress.h in Headers */,
				000000001EF0 /* BTCAssetID.h in Headers */,
				000000001F00 /* BTCAssetType.h in Headers */,
				000000001F10 /* BTCBase58.h in Headers */,
				000000001F20 /* BTCBigNumber.h in Headers */,
				000000001F30 /* BTCBitcoinURL.h in Headers */,
				000000001F40 /* BTCBlindSignature.h in Headers */,
				000000001F50 /* BTCBlock.h in Headers */,
				000000001F60 /* BTCBlockchainInfo.h in Headers */,
				000000001F70 /* BTCBlockHeader.h in Headers */,
				000000001F80 /* BTCChainCom.h in Headers */,
				000000001F90 /* BTCCurrencyConverter.h in Headers */,
				000000001FA0 /* BTCCurvePoint.h in Headers */,
				000000001FB0 /* BTCData.h in Headers */,
				000000001FC0 /* BTCEncryptedBackup.h in Headers */,
				000000001FD0 /* BTCEncryptedMessage.h in Headers */,
				000000001FE0 /* BTCErrors.h in Headers */,
				000000001FF0 /* BTCFancyEncryptedMessage.h in Headers */,
				000000002000 /* BTCHashID.h in Headers */,
				000000002010 /* BTCKey.h in Headers */,
				000000002020 /* BTCKeychain.h in Headers */,
				000000002030 /* BTCMerkleTree.h in Headers */,
				000000002040 /* BTCMnemonic.h in Headers */,
				000000002050 /* BTCNetwork.h in Headers */,
				000000002060 /* BTCNumberFormatter.h in Headers */,
				000000002070 /* BTCOpcode.h in Headers */,
				000000002080 /* BTCOutpoint.h in Headers */,
				000000002090 /* BTCPaymentMethod.h in Headers */,
				0000000020A0 /* BTCPaymentMethodDetails.h in Headers */,
				0000000020B0 /* BTCPaymentMethodRequest.h in Headers */,
				0000000020C0 /* BTCPaymentProtocol.h in Headers */,
				0000000020D0 /* BTCPaymentRequest.h in Headers */,
				0000000020E0 /* BTCPriceSource.h in Headers */,
				0000000020F0 /* BTCProcessor.h in Headers */,
				000000002100 /* BTCProtocolBuffers.h in Headers */,
				000000002110 /* BTCProtocolSerialization.h in Headers */,
				000000002120 /* BTCQRCode.h in Headers */,
				000000002130 /* BTCScript.h in Headers */,
				000000002140 /* BTCScriptMachine.h in Headers */,
				000000002150 /* BTCScriptTestData.h in Headers */,
				000000002160 /* BTCSecretSharing.h in Headers */,
				000000002170 /* BTCSignatureHashType.h in Headers */,
				000000002180 /* BTCTransaction.h in Headers */,
				000000002190 /* BTCTransactionBuilder.h in Headers */,
				0000000021A0 /* BTCTransactionInput.h in Headers */,
				0000000021B0 /* BTCTransactionOutput.h in Headers */,
				0000000021C0 /* BTCUnitsAndLimits.h in Headers */,
				0000000022B0 /* CoreBitcoin-umbrella.h in Headers */,
				0000000021D0 /* CoreBitcoin.h in Headers */,
				000000002220 /* crypto_scrypt-hexconvert.h in Headers */,
				000000002230 /* libscrypt.h in Headers */,
				0000000021E0 /* NS+BTCBase58.h in Headers */,
				0000000021F0 /* NSData+BTCData.h in Headers */,
				000000002200 /* segwit_addr.h in Headers */,
				000000002240 /* sha256.h in Headers */,
				000000002250 /* slowequals.h in Headers */,
				000000002260 /* sysendian.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002350 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002810 /* CryptoSwift-umbrella.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000028B0 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002A30 /* FBSnapshotTestCase-umbrella.h in Headers */,
				0000000029B0 /* FBSnapshotTestCase.h in Headers */,
				0000000029C0 /* FBSnapshotTestCasePlatform.h in Headers */,
				0000000029D0 /* FBSnapshotTestController.h in Headers */,
				000000002970 /* UIApplication+StrictKeyWindow.h in Headers */,
				000000002980 /* UIImage+Compare.h in Headers */,
				000000002990 /* UIImage+Diff.h in Headers */,
				0000000029A0 /* UIImage+Snapshot.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002AD0 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002B70 /* LTHRadioButton-umbrella.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002C10 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002CC0 /* OrderedDictionary-umbrella.h in Headers */,
				000000002C70 /* OrderedDictionary.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002D60 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002E30 /* SipHash-umbrella.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002ED0 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000003290 /* ErrorCodesAndMacros.h in Headers */,
				0000000032A0 /* FTBLEDelegate.h in Headers */,
				0000000032B0 /* FTBLEInterface.h in Headers */,
				000000003310 /* imKeyConnector-umbrella.h in Headers */,
				D83079A92370B93500E58044 /* connector.h in Headers */,
				000000003280 /* imKeyConnector.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000033B0 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000003480 /* basic-config.h in Headers */,
				000000003490 /* ecdsa.h in Headers */,
				0000000034A0 /* ecdsa_impl.h in Headers */,
				0000000034B0 /* eckey.h in Headers */,
				0000000034C0 /* eckey_impl.h in Headers */,
				0000000034D0 /* ecmult.h in Headers */,
				0000000034E0 /* ecmult_const.h in Headers */,
				0000000034F0 /* ecmult_const_impl.h in Headers */,
				000000003500 /* ecmult_gen.h in Headers */,
				000000003510 /* ecmult_gen_impl.h in Headers */,
				000000003520 /* ecmult_impl.h in Headers */,
				000000003530 /* field.h in Headers */,
				000000003540 /* field_10x26.h in Headers */,
				000000003550 /* field_10x26_impl.h in Headers */,
				000000003560 /* field_5x52.h in Headers */,
				000000003570 /* field_5x52_asm_impl.h in Headers */,
				000000003580 /* field_5x52_impl.h in Headers */,
				000000003590 /* field_5x52_int128_impl.h in Headers */,
				0000000035A0 /* field_impl.h in Headers */,
				0000000035B0 /* group.h in Headers */,
				0000000035C0 /* group_impl.h in Headers */,
				0000000035D0 /* hash.h in Headers */,
				0000000035E0 /* hash_impl.h in Headers */,
				000000003430 /* lax_der_parsing.h in Headers */,
				000000003440 /* lax_der_privatekey_parsing.h in Headers */,
				0000000036E0 /* main_impl.h in Headers */,
				0000000036F0 /* main_impl.h in Headers */,
				0000000035F0 /* num.h in Headers */,
				000000003600 /* num_gmp.h in Headers */,
				000000003610 /* num_gmp_impl.h in Headers */,
				000000003620 /* num_impl.h in Headers */,
				000000003630 /* scalar.h in Headers */,
				000000003640 /* scalar_4x64.h in Headers */,
				000000003650 /* scalar_4x64_impl.h in Headers */,
				000000003660 /* scalar_8x32.h in Headers */,
				000000003670 /* scalar_8x32_impl.h in Headers */,
				000000003680 /* scalar_impl.h in Headers */,
				000000003690 /* scalar_low.h in Headers */,
				0000000036A0 /* scalar_low_impl.h in Headers */,
				0000000036B0 /* scratch.h in Headers */,
				0000000036C0 /* scratch_impl.h in Headers */,
				000000003700 /* secp256k1-config.h in Headers */,
				000000003450 /* secp256k1.h in Headers */,
				000000003770 /* secp256k1.swift-umbrella.h in Headers */,
				000000003720 /* secp256k1_ec_mult_static_context.h in Headers */,
				000000003460 /* secp256k1_ecdh.h in Headers */,
				000000003710 /* secp256k1_main.h in Headers */,
				000000003470 /* secp256k1_recovery.h in Headers */,
				0000000036D0 /* util.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000003810 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0000000038C0 /* Pods-imKeyConnector_Example-umbrella.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000003980 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000003A30 /* Pods-imKeyConnector_Tests-umbrella.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		0000000017C0 /* BigInt */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0000000017D0 /* Build configuration list for PBXNativeTarget "BigInt" */;
			buildPhases = (
				000000001810 /* Headers */,
				000000001820 /* Sources */,
				000000001830 /* Frameworks */,
				000000001840 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				000000003B40 /* PBXTargetDependency */,
			);
			name = BigInt;
			productName = BigInt;
			productReference = 000000001800 /* BigInt.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000001A70 /* CoreBitcoin */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000001A80 /* Build configuration list for PBXNativeTarget "CoreBitcoin" */;
			buildPhases = (
				000000001AC0 /* Headers */,
				000000001AD0 /* Sources */,
				000000001AE0 /* Frameworks */,
				000000001AF0 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CoreBitcoin;
			productName = CoreBitcoin;
			productReference = 000000001AB0 /* CoreBitcoin.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000002300 /* CryptoSwift */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000002310 /* Build configuration list for PBXNativeTarget "CryptoSwift" */;
			buildPhases = (
				000000002350 /* Headers */,
				000000002360 /* Sources */,
				000000002370 /* Frameworks */,
				000000002380 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CryptoSwift;
			productName = CryptoSwift;
			productReference = 000000002340 /* CryptoSwift.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000002860 /* FBSnapshotTestCase */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000002870 /* Build configuration list for PBXNativeTarget "FBSnapshotTestCase" */;
			buildPhases = (
				0000000028B0 /* Headers */,
				0000000028C0 /* Sources */,
				0000000028D0 /* Frameworks */,
				0000000028E0 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = FBSnapshotTestCase;
			productName = FBSnapshotTestCase;
			productReference = 0000000028A0 /* FBSnapshotTestCase.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000002A80 /* LTHRadioButton */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000002A90 /* Build configuration list for PBXNativeTarget "LTHRadioButton" */;
			buildPhases = (
				000000002AD0 /* Headers */,
				000000002AE0 /* Sources */,
				000000002AF0 /* Frameworks */,
				000000002B00 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LTHRadioButton;
			productName = LTHRadioButton;
			productReference = 000000002AC0 /* LTHRadioButton.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000002BC0 /* OrderedDictionary */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000002BD0 /* Build configuration list for PBXNativeTarget "OrderedDictionary" */;
			buildPhases = (
				000000002C10 /* Headers */,
				000000002C20 /* Sources */,
				000000002C30 /* Frameworks */,
				000000002C40 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = OrderedDictionary;
			productName = OrderedDictionary;
			productReference = 000000002C00 /* OrderedDictionary.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000002D10 /* SipHash */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000002D20 /* Build configuration list for PBXNativeTarget "SipHash" */;
			buildPhases = (
				000000002D60 /* Headers */,
				000000002D70 /* Sources */,
				000000002D80 /* Frameworks */,
				000000002D90 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SipHash;
			productName = SipHash;
			productReference = 000000002D50 /* SipHash.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000002E80 /* imKeyConnector */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000002E90 /* Build configuration list for PBXNativeTarget "imKeyConnector" */;
			buildPhases = (
				000000002ED0 /* Headers */,
				000000002EE0 /* Sources */,
				000000002EF0 /* Frameworks */,
				000000002F00 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				000000003C80 /* PBXTargetDependency */,
				000000003CC0 /* PBXTargetDependency */,
				000000003C40 /* PBXTargetDependency */,
				000000003D40 /* PBXTargetDependency */,
				000000003D80 /* PBXTargetDependency */,
				000000003D00 /* PBXTargetDependency */,
			);
			name = imKeyConnector;
			productName = imKeyConnector;
			productReference = 000000002EC0 /* imKeyConnector.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000003360 /* secp256k1.swift */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000003370 /* Build configuration list for PBXNativeTarget "secp256k1.swift" */;
			buildPhases = (
				0000000033B0 /* Headers */,
				0000000033C0 /* Sources */,
				0000000033D0 /* Frameworks */,
				0000000033E0 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = secp256k1.swift;
			productName = secp256k1.swift;
			productReference = 0000000033A0 /* secp256k1.framework */;
			productType = "com.apple.product-type.framework";
		};
		0000000037C0 /* Pods-imKeyConnector_Example */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0000000037D0 /* Build configuration list for PBXNativeTarget "Pods-imKeyConnector_Example" */;
			buildPhases = (
				000000003810 /* Headers */,
				000000003820 /* Sources */,
				000000003830 /* Frameworks */,
				000000003840 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				000000003B20 /* PBXTargetDependency */,
				000000003B80 /* PBXTargetDependency */,
				000000003BA0 /* PBXTargetDependency */,
				000000003BC0 /* PBXTargetDependency */,
				000000003BE0 /* PBXTargetDependency */,
				000000003C00 /* PBXTargetDependency */,
				000000003C20 /* PBXTargetDependency */,
				000000003DB0 /* PBXTargetDependency */,
			);
			name = "Pods-imKeyConnector_Example";
			productName = "Pods-imKeyConnector_Example";
			productReference = 000000003800 /* Pods_imKeyConnector_Example.framework */;
			productType = "com.apple.product-type.framework";
		};
		000000003930 /* Pods-imKeyConnector_Tests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 000000003940 /* Build configuration list for PBXNativeTarget "Pods-imKeyConnector_Tests" */;
			buildPhases = (
				000000003980 /* Headers */,
				000000003990 /* Sources */,
				0000000039A0 /* Frameworks */,
				0000000039B0 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				000000003DF0 /* PBXTargetDependency */,
				000000003DD0 /* PBXTargetDependency */,
			);
			name = "Pods-imKeyConnector_Tests";
			productName = "Pods-imKeyConnector_Tests";
			productReference = 000000003970 /* Pods_imKeyConnector_Tests.framework */;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		000000000000 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 0930;
				LastUpgradeCheck = 0930;
				TargetAttributes = {
					000000002300 = {
						LastSwiftMigration = 1010;
					};
					000000002E80 = {
						LastSwiftMigration = 1010;
					};
				};
			};
			buildConfigurationList = 000000000030 /* Build configuration list for PBXProject "Pods" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = 000000000010;
			productRefGroup = 000000000020 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				0000000017C0 /* BigInt */,
				000000001A70 /* CoreBitcoin */,
				000000002300 /* CryptoSwift */,
				000000002860 /* FBSnapshotTestCase */,
				000000002E80 /* imKeyConnector */,
				000000002A80 /* LTHRadioButton */,
				000000002BC0 /* OrderedDictionary */,
				0000000037C0 /* Pods-imKeyConnector_Example */,
				000000003930 /* Pods-imKeyConnector_Tests */,
				000000003360 /* secp256k1.swift */,
				000000002D10 /* SipHash */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		000000001840 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000001AF0 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002380 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000028E0 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002B00 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002C40 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002D90 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002F00 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000033E0 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000003840 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000039B0 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		000000001820 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000001880 /* Addition.swift in Sources */,
				000000001A60 /* BigInt-dummy.m in Sources */,
				000000001890 /* BigInt.swift in Sources */,
				0000000018A0 /* BigUInt.swift in Sources */,
				0000000018B0 /* Bitwise Ops.swift in Sources */,
				0000000018C0 /* Codable.swift in Sources */,
				0000000018D0 /* Comparable.swift in Sources */,
				0000000018E0 /* Data Conversion.swift in Sources */,
				0000000018F0 /* Division.swift in Sources */,
				000000001900 /* Exponentiation.swift in Sources */,
				000000001910 /* Floating Point Conversion.swift in Sources */,
				000000001920 /* GCD.swift in Sources */,
				000000001930 /* Hashable.swift in Sources */,
				000000001940 /* Integer Conversion.swift in Sources */,
				000000001950 /* Multiplication.swift in Sources */,
				000000001960 /* Prime Test.swift in Sources */,
				000000001970 /* Random.swift in Sources */,
				000000001980 /* Shifts.swift in Sources */,
				000000001990 /* Square Root.swift in Sources */,
				0000000019A0 /* Strideable.swift in Sources */,
				0000000019B0 /* String Conversion.swift in Sources */,
				0000000019C0 /* Subtraction.swift in Sources */,
				0000000019D0 /* Words and Bits.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000001AD0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000001E20 /* b64.c in Sources */,
				000000001B10 /* BTC256.m in Sources */,
				000000001B20 /* BTCAddress.m in Sources */,
				000000001B30 /* BTCAssetAddress.m in Sources */,
				000000001B40 /* BTCAssetID.m in Sources */,
				000000001B50 /* BTCAssetType.m in Sources */,
				000000001B60 /* BTCBase58.m in Sources */,
				000000001B70 /* BTCBigNumber.m in Sources */,
				000000001B80 /* BTCBitcoinURL.m in Sources */,
				000000001B90 /* BTCBlindSignature.m in Sources */,
				000000001BA0 /* BTCBlock.m in Sources */,
				000000001BB0 /* BTCBlockchainInfo.m in Sources */,
				000000001BC0 /* BTCBlockHeader.m in Sources */,
				000000001BD0 /* BTCChainCom.m in Sources */,
				000000001BE0 /* BTCCurrencyConverter.m in Sources */,
				000000001BF0 /* BTCCurvePoint.m in Sources */,
				000000001C00 /* BTCData.m in Sources */,
				000000001C10 /* BTCEncryptedBackup.m in Sources */,
				000000001C20 /* BTCEncryptedMessage.m in Sources */,
				000000001C30 /* BTCErrors.m in Sources */,
				000000001C40 /* BTCFancyEncryptedMessage.m in Sources */,
				000000001C50 /* BTCHashID.m in Sources */,
				000000001C60 /* BTCKey.m in Sources */,
				000000001C70 /* BTCKeychain.m in Sources */,
				000000001C80 /* BTCMerkleTree.m in Sources */,
				000000001C90 /* BTCMnemonic.m in Sources */,
				000000001CA0 /* BTCNetwork.m in Sources */,
				000000001CB0 /* BTCNumberFormatter.m in Sources */,
				000000001CC0 /* BTCOpcode.m in Sources */,
				000000001CD0 /* BTCOutpoint.m in Sources */,
				000000001CE0 /* BTCPaymentMethod.m in Sources */,
				000000001CF0 /* BTCPaymentMethodDetails.m in Sources */,
				000000001D00 /* BTCPaymentMethodRequest.m in Sources */,
				000000001D10 /* BTCPaymentProtocol.m in Sources */,
				000000001D20 /* BTCPaymentRequest.m in Sources */,
				000000001D30 /* BTCPriceSource.m in Sources */,
				000000001D40 /* BTCProcessor.m in Sources */,
				000000001D50 /* BTCProtocolBuffers.m in Sources */,
				000000001D60 /* BTCProtocolSerialization.m in Sources */,
				000000001D70 /* BTCQRCode.m in Sources */,
				000000001D80 /* BTCScript.m in Sources */,
				000000001D90 /* BTCScriptMachine.m in Sources */,
				000000001DA0 /* BTCSecretSharing.m in Sources */,
				000000001DB0 /* BTCTransaction.m in Sources */,
				000000001DC0 /* BTCTransactionBuilder.m in Sources */,
				000000001DD0 /* BTCTransactionInput.m in Sources */,
				000000001DE0 /* BTCTransactionOutput.m in Sources */,
				0000000022F0 /* CoreBitcoin-dummy.m in Sources */,
				000000001E30 /* crypto-mcf.c in Sources */,
				000000001E40 /* crypto-scrypt-saltgen.c in Sources */,
				000000001E50 /* crypto_scrypt-check.c in Sources */,
				000000001E60 /* crypto_scrypt-hash.c in Sources */,
				000000001E70 /* crypto_scrypt-hexconvert.c in Sources */,
				000000001E80 /* crypto_scrypt-nosse.c in Sources */,
				000000001DF0 /* NS+BTCBase58.m in Sources */,
				000000001E00 /* NSData+BTCData.m in Sources */,
				000000001E10 /* segwit_addr.c in Sources */,
				000000001E90 /* sha256.c in Sources */,
				000000001EA0 /* slowequals.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002360 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0000000023A0 /* AEAD.swift in Sources */,
				0000000023B0 /* AEADChaCha20Poly1305.swift in Sources */,
				000000002570 /* AES+Foundation.swift in Sources */,
				0000000023C0 /* AES.Cryptors.swift in Sources */,
				0000000023D0 /* AES.swift in Sources */,
				0000000023E0 /* Array+Extension.swift in Sources */,
				000000002580 /* Array+Foundation.swift in Sources */,
				0000000023F0 /* Authenticator.swift in Sources */,
				000000002400 /* BatchedCollection.swift in Sources */,
				000000002410 /* Bit.swift in Sources */,
				000000002420 /* BlockCipher.swift in Sources */,
				000000002430 /* BlockMode.swift in Sources */,
				000000002440 /* BlockModeOptions.swift in Sources */,
				000000002450 /* BlockModeWorker.swift in Sources */,
				000000002590 /* Blowfish+Foundation.swift in Sources */,
				0000000024D0 /* Blowfish.swift in Sources */,
				000000002460 /* CBC.swift in Sources */,
				000000002470 /* CFB.swift in Sources */,
				0000000025A0 /* ChaCha20+Foundation.swift in Sources */,
				0000000024E0 /* ChaCha20.swift in Sources */,
				0000000024F0 /* Checksum.swift in Sources */,
				000000002500 /* Cipher.swift in Sources */,
				000000002510 /* CMAC.swift in Sources */,
				000000002520 /* Collection+Extension.swift in Sources */,
				000000002530 /* CompactMap.swift in Sources */,
				000000002540 /* Cryptors.swift in Sources */,
				000000002850 /* CryptoSwift-dummy.m in Sources */,
				000000002480 /* CTR.swift in Sources */,
				0000000025B0 /* Data+Extension.swift in Sources */,
				000000002550 /* Digest.swift in Sources */,
				000000002560 /* DigestType.swift in Sources */,
				000000002490 /* ECB.swift in Sources */,
				000000002600 /* Generics.swift in Sources */,
				000000002610 /* HKDF.swift in Sources */,
				0000000025C0 /* HMAC+Foundation.swift in Sources */,
				000000002620 /* HMAC.swift in Sources */,
				000000002630 /* Int+Extension.swift in Sources */,
				000000002640 /* MD5.swift in Sources */,
				000000002650 /* NoPadding.swift in Sources */,
				0000000024A0 /* OFB.swift in Sources */,
				000000002660 /* Operators.swift in Sources */,
				000000002670 /* Padding.swift in Sources */,
				000000002680 /* PBKDF1.swift in Sources */,
				000000002690 /* PBKDF2.swift in Sources */,
				0000000024B0 /* PCBC.swift in Sources */,
				0000000026A0 /* PKCS5.swift in Sources */,
				0000000026B0 /* PKCS7.swift in Sources */,
				0000000026C0 /* PKCS7Padding.swift in Sources */,
				0000000026D0 /* Poly1305.swift in Sources */,
				0000000025D0 /* Rabbit+Foundation.swift in Sources */,
				0000000026E0 /* Rabbit.swift in Sources */,
				0000000024C0 /* RandomAccessBlockModeWorker.swift in Sources */,
				0000000026F0 /* RandomAccessCryptor.swift in Sources */,
				000000002700 /* RandomBytesSequence.swift in Sources */,
				000000002710 /* SecureBytes.swift in Sources */,
				000000002720 /* SHA1.swift in Sources */,
				000000002730 /* SHA2.swift in Sources */,
				000000002740 /* SHA3.swift in Sources */,
				000000002750 /* String+Extension.swift in Sources */,
				0000000025E0 /* String+FoundationExtension.swift in Sources */,
				000000002760 /* UInt16+Extension.swift in Sources */,
				000000002770 /* UInt32+Extension.swift in Sources */,
				000000002780 /* UInt64+Extension.swift in Sources */,
				000000002790 /* UInt8+Extension.swift in Sources */,
				0000000027A0 /* Updatable.swift in Sources */,
				0000000025F0 /* Utils+Foundation.swift in Sources */,
				0000000027B0 /* Utils.swift in Sources */,
				0000000027C0 /* ZeroPadding.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000028C0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002A70 /* FBSnapshotTestCase-dummy.m in Sources */,
				000000002940 /* FBSnapshotTestCase.m in Sources */,
				000000002950 /* FBSnapshotTestCasePlatform.m in Sources */,
				000000002960 /* FBSnapshotTestController.m in Sources */,
				0000000029E0 /* SwiftSupport.swift in Sources */,
				000000002900 /* UIApplication+StrictKeyWindow.m in Sources */,
				000000002910 /* UIImage+Compare.m in Sources */,
				000000002920 /* UIImage+Diff.m in Sources */,
				000000002930 /* UIImage+Snapshot.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002AE0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002BB0 /* LTHRadioButton-dummy.m in Sources */,
				000000002B20 /* LTHRadioButton.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002C20 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002D00 /* OrderedDictionary-dummy.m in Sources */,
				000000002C60 /* OrderedDictionary.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002D70 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000002DB0 /* Primitive Types.swift in Sources */,
				000000002DC0 /* RandomUInt64.swift in Sources */,
				000000002E70 /* SipHash-dummy.m in Sources */,
				000000002DD0 /* SipHashable.swift in Sources */,
				000000002DE0 /* SipHasher.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000002EE0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0000000031A0 /* AES128_ik.swift in Sources */,
				000000002F40 /* APDU.swift in Sources */,
				0000000030B0 /* APPDelete.swift in Sources */,
				0000000030C0 /* APPDownload.swift in Sources */,
				000000002F50 /* Applet.swift in Sources */,
				0000000030D0 /* APPUpdate.swift in Sources */,
				0000000030E0 /* AuthCodeStorage.swift in Sources */,
				000000002FD0 /* Bech32Address.swift in Sources */,
				0000000031F0 /* BigNumber.swift in Sources */,
				000000002F60 /* BIP44.swift in Sources */,
				000000002F20 /* BLE.swift in Sources */,
				000000002F30 /* BLEDelegate.swift in Sources */,
				000000002F70 /* BTCKey.swift in Sources */,
				000000002F80 /* BTCTransaction.swift in Sources */,
				000000002F90 /* BTCTransactionSigner.swift in Sources */,
				000000003200 /* ByteUtil.swift in Sources */,
				0000000030F0 /* Constants.swift in Sources */,
				000000002FE0 /* CosmosHrp.swift in Sources */,
				000000002FF0 /* CosmosKey.swift in Sources */,
				000000003000 /* CosmosTransaction.swift in Sources */,
				000000003210 /* Data+Extension.swift in Sources */,
				0000000031B0 /* Encryptor.swift in Sources */,
				000000003010 /* EOSKey.swift in Sources */,
				000000003020 /* EOSSignResult.swift in Sources */,
				000000003030 /* EOSTransaction.swift in Sources */,
				000000003040 /* EOSTransactionSigner.swift in Sources */,
				000000003050 /* ETHKey.swift in Sources */,
				000000003060 /* ETHTransaction.swift in Sources */,
				000000003220 /* Hex.swift in Sources */,
				000000003100 /* HTTP.swift in Sources */,
				000000003350 /* imKeyConnector-dummy.m in Sources */,
				000000003070 /* ImkeyError.swift in Sources */,
				0000000031C0 /* Keccak256_ik.swift in Sources */,
				000000003110 /* KeyFileStorage.swift in Sources */,
				000000003120 /* KeyManager.swift in Sources */,
				0000000032C0 /* libFtBTKeyApi.a in Sources */,
				000000003230 /* Log.swift in Sources */,
				000000003140 /* Manage.swift in Sources */,
				000000003080 /* Network.swift in Sources */,
				000000002FA0 /* OmniTransaction.swift in Sources */,
				000000002FB0 /* OmniTransactionSigner.swift in Sources */,
				000000003240 /* RLP.swift in Sources */,
				0000000031D0 /* RSAUtils.swift in Sources */,
				000000003150 /* SEActive.swift in Sources */,
				000000003160 /* SECertCheck.swift in Sources */,
				000000003170 /* SECheck.swift in Sources */,
				0000000031E0 /* Secp256k1.swift in Sources */,
				000000002FC0 /* SegWit.swift in Sources */,
				000000003180 /* SEQuery.swift in Sources */,
				000000003250 /* SigUtil.swift in Sources */,
				000000003260 /* String+Extension.swift in Sources */,
				000000003130 /* TLVUtil.swift in Sources */,
				000000003090 /* TransactionSignedResult.swift in Sources */,
				000000003190 /* TSMReq.swift in Sources */,
				000000003270 /* ValidatorAddress.swift in Sources */,
				0000000030A0 /* Wallet.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0000000033C0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000003400 /* lax_der_parsing.c in Sources */,
				000000003410 /* lax_der_privatekey_parsing.c in Sources */,
				000000003420 /* secp256k1.c in Sources */,
				0000000037B0 /* secp256k1.swift-dummy.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000003820 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000003920 /* Pods-imKeyConnector_Example-dummy.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		000000003990 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				000000003A90 /* Pods-imKeyConnector_Tests-dummy.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		000000003B20 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = BigInt;
			target = 0000000017C0 /* BigInt */;
			targetProxy = 000000003B10 /* PBXContainerItemProxy */;
		};
		000000003B40 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = SipHash;
			target = 000000002D10 /* SipHash */;
			targetProxy = 000000003B30 /* PBXContainerItemProxy */;
		};
		000000003B80 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = CoreBitcoin;
			target = 000000001A70 /* CoreBitcoin */;
			targetProxy = 000000003B70 /* PBXContainerItemProxy */;
		};
		000000003BA0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = CryptoSwift;
			target = 000000002300 /* CryptoSwift */;
			targetProxy = 000000003B90 /* PBXContainerItemProxy */;
		};
		000000003BC0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = LTHRadioButton;
			target = 000000002A80 /* LTHRadioButton */;
			targetProxy = 000000003BB0 /* PBXContainerItemProxy */;
		};
		000000003BE0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = OrderedDictionary;
			target = 000000002BC0 /* OrderedDictionary */;
			targetProxy = 000000003BD0 /* PBXContainerItemProxy */;
		};
		000000003C00 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = SipHash;
			target = 000000002D10 /* SipHash */;
			targetProxy = 000000003BF0 /* PBXContainerItemProxy */;
		};
		000000003C20 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = imKeyConnector;
			target = 000000002E80 /* imKeyConnector */;
			targetProxy = 000000003C10 /* PBXContainerItemProxy */;
		};
		000000003C40 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = CryptoSwift;
			target = 000000002300 /* CryptoSwift */;
			targetProxy = 000000003C30 /* PBXContainerItemProxy */;
		};
		000000003C80 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = BigInt;
			target = 0000000017C0 /* BigInt */;
			targetProxy = 000000003C70 /* PBXContainerItemProxy */;
		};
		000000003CC0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = CoreBitcoin;
			target = 000000001A70 /* CoreBitcoin */;
			targetProxy = 000000003CB0 /* PBXContainerItemProxy */;
		};
		000000003D00 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = secp256k1.swift;
			target = 000000003360 /* secp256k1.swift */;
			targetProxy = 000000003CF0 /* PBXContainerItemProxy */;
		};
		000000003D40 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = OrderedDictionary;
			target = 000000002BC0 /* OrderedDictionary */;
			targetProxy = 000000003D30 /* PBXContainerItemProxy */;
		};
		000000003D80 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = SipHash;
			target = 000000002D10 /* SipHash */;
			targetProxy = 000000003D70 /* PBXContainerItemProxy */;
		};
		000000003DB0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = secp256k1.swift;
			target = 000000003360 /* secp256k1.swift */;
			targetProxy = 000000003DA0 /* PBXContainerItemProxy */;
		};
		000000003DD0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = "Pods-imKeyConnector_Example";
			target = 0000000037C0 /* Pods-imKeyConnector_Example */;
			targetProxy = 000000003DC0 /* PBXContainerItemProxy */;
		};
		000000003DF0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = FBSnapshotTestCase;
			target = 000000002860 /* FBSnapshotTestCase */;
			targetProxy = 000000003DE0 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		000000000040 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGNING_ALLOWED = NO;
				CODE_SIGNING_REQUIRED = NO;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"POD_CONFIGURATION_DEBUG=1",
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				STRIP_INSTALLED_PRODUCT = NO;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SYMROOT = "${SRCROOT}/../build";
			};
			name = Debug;
		};
		000000000050 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGNING_ALLOWED = NO;
				CODE_SIGNING_REQUIRED = NO;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"POD_CONFIGURATION_RELEASE=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				STRIP_INSTALLED_PRODUCT = NO;
				SYMROOT = "${SRCROOT}/../build";
			};
			name = Release;
		};
		0000000017E0 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0000000019F0 /* BigInt.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/BigInt/BigInt-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/BigInt/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/BigInt/BigInt.modulemap";
				PRODUCT_MODULE_NAME = BigInt;
				PRODUCT_NAME = BigInt;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		0000000017F0 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0000000019F0 /* BigInt.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/BigInt/BigInt-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/BigInt/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/BigInt/BigInt.modulemap";
				PRODUCT_MODULE_NAME = BigInt;
				PRODUCT_NAME = BigInt;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000001A90 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002280 /* CoreBitcoin.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/CoreBitcoin/CoreBitcoin-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/CoreBitcoin/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/CoreBitcoin/CoreBitcoin.modulemap";
				PRODUCT_MODULE_NAME = CoreBitcoin;
				PRODUCT_NAME = CoreBitcoin;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000001AA0 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002280 /* CoreBitcoin.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/CoreBitcoin/CoreBitcoin-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/CoreBitcoin/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/CoreBitcoin/CoreBitcoin.modulemap";
				PRODUCT_MODULE_NAME = CoreBitcoin;
				PRODUCT_NAME = CoreBitcoin;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000002320 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0000000027E0 /* CryptoSwift.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/CryptoSwift/CryptoSwift-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/CryptoSwift/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/CryptoSwift/CryptoSwift.modulemap";
				PRODUCT_MODULE_NAME = CryptoSwift;
				PRODUCT_NAME = CryptoSwift;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000002330 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0000000027E0 /* CryptoSwift.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/CryptoSwift/CryptoSwift-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/CryptoSwift/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/CryptoSwift/CryptoSwift.modulemap";
				PRODUCT_MODULE_NAME = CryptoSwift;
				PRODUCT_NAME = CryptoSwift;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000002880 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002A00 /* FBSnapshotTestCase.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/FBSnapshotTestCase/FBSnapshotTestCase-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/FBSnapshotTestCase/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/FBSnapshotTestCase/FBSnapshotTestCase.modulemap";
				PRODUCT_MODULE_NAME = FBSnapshotTestCase;
				PRODUCT_NAME = FBSnapshotTestCase;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000002890 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002A00 /* FBSnapshotTestCase.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/FBSnapshotTestCase/FBSnapshotTestCase-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/FBSnapshotTestCase/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/FBSnapshotTestCase/FBSnapshotTestCase.modulemap";
				PRODUCT_MODULE_NAME = FBSnapshotTestCase;
				PRODUCT_NAME = FBSnapshotTestCase;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000002AA0 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002B40 /* LTHRadioButton.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/LTHRadioButton/LTHRadioButton-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/LTHRadioButton/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/LTHRadioButton/LTHRadioButton.modulemap";
				PRODUCT_MODULE_NAME = LTHRadioButton;
				PRODUCT_NAME = LTHRadioButton;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000002AB0 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002B40 /* LTHRadioButton.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/LTHRadioButton/LTHRadioButton-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/LTHRadioButton/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/LTHRadioButton/LTHRadioButton.modulemap";
				PRODUCT_MODULE_NAME = LTHRadioButton;
				PRODUCT_NAME = LTHRadioButton;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000002BE0 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002C90 /* OrderedDictionary.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/OrderedDictionary/OrderedDictionary-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/OrderedDictionary/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/OrderedDictionary/OrderedDictionary.modulemap";
				PRODUCT_MODULE_NAME = OrderedDictionary;
				PRODUCT_NAME = OrderedDictionary;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000002BF0 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002C90 /* OrderedDictionary.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/OrderedDictionary/OrderedDictionary-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/OrderedDictionary/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/OrderedDictionary/OrderedDictionary.modulemap";
				PRODUCT_MODULE_NAME = OrderedDictionary;
				PRODUCT_NAME = OrderedDictionary;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000002D30 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002E00 /* SipHash.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/SipHash/SipHash-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/SipHash/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/SipHash/SipHash.modulemap";
				PRODUCT_MODULE_NAME = SipHash;
				PRODUCT_NAME = SipHash;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000002D40 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000002E00 /* SipHash.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/SipHash/SipHash-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/SipHash/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/SipHash/SipHash.modulemap";
				PRODUCT_MODULE_NAME = SipHash;
				PRODUCT_NAME = SipHash;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000002EA0 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0000000032E0 /* imKeyConnector.xcconfig */;
			buildSettings = {
				CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES = YES;
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_BITCODE = NO;
				GCC_PREFIX_HEADER = "Target Support Files/imKeyConnector/imKeyConnector-prefix.pch";
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"\"${PODS_ROOT}/../../imKeyConnector/Classes/include\"",
				);
				INFOPLIST_FILE = "Target Support Files/imKeyConnector/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/imKeyConnector/imKeyConnector.modulemap";
				PRODUCT_MODULE_NAME = imKeyConnector;
				PRODUCT_NAME = imKeyConnector;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OBJC_BRIDGING_HEADER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000002EB0 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0000000032E0 /* imKeyConnector.xcconfig */;
			buildSettings = {
				CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES = YES;
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_BITCODE = NO;
				GCC_PREFIX_HEADER = "Target Support Files/imKeyConnector/imKeyConnector-prefix.pch";
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"\"${PODS_ROOT}/../../imKeyConnector/Classes/include\"",
				);
				INFOPLIST_FILE = "Target Support Files/imKeyConnector/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/imKeyConnector/imKeyConnector.modulemap";
				PRODUCT_MODULE_NAME = imKeyConnector;
				PRODUCT_NAME = imKeyConnector;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_OBJC_BRIDGING_HEADER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000003380 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000003740 /* secp256k1.swift.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/secp256k1.swift/secp256k1.swift-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/secp256k1.swift/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/secp256k1.swift/secp256k1.swift.modulemap";
				PRODUCT_MODULE_NAME = secp256k1;
				PRODUCT_NAME = secp256k1;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000003390 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000003740 /* secp256k1.swift.xcconfig */;
			buildSettings = {
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_PREFIX_HEADER = "Target Support Files/secp256k1.swift/secp256k1.swift-prefix.pch";
				INFOPLIST_FILE = "Target Support Files/secp256k1.swift/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MODULEMAP_FILE = "Target Support Files/secp256k1.swift/secp256k1.swift.modulemap";
				PRODUCT_MODULE_NAME = secp256k1;
				PRODUCT_NAME = secp256k1;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
				SWIFT_VERSION = 4.2;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		0000000037E0 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000003870 /* Pods-imKeyConnector_Example.release.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = "Target Support Files/Pods-imKeyConnector_Example/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MACH_O_TYPE = staticlib;
				MODULEMAP_FILE = "Target Support Files/Pods-imKeyConnector_Example/Pods-imKeyConnector_Example.modulemap";
				OTHER_LDFLAGS = "";
				OTHER_LIBTOOLFLAGS = "";
				PODS_ROOT = "$(SRCROOT)";
				PRODUCT_BUNDLE_IDENTIFIER = "org.cocoapods.${PRODUCT_NAME:rfc1034identifier}";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		0000000037F0 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 000000003880 /* Pods-imKeyConnector_Example.debug.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = "Target Support Files/Pods-imKeyConnector_Example/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MACH_O_TYPE = staticlib;
				MODULEMAP_FILE = "Target Support Files/Pods-imKeyConnector_Example/Pods-imKeyConnector_Example.modulemap";
				OTHER_LDFLAGS = "";
				OTHER_LIBTOOLFLAGS = "";
				PODS_ROOT = "$(SRCROOT)";
				PRODUCT_BUNDLE_IDENTIFIER = "org.cocoapods.${PRODUCT_NAME:rfc1034identifier}";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		000000003950 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0000000039E0 /* Pods-imKeyConnector_Tests.release.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = "Target Support Files/Pods-imKeyConnector_Tests/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MACH_O_TYPE = staticlib;
				MODULEMAP_FILE = "Target Support Files/Pods-imKeyConnector_Tests/Pods-imKeyConnector_Tests.modulemap";
				OTHER_LDFLAGS = "";
				OTHER_LIBTOOLFLAGS = "";
				PODS_ROOT = "$(SRCROOT)";
				PRODUCT_BUNDLE_IDENTIFIER = "org.cocoapods.${PRODUCT_NAME:rfc1034identifier}";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		000000003960 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0000000039F0 /* Pods-imKeyConnector_Tests.debug.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				CODE_SIGN_IDENTITY = "";
				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = "Target Support Files/Pods-imKeyConnector_Tests/Info.plist";
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				MACH_O_TYPE = staticlib;
				MODULEMAP_FILE = "Target Support Files/Pods-imKeyConnector_Tests/Pods-imKeyConnector_Tests.modulemap";
				OTHER_LDFLAGS = "";
				OTHER_LIBTOOLFLAGS = "";
				PODS_ROOT = "$(SRCROOT)";
				PRODUCT_BUNDLE_IDENTIFIER = "org.cocoapods.${PRODUCT_NAME:rfc1034identifier}";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		000000000030 /* Build configuration list for PBXProject "Pods" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000000040 /* Debug */,
				000000000050 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		0000000017D0 /* Build configuration list for PBXNativeTarget "BigInt" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0000000017F0 /* Debug */,
				0000000017E0 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000001A80 /* Build configuration list for PBXNativeTarget "CoreBitcoin" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000001AA0 /* Debug */,
				000000001A90 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000002310 /* Build configuration list for PBXNativeTarget "CryptoSwift" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000002330 /* Debug */,
				000000002320 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000002870 /* Build configuration list for PBXNativeTarget "FBSnapshotTestCase" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000002890 /* Debug */,
				000000002880 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000002A90 /* Build configuration list for PBXNativeTarget "LTHRadioButton" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000002AB0 /* Debug */,
				000000002AA0 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000002BD0 /* Build configuration list for PBXNativeTarget "OrderedDictionary" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000002BF0 /* Debug */,
				000000002BE0 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000002D20 /* Build configuration list for PBXNativeTarget "SipHash" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000002D40 /* Debug */,
				000000002D30 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000002E90 /* Build configuration list for PBXNativeTarget "imKeyConnector" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000002EB0 /* Debug */,
				000000002EA0 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000003370 /* Build configuration list for PBXNativeTarget "secp256k1.swift" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000003390 /* Debug */,
				000000003380 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		0000000037D0 /* Build configuration list for PBXNativeTarget "Pods-imKeyConnector_Example" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0000000037F0 /* Debug */,
				0000000037E0 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		000000003940 /* Build configuration list for PBXNativeTarget "Pods-imKeyConnector_Tests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				000000003960 /* Debug */,
				000000003950 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 000000000000 /* Project object */;
}
