// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "device.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace deviceapi {

namespace {

const ::google::protobuf::Descriptor* EmptyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmptyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeviceCert_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeviceCert_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthCode_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthCodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthCodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthCodeServiceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthCodeServiceResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SeAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SeAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* SeQueryResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SeQueryResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SeQueryServiceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SeQueryServiceResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindCheck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindCheck_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindCheckResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindCheckResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindAcquire_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindAcquire_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindAcquireResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindAcquireResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindDisplay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindDisplay_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindDisplayResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindDisplayResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeviceName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeviceName_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSnResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSnResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ApduResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ApduResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* Test_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Test_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckUpdateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckUpdateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AvailableAppBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AvailableAppBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* SdkInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SdkInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BleAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BleAction_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_device_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_device_2eproto() {
  protobuf_AddDesc_device_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "device.proto");
  GOOGLE_CHECK(file != NULL);
  EmptyResponse_descriptor_ = file->message_type(0);
  static const int EmptyResponse_offsets_[1] = {
  };
  EmptyResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EmptyResponse_descriptor_,
      EmptyResponse::internal_default_instance(),
      EmptyResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(EmptyResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyResponse, _internal_metadata_));
  AppAction_descriptor_ = file->message_type(1);
  static const int AppAction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppAction, app_name_),
  };
  AppAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppAction_descriptor_,
      AppAction::internal_default_instance(),
      AppAction_offsets_,
      -1,
      -1,
      -1,
      sizeof(AppAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppAction, _internal_metadata_));
  DeviceCert_descriptor_ = file->message_type(2);
  static const int DeviceCert_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCert, se_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCert, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCert, device_cert_),
  };
  DeviceCert_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeviceCert_descriptor_,
      DeviceCert::internal_default_instance(),
      DeviceCert_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeviceCert),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceCert, _internal_metadata_));
  AuthCode_descriptor_ = file->message_type(3);
  static const int AuthCode_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCode, se_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCode, auth_code_),
  };
  AuthCode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthCode_descriptor_,
      AuthCode::internal_default_instance(),
      AuthCode_offsets_,
      -1,
      -1,
      -1,
      sizeof(AuthCode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCode, _internal_metadata_));
  AuthCodeResponse_descriptor_ = file->message_type(4);
  static const int AuthCodeResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCodeResponse, se_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCodeResponse, next_stepkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCodeResponse, apdu_list_),
  };
  AuthCodeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthCodeResponse_descriptor_,
      AuthCodeResponse::internal_default_instance(),
      AuthCodeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AuthCodeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCodeResponse, _internal_metadata_));
  AuthCodeServiceResponse_descriptor_ = file->message_type(5);
  static const int AuthCodeServiceResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCodeServiceResponse, return_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCodeServiceResponse, return_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCodeServiceResponse, return_data_),
  };
  AuthCodeServiceResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthCodeServiceResponse_descriptor_,
      AuthCodeServiceResponse::internal_default_instance(),
      AuthCodeServiceResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AuthCodeServiceResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthCodeServiceResponse, _internal_metadata_));
  SeAction_descriptor_ = file->message_type(6);
  static const int SeAction_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeAction, se_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeAction, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeAction, device_cert_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeAction, sdk_version_),
  };
  SeAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SeAction_descriptor_,
      SeAction::internal_default_instance(),
      SeAction_offsets_,
      -1,
      -1,
      -1,
      sizeof(SeAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeAction, _internal_metadata_));
  SeQueryResponse_descriptor_ = file->message_type(7);
  static const int SeQueryResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryResponse, se_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryResponse, next_stepkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryResponse, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryResponse, sdk_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryResponse, available_app_bean_list_),
  };
  SeQueryResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SeQueryResponse_descriptor_,
      SeQueryResponse::internal_default_instance(),
      SeQueryResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SeQueryResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryResponse, _internal_metadata_));
  SeQueryServiceResponse_descriptor_ = file->message_type(8);
  static const int SeQueryServiceResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryServiceResponse, return_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryServiceResponse, return_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryServiceResponse, return_data_),
  };
  SeQueryServiceResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SeQueryServiceResponse_descriptor_,
      SeQueryServiceResponse::internal_default_instance(),
      SeQueryServiceResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SeQueryServiceResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeQueryServiceResponse, _internal_metadata_));
  BindCheck_descriptor_ = file->message_type(9);
  static const int BindCheck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindCheck, file_path_),
  };
  BindCheck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindCheck_descriptor_,
      BindCheck::internal_default_instance(),
      BindCheck_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindCheck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindCheck, _internal_metadata_));
  BindCheckResponse_descriptor_ = file->message_type(10);
  static const int BindCheckResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindCheckResponse, bind_status_),
  };
  BindCheckResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindCheckResponse_descriptor_,
      BindCheckResponse::internal_default_instance(),
      BindCheckResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindCheckResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindCheckResponse, _internal_metadata_));
  BindAcquire_descriptor_ = file->message_type(11);
  static const int BindAcquire_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAcquire, bind_code_),
  };
  BindAcquire_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindAcquire_descriptor_,
      BindAcquire::internal_default_instance(),
      BindAcquire_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindAcquire),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAcquire, _internal_metadata_));
  BindAcquireResponse_descriptor_ = file->message_type(12);
  static const int BindAcquireResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAcquireResponse, bind_result_),
  };
  BindAcquireResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindAcquireResponse_descriptor_,
      BindAcquireResponse::internal_default_instance(),
      BindAcquireResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindAcquireResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAcquireResponse, _internal_metadata_));
  BindDisplay_descriptor_ = file->message_type(13);
  static const int BindDisplay_offsets_[1] = {
  };
  BindDisplay_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindDisplay_descriptor_,
      BindDisplay::internal_default_instance(),
      BindDisplay_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindDisplay),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindDisplay, _internal_metadata_));
  BindDisplayResponse_descriptor_ = file->message_type(14);
  static const int BindDisplayResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindDisplayResponse, bind_display_result_),
  };
  BindDisplayResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindDisplayResponse_descriptor_,
      BindDisplayResponse::internal_default_instance(),
      BindDisplayResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindDisplayResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindDisplayResponse, _internal_metadata_));
  DeviceName_descriptor_ = file->message_type(15);
  static const int DeviceName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceName, ble_name_),
  };
  DeviceName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeviceName_descriptor_,
      DeviceName::internal_default_instance(),
      DeviceName_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeviceName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceName, _internal_metadata_));
  GetSnResponse_descriptor_ = file->message_type(16);
  static const int GetSnResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnResponse, sn_),
  };
  GetSnResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetSnResponse_descriptor_,
      GetSnResponse::internal_default_instance(),
      GetSnResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetSnResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSnResponse, _internal_metadata_));
  ApduResponse_descriptor_ = file->message_type(17);
  static const int ApduResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApduResponse, result_),
  };
  ApduResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ApduResponse_descriptor_,
      ApduResponse::internal_default_instance(),
      ApduResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ApduResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApduResponse, _internal_metadata_));
  Test_descriptor_ = file->message_type(18);
  static const int Test_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test, tt_),
  };
  Test_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Test_descriptor_,
      Test::internal_default_instance(),
      Test_offsets_,
      -1,
      -1,
      -1,
      sizeof(Test),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test, _internal_metadata_));
  CheckUpdateResponse_descriptor_ = file->message_type(19);
  static const int CheckUpdateResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateResponse, se_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateResponse, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateResponse, sdk_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateResponse, available_app_list_),
  };
  CheckUpdateResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckUpdateResponse_descriptor_,
      CheckUpdateResponse::internal_default_instance(),
      CheckUpdateResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CheckUpdateResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateResponse, _internal_metadata_));
  AvailableAppBean_descriptor_ = file->message_type(20);
  static const int AvailableAppBean_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, app_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, app_logo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, installed_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, last_updated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, latest_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, install_mode_),
  };
  AvailableAppBean_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AvailableAppBean_descriptor_,
      AvailableAppBean::internal_default_instance(),
      AvailableAppBean_offsets_,
      -1,
      -1,
      -1,
      sizeof(AvailableAppBean),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvailableAppBean, _internal_metadata_));
  SdkInfoResponse_descriptor_ = file->message_type(21);
  static const int SdkInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkInfoResponse, sdk_version_),
  };
  SdkInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SdkInfoResponse_descriptor_,
      SdkInfoResponse::internal_default_instance(),
      SdkInfoResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SdkInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkInfoResponse, _internal_metadata_));
  BleAction_descriptor_ = file->message_type(22);
  static const int BleAction_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BleAction, ble_name_),
  };
  BleAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BleAction_descriptor_,
      BleAction::internal_default_instance(),
      BleAction_offsets_,
      -1,
      -1,
      -1,
      sizeof(BleAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BleAction, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_device_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EmptyResponse_descriptor_, EmptyResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppAction_descriptor_, AppAction::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeviceCert_descriptor_, DeviceCert::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthCode_descriptor_, AuthCode::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthCodeResponse_descriptor_, AuthCodeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthCodeServiceResponse_descriptor_, AuthCodeServiceResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SeAction_descriptor_, SeAction::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SeQueryResponse_descriptor_, SeQueryResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SeQueryServiceResponse_descriptor_, SeQueryServiceResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindCheck_descriptor_, BindCheck::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindCheckResponse_descriptor_, BindCheckResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindAcquire_descriptor_, BindAcquire::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindAcquireResponse_descriptor_, BindAcquireResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindDisplay_descriptor_, BindDisplay::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindDisplayResponse_descriptor_, BindDisplayResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeviceName_descriptor_, DeviceName::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetSnResponse_descriptor_, GetSnResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ApduResponse_descriptor_, ApduResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Test_descriptor_, Test::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckUpdateResponse_descriptor_, CheckUpdateResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AvailableAppBean_descriptor_, AvailableAppBean::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SdkInfoResponse_descriptor_, SdkInfoResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BleAction_descriptor_, BleAction::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_device_2eproto() {
  EmptyResponse_default_instance_.Shutdown();
  delete EmptyResponse_reflection_;
  AppAction_default_instance_.Shutdown();
  delete AppAction_reflection_;
  DeviceCert_default_instance_.Shutdown();
  delete DeviceCert_reflection_;
  AuthCode_default_instance_.Shutdown();
  delete AuthCode_reflection_;
  AuthCodeResponse_default_instance_.Shutdown();
  delete AuthCodeResponse_reflection_;
  AuthCodeServiceResponse_default_instance_.Shutdown();
  delete AuthCodeServiceResponse_reflection_;
  SeAction_default_instance_.Shutdown();
  delete SeAction_reflection_;
  SeQueryResponse_default_instance_.Shutdown();
  delete SeQueryResponse_reflection_;
  SeQueryServiceResponse_default_instance_.Shutdown();
  delete SeQueryServiceResponse_reflection_;
  BindCheck_default_instance_.Shutdown();
  delete BindCheck_reflection_;
  BindCheckResponse_default_instance_.Shutdown();
  delete BindCheckResponse_reflection_;
  BindAcquire_default_instance_.Shutdown();
  delete BindAcquire_reflection_;
  BindAcquireResponse_default_instance_.Shutdown();
  delete BindAcquireResponse_reflection_;
  BindDisplay_default_instance_.Shutdown();
  delete BindDisplay_reflection_;
  BindDisplayResponse_default_instance_.Shutdown();
  delete BindDisplayResponse_reflection_;
  DeviceName_default_instance_.Shutdown();
  delete DeviceName_reflection_;
  GetSnResponse_default_instance_.Shutdown();
  delete GetSnResponse_reflection_;
  ApduResponse_default_instance_.Shutdown();
  delete ApduResponse_reflection_;
  Test_default_instance_.Shutdown();
  delete Test_reflection_;
  CheckUpdateResponse_default_instance_.Shutdown();
  delete CheckUpdateResponse_reflection_;
  AvailableAppBean_default_instance_.Shutdown();
  delete AvailableAppBean_reflection_;
  SdkInfoResponse_default_instance_.Shutdown();
  delete SdkInfoResponse_reflection_;
  BleAction_default_instance_.Shutdown();
  delete BleAction_reflection_;
}

void protobuf_InitDefaults_device_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  EmptyResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AppAction_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeviceCert_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AuthCode_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AuthCodeResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AuthCodeServiceResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SeAction_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SeQueryResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SeQueryServiceResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindCheck_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindCheckResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindAcquire_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindAcquireResponse_default_instance_.DefaultConstruct();
  BindDisplay_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindDisplayResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeviceName_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetSnResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ApduResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Test_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CheckUpdateResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AvailableAppBean_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SdkInfoResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BleAction_default_instance_.DefaultConstruct();
  EmptyResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AppAction_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeviceCert_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthCode_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthCodeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthCodeServiceResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SeAction_default_instance_.get_mutable()->InitAsDefaultInstance();
  SeQueryResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SeQueryServiceResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindCheck_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindCheckResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindAcquire_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindAcquireResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindDisplay_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindDisplayResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeviceName_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetSnResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ApduResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  Test_default_instance_.get_mutable()->InitAsDefaultInstance();
  CheckUpdateResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AvailableAppBean_default_instance_.get_mutable()->InitAsDefaultInstance();
  SdkInfoResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  BleAction_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_device_2eproto_once_);
void protobuf_InitDefaults_device_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_device_2eproto_once_,
                 &protobuf_InitDefaults_device_2eproto_impl);
}
void protobuf_AddDesc_device_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_device_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014device.proto\022\tdeviceapi\"\017\n\rEmptyRespon"
    "se\"\035\n\tAppAction\022\020\n\010app_name\030\001 \001(\t\"<\n\nDev"
    "iceCert\022\r\n\005se_id\030\001 \001(\t\022\n\n\002sn\030\002 \001(\t\022\023\n\013de"
    "vice_cert\030\003 \001(\t\",\n\010AuthCode\022\r\n\005se_id\030\001 \001"
    "(\t\022\021\n\tauth_code\030\002 \001(\t\"J\n\020AuthCodeRespons"
    "e\022\r\n\005se_id\030\001 \001(\t\022\024\n\014next_stepkey\030\002 \001(\t\022\021"
    "\n\tapdu_list\030\003 \003(\t\"t\n\027AuthCodeServiceResp"
    "onse\022\023\n\013return_code\030\001 \001(\t\022\022\n\nreturn_msg\030"
    "\002 \001(\t\0220\n\013return_data\030\003 \001(\0132\033.deviceapi.A"
    "uthCodeResponse\"O\n\010SeAction\022\r\n\005se_id\030\001 \001"
    "(\t\022\n\n\002sn\030\002 \001(\t\022\023\n\013device_cert\030\003 \001(\t\022\023\n\013s"
    "dk_version\030\004 \001(\t\"\222\001\n\017SeQueryResponse\022\r\n\005"
    "se_id\030\001 \001(\t\022\024\n\014next_stepkey\030\002 \001(\t\022\n\n\002sn\030"
    "\003 \001(\t\022\020\n\010sdk_mode\030\004 \001(\t\022<\n\027available_app"
    "_bean_list\030\005 \003(\0132\033.deviceapi.AvailableAp"
    "pBean\"r\n\026SeQueryServiceResponse\022\023\n\013retur"
    "n_code\030\001 \001(\t\022\022\n\nreturn_msg\030\002 \001(\t\022/\n\013retu"
    "rn_data\030\003 \001(\0132\032.deviceapi.SeQueryRespons"
    "e\"\036\n\tBindCheck\022\021\n\tfile_path\030\001 \001(\t\"(\n\021Bin"
    "dCheckResponse\022\023\n\013bind_status\030\001 \001(\t\" \n\013B"
    "indAcquire\022\021\n\tbind_code\030\001 \001(\t\"*\n\023BindAcq"
    "uireResponse\022\023\n\013bind_result\030\001 \001(\t\"\r\n\013Bin"
    "dDisplay\"2\n\023BindDisplayResponse\022\033\n\023bind_"
    "display_result\030\001 \001(\t\"\036\n\nDeviceName\022\020\n\010bl"
    "e_name\030\001 \001(\t\"\033\n\rGetSnResponse\022\n\n\002sn\030\001 \001("
    "\t\"\036\n\014ApduResponse\022\016\n\006result\030\001 \001(\t\"\022\n\004Tes"
    "t\022\n\n\002tt\030\001 \001(\t\"\213\001\n\023CheckUpdateResponse\022\r\n"
    "\005se_id\030\001 \001(\t\022\n\n\002sn\030\002 \001(\t\022\016\n\006status\030\003 \001(\t"
    "\022\020\n\010sdk_mode\030\004 \001(\t\0227\n\022available_app_list"
    "\030\005 \003(\0132\033.deviceapi.AvailableAppBean\"\225\001\n\020"
    "AvailableAppBean\022\020\n\010app_name\030\001 \001(\t\022\020\n\010ap"
    "p_logo\030\002 \001(\t\022\031\n\021installed_version\030\003 \001(\t\022"
    "\024\n\014last_updated\030\004 \001(\t\022\026\n\016latest_version\030"
    "\005 \001(\t\022\024\n\014install_mode\030\006 \001(\t\"&\n\017SdkInfoRe"
    "sponse\022\023\n\013sdk_version\030\001 \001(\t\"\035\n\tBleAction"
    "\022\020\n\010ble_name\030\001 \001(\tb\006proto3", 1426);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "device.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_device_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_device_2eproto_once_);
void protobuf_AddDesc_device_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_device_2eproto_once_,
                 &protobuf_AddDesc_device_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_device_2eproto {
  StaticDescriptorInitializer_device_2eproto() {
    protobuf_AddDesc_device_2eproto();
  }
} static_descriptor_initializer_device_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyResponse::EmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.EmptyResponse)
}

void EmptyResponse::InitAsDefaultInstance() {
}

EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
  _cached_size_ = 0;
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
}

void EmptyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmptyResponse_descriptor_;
}

const EmptyResponse& EmptyResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EmptyResponse> EmptyResponse_default_instance_;

EmptyResponse* EmptyResponse::New(::google::protobuf::Arena* arena) const {
  EmptyResponse* n = new EmptyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.EmptyResponse)
}

bool EmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.EmptyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.EmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.EmptyResponse)
  return false;
#undef DO_
}

void EmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.EmptyResponse)
  // @@protoc_insertion_point(serialize_end:deviceapi.EmptyResponse)
}

::google::protobuf::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.EmptyResponse)
  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.EmptyResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.EmptyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EmptyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.EmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.EmptyResponse)
    UnsafeMergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.EmptyResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EmptyResponse::UnsafeMergeFrom(const EmptyResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void EmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.EmptyResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {

  return true;
}

void EmptyResponse::Swap(EmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyResponse::InternalSwap(EmptyResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmptyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmptyResponse_descriptor_;
  metadata.reflection = EmptyResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyResponse

inline const EmptyResponse* EmptyResponse::internal_default_instance() {
  return &EmptyResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppAction::kAppNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppAction::AppAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AppAction)
}

void AppAction::InitAsDefaultInstance() {
}

AppAction::AppAction(const AppAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AppAction)
}

void AppAction::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AppAction::~AppAction() {
  // @@protoc_insertion_point(destructor:deviceapi.AppAction)
  SharedDtor();
}

void AppAction::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppAction_descriptor_;
}

const AppAction& AppAction::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AppAction> AppAction_default_instance_;

AppAction* AppAction::New(::google::protobuf::Arena* arena) const {
  AppAction* n = new AppAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppAction::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AppAction)
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AppAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AppAction.app_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AppAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AppAction)
  return false;
#undef DO_
}

void AppAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AppAction)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AppAction.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AppAction)
}

::google::protobuf::uint8* AppAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AppAction)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AppAction.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AppAction)
  return target;
}

size_t AppAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AppAction)
  size_t total_size = 0;

  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AppAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AppAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AppAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AppAction)
    UnsafeMergeFrom(*source);
  }
}

void AppAction::MergeFrom(const AppAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AppAction)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AppAction::UnsafeMergeFrom(const AppAction& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
}

void AppAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AppAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppAction::CopyFrom(const AppAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AppAction)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AppAction::IsInitialized() const {

  return true;
}

void AppAction::Swap(AppAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppAction::InternalSwap(AppAction* other) {
  app_name_.Swap(&other->app_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppAction_descriptor_;
  metadata.reflection = AppAction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppAction

// optional string app_name = 1;
void AppAction::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppAction::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AppAction.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppAction::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AppAction.app_name)
}
void AppAction::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AppAction.app_name)
}
void AppAction::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AppAction.app_name)
}
::std::string* AppAction::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AppAction.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppAction::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AppAction.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppAction::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AppAction.app_name)
}

inline const AppAction* AppAction::internal_default_instance() {
  return &AppAction_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceCert::kSeIdFieldNumber;
const int DeviceCert::kSnFieldNumber;
const int DeviceCert::kDeviceCertFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceCert::DeviceCert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.DeviceCert)
}

void DeviceCert::InitAsDefaultInstance() {
}

DeviceCert::DeviceCert(const DeviceCert& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.DeviceCert)
}

void DeviceCert::SharedCtor() {
  se_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_cert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeviceCert::~DeviceCert() {
  // @@protoc_insertion_point(destructor:deviceapi.DeviceCert)
  SharedDtor();
}

void DeviceCert::SharedDtor() {
  se_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_cert_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceCert::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceCert::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeviceCert_descriptor_;
}

const DeviceCert& DeviceCert::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeviceCert> DeviceCert_default_instance_;

DeviceCert* DeviceCert::New(::google::protobuf::Arena* arena) const {
  DeviceCert* n = new DeviceCert;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceCert::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.DeviceCert)
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_cert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeviceCert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.DeviceCert)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string se_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_se_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->se_id().data(), this->se_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.DeviceCert.se_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sn;
        break;
      }

      // optional string sn = 2;
      case 2: {
        if (tag == 18) {
         parse_sn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.DeviceCert.sn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_device_cert;
        break;
      }

      // optional string device_cert = 3;
      case 3: {
        if (tag == 26) {
         parse_device_cert:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_cert()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_cert().data(), this->device_cert().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.DeviceCert.device_cert"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.DeviceCert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.DeviceCert)
  return false;
#undef DO_
}

void DeviceCert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.DeviceCert)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.DeviceCert.se_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->se_id(), output);
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.DeviceCert.sn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sn(), output);
  }

  // optional string device_cert = 3;
  if (this->device_cert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_cert().data(), this->device_cert().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.DeviceCert.device_cert");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_cert(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.DeviceCert)
}

::google::protobuf::uint8* DeviceCert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.DeviceCert)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.DeviceCert.se_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->se_id(), target);
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.DeviceCert.sn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sn(), target);
  }

  // optional string device_cert = 3;
  if (this->device_cert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_cert().data(), this->device_cert().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.DeviceCert.device_cert");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_cert(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.DeviceCert)
  return target;
}

size_t DeviceCert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.DeviceCert)
  size_t total_size = 0;

  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->se_id());
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());
  }

  // optional string device_cert = 3;
  if (this->device_cert().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_cert());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceCert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.DeviceCert)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeviceCert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceCert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.DeviceCert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.DeviceCert)
    UnsafeMergeFrom(*source);
  }
}

void DeviceCert::MergeFrom(const DeviceCert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.DeviceCert)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeviceCert::UnsafeMergeFrom(const DeviceCert& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.se_id().size() > 0) {

    se_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_id_);
  }
  if (from.sn().size() > 0) {

    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
  if (from.device_cert().size() > 0) {

    device_cert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_cert_);
  }
}

void DeviceCert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.DeviceCert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceCert::CopyFrom(const DeviceCert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.DeviceCert)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeviceCert::IsInitialized() const {

  return true;
}

void DeviceCert::Swap(DeviceCert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceCert::InternalSwap(DeviceCert* other) {
  se_id_.Swap(&other->se_id_);
  sn_.Swap(&other->sn_);
  device_cert_.Swap(&other->device_cert_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceCert::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeviceCert_descriptor_;
  metadata.reflection = DeviceCert_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceCert

// optional string se_id = 1;
void DeviceCert::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceCert::se_id() const {
  // @@protoc_insertion_point(field_get:deviceapi.DeviceCert.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceCert::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.DeviceCert.se_id)
}
void DeviceCert::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.DeviceCert.se_id)
}
void DeviceCert::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.DeviceCert.se_id)
}
::std::string* DeviceCert::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.DeviceCert.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceCert::release_se_id() {
  // @@protoc_insertion_point(field_release:deviceapi.DeviceCert.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceCert::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.DeviceCert.se_id)
}

// optional string sn = 2;
void DeviceCert::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceCert::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.DeviceCert.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceCert::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.DeviceCert.sn)
}
void DeviceCert::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.DeviceCert.sn)
}
void DeviceCert::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.DeviceCert.sn)
}
::std::string* DeviceCert::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.DeviceCert.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceCert::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.DeviceCert.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceCert::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.DeviceCert.sn)
}

// optional string device_cert = 3;
void DeviceCert::clear_device_cert() {
  device_cert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceCert::device_cert() const {
  // @@protoc_insertion_point(field_get:deviceapi.DeviceCert.device_cert)
  return device_cert_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceCert::set_device_cert(const ::std::string& value) {
  
  device_cert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.DeviceCert.device_cert)
}
void DeviceCert::set_device_cert(const char* value) {
  
  device_cert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.DeviceCert.device_cert)
}
void DeviceCert::set_device_cert(const char* value, size_t size) {
  
  device_cert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.DeviceCert.device_cert)
}
::std::string* DeviceCert::mutable_device_cert() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.DeviceCert.device_cert)
  return device_cert_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceCert::release_device_cert() {
  // @@protoc_insertion_point(field_release:deviceapi.DeviceCert.device_cert)
  
  return device_cert_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceCert::set_allocated_device_cert(::std::string* device_cert) {
  if (device_cert != NULL) {
    
  } else {
    
  }
  device_cert_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_cert);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.DeviceCert.device_cert)
}

inline const DeviceCert* DeviceCert::internal_default_instance() {
  return &DeviceCert_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthCode::kSeIdFieldNumber;
const int AuthCode::kAuthCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthCode::AuthCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AuthCode)
}

void AuthCode::InitAsDefaultInstance() {
}

AuthCode::AuthCode(const AuthCode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AuthCode)
}

void AuthCode::SharedCtor() {
  se_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthCode::~AuthCode() {
  // @@protoc_insertion_point(destructor:deviceapi.AuthCode)
  SharedDtor();
}

void AuthCode::SharedDtor() {
  se_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthCode_descriptor_;
}

const AuthCode& AuthCode::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthCode> AuthCode_default_instance_;

AuthCode* AuthCode::New(::google::protobuf::Arena* arena) const {
  AuthCode* n = new AuthCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthCode::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AuthCode)
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AuthCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AuthCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string se_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_se_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->se_id().data(), this->se_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AuthCode.se_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_auth_code;
        break;
      }

      // optional string auth_code = 2;
      case 2: {
        if (tag == 18) {
         parse_auth_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auth_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auth_code().data(), this->auth_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AuthCode.auth_code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AuthCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AuthCode)
  return false;
#undef DO_
}

void AuthCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AuthCode)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCode.se_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->se_id(), output);
  }

  // optional string auth_code = 2;
  if (this->auth_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_code().data(), this->auth_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCode.auth_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->auth_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AuthCode)
}

::google::protobuf::uint8* AuthCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AuthCode)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCode.se_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->se_id(), target);
  }

  // optional string auth_code = 2;
  if (this->auth_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_code().data(), this->auth_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCode.auth_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->auth_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AuthCode)
  return target;
}

size_t AuthCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AuthCode)
  size_t total_size = 0;

  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->se_id());
  }

  // optional string auth_code = 2;
  if (this->auth_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auth_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AuthCode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AuthCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AuthCode)
    UnsafeMergeFrom(*source);
  }
}

void AuthCode::MergeFrom(const AuthCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AuthCode)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthCode::UnsafeMergeFrom(const AuthCode& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.se_id().size() > 0) {

    se_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_id_);
  }
  if (from.auth_code().size() > 0) {

    auth_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_code_);
  }
}

void AuthCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AuthCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthCode::CopyFrom(const AuthCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AuthCode)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthCode::IsInitialized() const {

  return true;
}

void AuthCode::Swap(AuthCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthCode::InternalSwap(AuthCode* other) {
  se_id_.Swap(&other->se_id_);
  auth_code_.Swap(&other->auth_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthCode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthCode_descriptor_;
  metadata.reflection = AuthCode_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthCode

// optional string se_id = 1;
void AuthCode::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthCode::se_id() const {
  // @@protoc_insertion_point(field_get:deviceapi.AuthCode.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCode::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AuthCode.se_id)
}
void AuthCode::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AuthCode.se_id)
}
void AuthCode::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AuthCode.se_id)
}
::std::string* AuthCode::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AuthCode.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthCode::release_se_id() {
  // @@protoc_insertion_point(field_release:deviceapi.AuthCode.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCode::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AuthCode.se_id)
}

// optional string auth_code = 2;
void AuthCode::clear_auth_code() {
  auth_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthCode::auth_code() const {
  // @@protoc_insertion_point(field_get:deviceapi.AuthCode.auth_code)
  return auth_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCode::set_auth_code(const ::std::string& value) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AuthCode.auth_code)
}
void AuthCode::set_auth_code(const char* value) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AuthCode.auth_code)
}
void AuthCode::set_auth_code(const char* value, size_t size) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AuthCode.auth_code)
}
::std::string* AuthCode::mutable_auth_code() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AuthCode.auth_code)
  return auth_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthCode::release_auth_code() {
  // @@protoc_insertion_point(field_release:deviceapi.AuthCode.auth_code)
  
  return auth_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCode::set_allocated_auth_code(::std::string* auth_code) {
  if (auth_code != NULL) {
    
  } else {
    
  }
  auth_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_code);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AuthCode.auth_code)
}

inline const AuthCode* AuthCode::internal_default_instance() {
  return &AuthCode_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthCodeResponse::kSeIdFieldNumber;
const int AuthCodeResponse::kNextStepkeyFieldNumber;
const int AuthCodeResponse::kApduListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthCodeResponse::AuthCodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AuthCodeResponse)
}

void AuthCodeResponse::InitAsDefaultInstance() {
}

AuthCodeResponse::AuthCodeResponse(const AuthCodeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AuthCodeResponse)
}

void AuthCodeResponse::SharedCtor() {
  se_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_stepkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthCodeResponse::~AuthCodeResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.AuthCodeResponse)
  SharedDtor();
}

void AuthCodeResponse::SharedDtor() {
  se_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_stepkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthCodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthCodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthCodeResponse_descriptor_;
}

const AuthCodeResponse& AuthCodeResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthCodeResponse> AuthCodeResponse_default_instance_;

AuthCodeResponse* AuthCodeResponse::New(::google::protobuf::Arena* arena) const {
  AuthCodeResponse* n = new AuthCodeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthCodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AuthCodeResponse)
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_stepkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apdu_list_.Clear();
}

bool AuthCodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AuthCodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string se_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_se_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->se_id().data(), this->se_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AuthCodeResponse.se_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_next_stepkey;
        break;
      }

      // optional string next_stepkey = 2;
      case 2: {
        if (tag == 18) {
         parse_next_stepkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_stepkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_stepkey().data(), this->next_stepkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AuthCodeResponse.next_stepkey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_apdu_list;
        break;
      }

      // repeated string apdu_list = 3;
      case 3: {
        if (tag == 26) {
         parse_apdu_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_apdu_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apdu_list(this->apdu_list_size() - 1).data(),
            this->apdu_list(this->apdu_list_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AuthCodeResponse.apdu_list"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_apdu_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AuthCodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AuthCodeResponse)
  return false;
#undef DO_
}

void AuthCodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AuthCodeResponse)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeResponse.se_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->se_id(), output);
  }

  // optional string next_stepkey = 2;
  if (this->next_stepkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_stepkey().data(), this->next_stepkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeResponse.next_stepkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_stepkey(), output);
  }

  // repeated string apdu_list = 3;
  for (int i = 0; i < this->apdu_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apdu_list(i).data(), this->apdu_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeResponse.apdu_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->apdu_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AuthCodeResponse)
}

::google::protobuf::uint8* AuthCodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AuthCodeResponse)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeResponse.se_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->se_id(), target);
  }

  // optional string next_stepkey = 2;
  if (this->next_stepkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_stepkey().data(), this->next_stepkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeResponse.next_stepkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_stepkey(), target);
  }

  // repeated string apdu_list = 3;
  for (int i = 0; i < this->apdu_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apdu_list(i).data(), this->apdu_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeResponse.apdu_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->apdu_list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AuthCodeResponse)
  return target;
}

size_t AuthCodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AuthCodeResponse)
  size_t total_size = 0;

  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->se_id());
  }

  // optional string next_stepkey = 2;
  if (this->next_stepkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_stepkey());
  }

  // repeated string apdu_list = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->apdu_list_size());
  for (int i = 0; i < this->apdu_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->apdu_list(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthCodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AuthCodeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthCodeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthCodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AuthCodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AuthCodeResponse)
    UnsafeMergeFrom(*source);
  }
}

void AuthCodeResponse::MergeFrom(const AuthCodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AuthCodeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthCodeResponse::UnsafeMergeFrom(const AuthCodeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  apdu_list_.UnsafeMergeFrom(from.apdu_list_);
  if (from.se_id().size() > 0) {

    se_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_id_);
  }
  if (from.next_stepkey().size() > 0) {

    next_stepkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_stepkey_);
  }
}

void AuthCodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AuthCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthCodeResponse::CopyFrom(const AuthCodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AuthCodeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthCodeResponse::IsInitialized() const {

  return true;
}

void AuthCodeResponse::Swap(AuthCodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthCodeResponse::InternalSwap(AuthCodeResponse* other) {
  se_id_.Swap(&other->se_id_);
  next_stepkey_.Swap(&other->next_stepkey_);
  apdu_list_.UnsafeArenaSwap(&other->apdu_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthCodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthCodeResponse_descriptor_;
  metadata.reflection = AuthCodeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthCodeResponse

// optional string se_id = 1;
void AuthCodeResponse::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthCodeResponse::se_id() const {
  // @@protoc_insertion_point(field_get:deviceapi.AuthCodeResponse.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCodeResponse::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AuthCodeResponse.se_id)
}
void AuthCodeResponse::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AuthCodeResponse.se_id)
}
void AuthCodeResponse::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AuthCodeResponse.se_id)
}
::std::string* AuthCodeResponse::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AuthCodeResponse.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthCodeResponse::release_se_id() {
  // @@protoc_insertion_point(field_release:deviceapi.AuthCodeResponse.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCodeResponse::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AuthCodeResponse.se_id)
}

// optional string next_stepkey = 2;
void AuthCodeResponse::clear_next_stepkey() {
  next_stepkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthCodeResponse::next_stepkey() const {
  // @@protoc_insertion_point(field_get:deviceapi.AuthCodeResponse.next_stepkey)
  return next_stepkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCodeResponse::set_next_stepkey(const ::std::string& value) {
  
  next_stepkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AuthCodeResponse.next_stepkey)
}
void AuthCodeResponse::set_next_stepkey(const char* value) {
  
  next_stepkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AuthCodeResponse.next_stepkey)
}
void AuthCodeResponse::set_next_stepkey(const char* value, size_t size) {
  
  next_stepkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AuthCodeResponse.next_stepkey)
}
::std::string* AuthCodeResponse::mutable_next_stepkey() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AuthCodeResponse.next_stepkey)
  return next_stepkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthCodeResponse::release_next_stepkey() {
  // @@protoc_insertion_point(field_release:deviceapi.AuthCodeResponse.next_stepkey)
  
  return next_stepkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCodeResponse::set_allocated_next_stepkey(::std::string* next_stepkey) {
  if (next_stepkey != NULL) {
    
  } else {
    
  }
  next_stepkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_stepkey);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AuthCodeResponse.next_stepkey)
}

// repeated string apdu_list = 3;
int AuthCodeResponse::apdu_list_size() const {
  return apdu_list_.size();
}
void AuthCodeResponse::clear_apdu_list() {
  apdu_list_.Clear();
}
const ::std::string& AuthCodeResponse::apdu_list(int index) const {
  // @@protoc_insertion_point(field_get:deviceapi.AuthCodeResponse.apdu_list)
  return apdu_list_.Get(index);
}
::std::string* AuthCodeResponse::mutable_apdu_list(int index) {
  // @@protoc_insertion_point(field_mutable:deviceapi.AuthCodeResponse.apdu_list)
  return apdu_list_.Mutable(index);
}
void AuthCodeResponse::set_apdu_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:deviceapi.AuthCodeResponse.apdu_list)
  apdu_list_.Mutable(index)->assign(value);
}
void AuthCodeResponse::set_apdu_list(int index, const char* value) {
  apdu_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:deviceapi.AuthCodeResponse.apdu_list)
}
void AuthCodeResponse::set_apdu_list(int index, const char* value, size_t size) {
  apdu_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AuthCodeResponse.apdu_list)
}
::std::string* AuthCodeResponse::add_apdu_list() {
  // @@protoc_insertion_point(field_add_mutable:deviceapi.AuthCodeResponse.apdu_list)
  return apdu_list_.Add();
}
void AuthCodeResponse::add_apdu_list(const ::std::string& value) {
  apdu_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:deviceapi.AuthCodeResponse.apdu_list)
}
void AuthCodeResponse::add_apdu_list(const char* value) {
  apdu_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:deviceapi.AuthCodeResponse.apdu_list)
}
void AuthCodeResponse::add_apdu_list(const char* value, size_t size) {
  apdu_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:deviceapi.AuthCodeResponse.apdu_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AuthCodeResponse::apdu_list() const {
  // @@protoc_insertion_point(field_list:deviceapi.AuthCodeResponse.apdu_list)
  return apdu_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AuthCodeResponse::mutable_apdu_list() {
  // @@protoc_insertion_point(field_mutable_list:deviceapi.AuthCodeResponse.apdu_list)
  return &apdu_list_;
}

inline const AuthCodeResponse* AuthCodeResponse::internal_default_instance() {
  return &AuthCodeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthCodeServiceResponse::kReturnCodeFieldNumber;
const int AuthCodeServiceResponse::kReturnMsgFieldNumber;
const int AuthCodeServiceResponse::kReturnDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthCodeServiceResponse::AuthCodeServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AuthCodeServiceResponse)
}

void AuthCodeServiceResponse::InitAsDefaultInstance() {
  return_data_ = const_cast< ::deviceapi::AuthCodeResponse*>(
      ::deviceapi::AuthCodeResponse::internal_default_instance());
}

AuthCodeServiceResponse::AuthCodeServiceResponse(const AuthCodeServiceResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AuthCodeServiceResponse)
}

void AuthCodeServiceResponse::SharedCtor() {
  return_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_data_ = NULL;
  _cached_size_ = 0;
}

AuthCodeServiceResponse::~AuthCodeServiceResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.AuthCodeServiceResponse)
  SharedDtor();
}

void AuthCodeServiceResponse::SharedDtor() {
  return_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &AuthCodeServiceResponse_default_instance_.get()) {
    delete return_data_;
  }
}

void AuthCodeServiceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthCodeServiceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthCodeServiceResponse_descriptor_;
}

const AuthCodeServiceResponse& AuthCodeServiceResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthCodeServiceResponse> AuthCodeServiceResponse_default_instance_;

AuthCodeServiceResponse* AuthCodeServiceResponse::New(::google::protobuf::Arena* arena) const {
  AuthCodeServiceResponse* n = new AuthCodeServiceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthCodeServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AuthCodeServiceResponse)
  return_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && return_data_ != NULL) delete return_data_;
  return_data_ = NULL;
}

bool AuthCodeServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AuthCodeServiceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string return_code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->return_code().data(), this->return_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AuthCodeServiceResponse.return_code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_return_msg;
        break;
      }

      // optional string return_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_return_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->return_msg().data(), this->return_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AuthCodeServiceResponse.return_msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_return_data;
        break;
      }

      // optional .deviceapi.AuthCodeResponse return_data = 3;
      case 3: {
        if (tag == 26) {
         parse_return_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_return_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AuthCodeServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AuthCodeServiceResponse)
  return false;
#undef DO_
}

void AuthCodeServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AuthCodeServiceResponse)
  // optional string return_code = 1;
  if (this->return_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_code().data(), this->return_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeServiceResponse.return_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->return_code(), output);
  }

  // optional string return_msg = 2;
  if (this->return_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_msg().data(), this->return_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeServiceResponse.return_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->return_msg(), output);
  }

  // optional .deviceapi.AuthCodeResponse return_data = 3;
  if (this->has_return_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->return_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AuthCodeServiceResponse)
}

::google::protobuf::uint8* AuthCodeServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AuthCodeServiceResponse)
  // optional string return_code = 1;
  if (this->return_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_code().data(), this->return_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeServiceResponse.return_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->return_code(), target);
  }

  // optional string return_msg = 2;
  if (this->return_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_msg().data(), this->return_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AuthCodeServiceResponse.return_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->return_msg(), target);
  }

  // optional .deviceapi.AuthCodeResponse return_data = 3;
  if (this->has_return_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->return_data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AuthCodeServiceResponse)
  return target;
}

size_t AuthCodeServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AuthCodeServiceResponse)
  size_t total_size = 0;

  // optional string return_code = 1;
  if (this->return_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->return_code());
  }

  // optional string return_msg = 2;
  if (this->return_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->return_msg());
  }

  // optional .deviceapi.AuthCodeResponse return_data = 3;
  if (this->has_return_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->return_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthCodeServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AuthCodeServiceResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthCodeServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthCodeServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AuthCodeServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AuthCodeServiceResponse)
    UnsafeMergeFrom(*source);
  }
}

void AuthCodeServiceResponse::MergeFrom(const AuthCodeServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AuthCodeServiceResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthCodeServiceResponse::UnsafeMergeFrom(const AuthCodeServiceResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.return_code().size() > 0) {

    return_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_code_);
  }
  if (from.return_msg().size() > 0) {

    return_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_msg_);
  }
  if (from.has_return_data()) {
    mutable_return_data()->::deviceapi::AuthCodeResponse::MergeFrom(from.return_data());
  }
}

void AuthCodeServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AuthCodeServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthCodeServiceResponse::CopyFrom(const AuthCodeServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AuthCodeServiceResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthCodeServiceResponse::IsInitialized() const {

  return true;
}

void AuthCodeServiceResponse::Swap(AuthCodeServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthCodeServiceResponse::InternalSwap(AuthCodeServiceResponse* other) {
  return_code_.Swap(&other->return_code_);
  return_msg_.Swap(&other->return_msg_);
  std::swap(return_data_, other->return_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthCodeServiceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthCodeServiceResponse_descriptor_;
  metadata.reflection = AuthCodeServiceResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthCodeServiceResponse

// optional string return_code = 1;
void AuthCodeServiceResponse::clear_return_code() {
  return_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthCodeServiceResponse::return_code() const {
  // @@protoc_insertion_point(field_get:deviceapi.AuthCodeServiceResponse.return_code)
  return return_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCodeServiceResponse::set_return_code(const ::std::string& value) {
  
  return_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AuthCodeServiceResponse.return_code)
}
void AuthCodeServiceResponse::set_return_code(const char* value) {
  
  return_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AuthCodeServiceResponse.return_code)
}
void AuthCodeServiceResponse::set_return_code(const char* value, size_t size) {
  
  return_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AuthCodeServiceResponse.return_code)
}
::std::string* AuthCodeServiceResponse::mutable_return_code() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AuthCodeServiceResponse.return_code)
  return return_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthCodeServiceResponse::release_return_code() {
  // @@protoc_insertion_point(field_release:deviceapi.AuthCodeServiceResponse.return_code)
  
  return return_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCodeServiceResponse::set_allocated_return_code(::std::string* return_code) {
  if (return_code != NULL) {
    
  } else {
    
  }
  return_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_code);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AuthCodeServiceResponse.return_code)
}

// optional string return_msg = 2;
void AuthCodeServiceResponse::clear_return_msg() {
  return_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthCodeServiceResponse::return_msg() const {
  // @@protoc_insertion_point(field_get:deviceapi.AuthCodeServiceResponse.return_msg)
  return return_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCodeServiceResponse::set_return_msg(const ::std::string& value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AuthCodeServiceResponse.return_msg)
}
void AuthCodeServiceResponse::set_return_msg(const char* value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AuthCodeServiceResponse.return_msg)
}
void AuthCodeServiceResponse::set_return_msg(const char* value, size_t size) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AuthCodeServiceResponse.return_msg)
}
::std::string* AuthCodeServiceResponse::mutable_return_msg() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AuthCodeServiceResponse.return_msg)
  return return_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthCodeServiceResponse::release_return_msg() {
  // @@protoc_insertion_point(field_release:deviceapi.AuthCodeServiceResponse.return_msg)
  
  return return_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthCodeServiceResponse::set_allocated_return_msg(::std::string* return_msg) {
  if (return_msg != NULL) {
    
  } else {
    
  }
  return_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_msg);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AuthCodeServiceResponse.return_msg)
}

// optional .deviceapi.AuthCodeResponse return_data = 3;
bool AuthCodeServiceResponse::has_return_data() const {
  return this != internal_default_instance() && return_data_ != NULL;
}
void AuthCodeServiceResponse::clear_return_data() {
  if (GetArenaNoVirtual() == NULL && return_data_ != NULL) delete return_data_;
  return_data_ = NULL;
}
const ::deviceapi::AuthCodeResponse& AuthCodeServiceResponse::return_data() const {
  // @@protoc_insertion_point(field_get:deviceapi.AuthCodeServiceResponse.return_data)
  return return_data_ != NULL ? *return_data_
                         : *::deviceapi::AuthCodeResponse::internal_default_instance();
}
::deviceapi::AuthCodeResponse* AuthCodeServiceResponse::mutable_return_data() {
  
  if (return_data_ == NULL) {
    return_data_ = new ::deviceapi::AuthCodeResponse;
  }
  // @@protoc_insertion_point(field_mutable:deviceapi.AuthCodeServiceResponse.return_data)
  return return_data_;
}
::deviceapi::AuthCodeResponse* AuthCodeServiceResponse::release_return_data() {
  // @@protoc_insertion_point(field_release:deviceapi.AuthCodeServiceResponse.return_data)
  
  ::deviceapi::AuthCodeResponse* temp = return_data_;
  return_data_ = NULL;
  return temp;
}
void AuthCodeServiceResponse::set_allocated_return_data(::deviceapi::AuthCodeResponse* return_data) {
  delete return_data_;
  return_data_ = return_data;
  if (return_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AuthCodeServiceResponse.return_data)
}

inline const AuthCodeServiceResponse* AuthCodeServiceResponse::internal_default_instance() {
  return &AuthCodeServiceResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeAction::kSeIdFieldNumber;
const int SeAction::kSnFieldNumber;
const int SeAction::kDeviceCertFieldNumber;
const int SeAction::kSdkVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeAction::SeAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.SeAction)
}

void SeAction::InitAsDefaultInstance() {
}

SeAction::SeAction(const SeAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.SeAction)
}

void SeAction::SharedCtor() {
  se_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_cert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SeAction::~SeAction() {
  // @@protoc_insertion_point(destructor:deviceapi.SeAction)
  SharedDtor();
}

void SeAction::SharedDtor() {
  se_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_cert_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SeAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SeAction_descriptor_;
}

const SeAction& SeAction::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SeAction> SeAction_default_instance_;

SeAction* SeAction::New(::google::protobuf::Arena* arena) const {
  SeAction* n = new SeAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeAction::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.SeAction)
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_cert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SeAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.SeAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string se_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_se_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->se_id().data(), this->se_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeAction.se_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sn;
        break;
      }

      // optional string sn = 2;
      case 2: {
        if (tag == 18) {
         parse_sn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeAction.sn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_device_cert;
        break;
      }

      // optional string device_cert = 3;
      case 3: {
        if (tag == 26) {
         parse_device_cert:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_cert()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_cert().data(), this->device_cert().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeAction.device_cert"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sdk_version;
        break;
      }

      // optional string sdk_version = 4;
      case 4: {
        if (tag == 34) {
         parse_sdk_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_version().data(), this->sdk_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeAction.sdk_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.SeAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.SeAction)
  return false;
#undef DO_
}

void SeAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.SeAction)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeAction.se_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->se_id(), output);
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeAction.sn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sn(), output);
  }

  // optional string device_cert = 3;
  if (this->device_cert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_cert().data(), this->device_cert().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeAction.device_cert");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_cert(), output);
  }

  // optional string sdk_version = 4;
  if (this->sdk_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_version().data(), this->sdk_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeAction.sdk_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdk_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.SeAction)
}

::google::protobuf::uint8* SeAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.SeAction)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeAction.se_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->se_id(), target);
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeAction.sn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sn(), target);
  }

  // optional string device_cert = 3;
  if (this->device_cert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_cert().data(), this->device_cert().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeAction.device_cert");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_cert(), target);
  }

  // optional string sdk_version = 4;
  if (this->sdk_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_version().data(), this->sdk_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeAction.sdk_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sdk_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.SeAction)
  return target;
}

size_t SeAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.SeAction)
  size_t total_size = 0;

  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->se_id());
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());
  }

  // optional string device_cert = 3;
  if (this->device_cert().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_cert());
  }

  // optional string sdk_version = 4;
  if (this->sdk_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.SeAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SeAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.SeAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.SeAction)
    UnsafeMergeFrom(*source);
  }
}

void SeAction::MergeFrom(const SeAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.SeAction)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SeAction::UnsafeMergeFrom(const SeAction& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.se_id().size() > 0) {

    se_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_id_);
  }
  if (from.sn().size() > 0) {

    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
  if (from.device_cert().size() > 0) {

    device_cert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_cert_);
  }
  if (from.sdk_version().size() > 0) {

    sdk_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_version_);
  }
}

void SeAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.SeAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeAction::CopyFrom(const SeAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.SeAction)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SeAction::IsInitialized() const {

  return true;
}

void SeAction::Swap(SeAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeAction::InternalSwap(SeAction* other) {
  se_id_.Swap(&other->se_id_);
  sn_.Swap(&other->sn_);
  device_cert_.Swap(&other->device_cert_);
  sdk_version_.Swap(&other->sdk_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SeAction_descriptor_;
  metadata.reflection = SeAction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeAction

// optional string se_id = 1;
void SeAction::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeAction::se_id() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeAction.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeAction::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeAction.se_id)
}
void SeAction::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeAction.se_id)
}
void SeAction::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeAction.se_id)
}
::std::string* SeAction::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeAction.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeAction::release_se_id() {
  // @@protoc_insertion_point(field_release:deviceapi.SeAction.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeAction::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeAction.se_id)
}

// optional string sn = 2;
void SeAction::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeAction::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeAction.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeAction::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeAction.sn)
}
void SeAction::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeAction.sn)
}
void SeAction::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeAction.sn)
}
::std::string* SeAction::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeAction.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeAction::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.SeAction.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeAction::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeAction.sn)
}

// optional string device_cert = 3;
void SeAction::clear_device_cert() {
  device_cert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeAction::device_cert() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeAction.device_cert)
  return device_cert_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeAction::set_device_cert(const ::std::string& value) {
  
  device_cert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeAction.device_cert)
}
void SeAction::set_device_cert(const char* value) {
  
  device_cert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeAction.device_cert)
}
void SeAction::set_device_cert(const char* value, size_t size) {
  
  device_cert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeAction.device_cert)
}
::std::string* SeAction::mutable_device_cert() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeAction.device_cert)
  return device_cert_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeAction::release_device_cert() {
  // @@protoc_insertion_point(field_release:deviceapi.SeAction.device_cert)
  
  return device_cert_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeAction::set_allocated_device_cert(::std::string* device_cert) {
  if (device_cert != NULL) {
    
  } else {
    
  }
  device_cert_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_cert);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeAction.device_cert)
}

// optional string sdk_version = 4;
void SeAction::clear_sdk_version() {
  sdk_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeAction::sdk_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeAction.sdk_version)
  return sdk_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeAction::set_sdk_version(const ::std::string& value) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeAction.sdk_version)
}
void SeAction::set_sdk_version(const char* value) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeAction.sdk_version)
}
void SeAction::set_sdk_version(const char* value, size_t size) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeAction.sdk_version)
}
::std::string* SeAction::mutable_sdk_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeAction.sdk_version)
  return sdk_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeAction::release_sdk_version() {
  // @@protoc_insertion_point(field_release:deviceapi.SeAction.sdk_version)
  
  return sdk_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeAction::set_allocated_sdk_version(::std::string* sdk_version) {
  if (sdk_version != NULL) {
    
  } else {
    
  }
  sdk_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeAction.sdk_version)
}

inline const SeAction* SeAction::internal_default_instance() {
  return &SeAction_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeQueryResponse::kSeIdFieldNumber;
const int SeQueryResponse::kNextStepkeyFieldNumber;
const int SeQueryResponse::kSnFieldNumber;
const int SeQueryResponse::kSdkModeFieldNumber;
const int SeQueryResponse::kAvailableAppBeanListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeQueryResponse::SeQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.SeQueryResponse)
}

void SeQueryResponse::InitAsDefaultInstance() {
}

SeQueryResponse::SeQueryResponse(const SeQueryResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.SeQueryResponse)
}

void SeQueryResponse::SharedCtor() {
  se_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_stepkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SeQueryResponse::~SeQueryResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.SeQueryResponse)
  SharedDtor();
}

void SeQueryResponse::SharedDtor() {
  se_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_stepkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SeQueryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeQueryResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SeQueryResponse_descriptor_;
}

const SeQueryResponse& SeQueryResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SeQueryResponse> SeQueryResponse_default_instance_;

SeQueryResponse* SeQueryResponse::New(::google::protobuf::Arena* arena) const {
  SeQueryResponse* n = new SeQueryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.SeQueryResponse)
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_stepkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  available_app_bean_list_.Clear();
}

bool SeQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.SeQueryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string se_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_se_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->se_id().data(), this->se_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeQueryResponse.se_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_next_stepkey;
        break;
      }

      // optional string next_stepkey = 2;
      case 2: {
        if (tag == 18) {
         parse_next_stepkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_stepkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_stepkey().data(), this->next_stepkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeQueryResponse.next_stepkey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sn;
        break;
      }

      // optional string sn = 3;
      case 3: {
        if (tag == 26) {
         parse_sn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeQueryResponse.sn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sdk_mode;
        break;
      }

      // optional string sdk_mode = 4;
      case 4: {
        if (tag == 34) {
         parse_sdk_mode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_mode().data(), this->sdk_mode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeQueryResponse.sdk_mode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_available_app_bean_list;
        break;
      }

      // repeated .deviceapi.AvailableAppBean available_app_bean_list = 5;
      case 5: {
        if (tag == 42) {
         parse_available_app_bean_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_available_app_bean_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_available_app_bean_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_available_app_bean_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.SeQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.SeQueryResponse)
  return false;
#undef DO_
}

void SeQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.SeQueryResponse)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryResponse.se_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->se_id(), output);
  }

  // optional string next_stepkey = 2;
  if (this->next_stepkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_stepkey().data(), this->next_stepkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryResponse.next_stepkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_stepkey(), output);
  }

  // optional string sn = 3;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryResponse.sn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sn(), output);
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_mode().data(), this->sdk_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryResponse.sdk_mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdk_mode(), output);
  }

  // repeated .deviceapi.AvailableAppBean available_app_bean_list = 5;
  for (unsigned int i = 0, n = this->available_app_bean_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->available_app_bean_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.SeQueryResponse)
}

::google::protobuf::uint8* SeQueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.SeQueryResponse)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryResponse.se_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->se_id(), target);
  }

  // optional string next_stepkey = 2;
  if (this->next_stepkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_stepkey().data(), this->next_stepkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryResponse.next_stepkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_stepkey(), target);
  }

  // optional string sn = 3;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryResponse.sn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sn(), target);
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_mode().data(), this->sdk_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryResponse.sdk_mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sdk_mode(), target);
  }

  // repeated .deviceapi.AvailableAppBean available_app_bean_list = 5;
  for (unsigned int i = 0, n = this->available_app_bean_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->available_app_bean_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.SeQueryResponse)
  return target;
}

size_t SeQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.SeQueryResponse)
  size_t total_size = 0;

  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->se_id());
  }

  // optional string next_stepkey = 2;
  if (this->next_stepkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_stepkey());
  }

  // optional string sn = 3;
  if (this->sn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_mode());
  }

  // repeated .deviceapi.AvailableAppBean available_app_bean_list = 5;
  {
    unsigned int count = this->available_app_bean_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->available_app_bean_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.SeQueryResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SeQueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeQueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.SeQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.SeQueryResponse)
    UnsafeMergeFrom(*source);
  }
}

void SeQueryResponse::MergeFrom(const SeQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.SeQueryResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SeQueryResponse::UnsafeMergeFrom(const SeQueryResponse& from) {
  GOOGLE_DCHECK(&from != this);
  available_app_bean_list_.MergeFrom(from.available_app_bean_list_);
  if (from.se_id().size() > 0) {

    se_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_id_);
  }
  if (from.next_stepkey().size() > 0) {

    next_stepkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_stepkey_);
  }
  if (from.sn().size() > 0) {

    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
  if (from.sdk_mode().size() > 0) {

    sdk_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_mode_);
  }
}

void SeQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.SeQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeQueryResponse::CopyFrom(const SeQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.SeQueryResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SeQueryResponse::IsInitialized() const {

  return true;
}

void SeQueryResponse::Swap(SeQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeQueryResponse::InternalSwap(SeQueryResponse* other) {
  se_id_.Swap(&other->se_id_);
  next_stepkey_.Swap(&other->next_stepkey_);
  sn_.Swap(&other->sn_);
  sdk_mode_.Swap(&other->sdk_mode_);
  available_app_bean_list_.UnsafeArenaSwap(&other->available_app_bean_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeQueryResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SeQueryResponse_descriptor_;
  metadata.reflection = SeQueryResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeQueryResponse

// optional string se_id = 1;
void SeQueryResponse::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeQueryResponse::se_id() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeQueryResponse.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryResponse::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeQueryResponse.se_id)
}
void SeQueryResponse::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeQueryResponse.se_id)
}
void SeQueryResponse::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeQueryResponse.se_id)
}
::std::string* SeQueryResponse::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeQueryResponse.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeQueryResponse::release_se_id() {
  // @@protoc_insertion_point(field_release:deviceapi.SeQueryResponse.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryResponse::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeQueryResponse.se_id)
}

// optional string next_stepkey = 2;
void SeQueryResponse::clear_next_stepkey() {
  next_stepkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeQueryResponse::next_stepkey() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeQueryResponse.next_stepkey)
  return next_stepkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryResponse::set_next_stepkey(const ::std::string& value) {
  
  next_stepkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeQueryResponse.next_stepkey)
}
void SeQueryResponse::set_next_stepkey(const char* value) {
  
  next_stepkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeQueryResponse.next_stepkey)
}
void SeQueryResponse::set_next_stepkey(const char* value, size_t size) {
  
  next_stepkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeQueryResponse.next_stepkey)
}
::std::string* SeQueryResponse::mutable_next_stepkey() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeQueryResponse.next_stepkey)
  return next_stepkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeQueryResponse::release_next_stepkey() {
  // @@protoc_insertion_point(field_release:deviceapi.SeQueryResponse.next_stepkey)
  
  return next_stepkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryResponse::set_allocated_next_stepkey(::std::string* next_stepkey) {
  if (next_stepkey != NULL) {
    
  } else {
    
  }
  next_stepkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_stepkey);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeQueryResponse.next_stepkey)
}

// optional string sn = 3;
void SeQueryResponse::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeQueryResponse::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeQueryResponse.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryResponse::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeQueryResponse.sn)
}
void SeQueryResponse::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeQueryResponse.sn)
}
void SeQueryResponse::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeQueryResponse.sn)
}
::std::string* SeQueryResponse::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeQueryResponse.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeQueryResponse::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.SeQueryResponse.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryResponse::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeQueryResponse.sn)
}

// optional string sdk_mode = 4;
void SeQueryResponse::clear_sdk_mode() {
  sdk_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeQueryResponse::sdk_mode() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeQueryResponse.sdk_mode)
  return sdk_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryResponse::set_sdk_mode(const ::std::string& value) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeQueryResponse.sdk_mode)
}
void SeQueryResponse::set_sdk_mode(const char* value) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeQueryResponse.sdk_mode)
}
void SeQueryResponse::set_sdk_mode(const char* value, size_t size) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeQueryResponse.sdk_mode)
}
::std::string* SeQueryResponse::mutable_sdk_mode() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeQueryResponse.sdk_mode)
  return sdk_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeQueryResponse::release_sdk_mode() {
  // @@protoc_insertion_point(field_release:deviceapi.SeQueryResponse.sdk_mode)
  
  return sdk_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryResponse::set_allocated_sdk_mode(::std::string* sdk_mode) {
  if (sdk_mode != NULL) {
    
  } else {
    
  }
  sdk_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_mode);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeQueryResponse.sdk_mode)
}

// repeated .deviceapi.AvailableAppBean available_app_bean_list = 5;
int SeQueryResponse::available_app_bean_list_size() const {
  return available_app_bean_list_.size();
}
void SeQueryResponse::clear_available_app_bean_list() {
  available_app_bean_list_.Clear();
}
const ::deviceapi::AvailableAppBean& SeQueryResponse::available_app_bean_list(int index) const {
  // @@protoc_insertion_point(field_get:deviceapi.SeQueryResponse.available_app_bean_list)
  return available_app_bean_list_.Get(index);
}
::deviceapi::AvailableAppBean* SeQueryResponse::mutable_available_app_bean_list(int index) {
  // @@protoc_insertion_point(field_mutable:deviceapi.SeQueryResponse.available_app_bean_list)
  return available_app_bean_list_.Mutable(index);
}
::deviceapi::AvailableAppBean* SeQueryResponse::add_available_app_bean_list() {
  // @@protoc_insertion_point(field_add:deviceapi.SeQueryResponse.available_app_bean_list)
  return available_app_bean_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >*
SeQueryResponse::mutable_available_app_bean_list() {
  // @@protoc_insertion_point(field_mutable_list:deviceapi.SeQueryResponse.available_app_bean_list)
  return &available_app_bean_list_;
}
const ::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >&
SeQueryResponse::available_app_bean_list() const {
  // @@protoc_insertion_point(field_list:deviceapi.SeQueryResponse.available_app_bean_list)
  return available_app_bean_list_;
}

inline const SeQueryResponse* SeQueryResponse::internal_default_instance() {
  return &SeQueryResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeQueryServiceResponse::kReturnCodeFieldNumber;
const int SeQueryServiceResponse::kReturnMsgFieldNumber;
const int SeQueryServiceResponse::kReturnDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeQueryServiceResponse::SeQueryServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.SeQueryServiceResponse)
}

void SeQueryServiceResponse::InitAsDefaultInstance() {
  return_data_ = const_cast< ::deviceapi::SeQueryResponse*>(
      ::deviceapi::SeQueryResponse::internal_default_instance());
}

SeQueryServiceResponse::SeQueryServiceResponse(const SeQueryServiceResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.SeQueryServiceResponse)
}

void SeQueryServiceResponse::SharedCtor() {
  return_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_data_ = NULL;
  _cached_size_ = 0;
}

SeQueryServiceResponse::~SeQueryServiceResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.SeQueryServiceResponse)
  SharedDtor();
}

void SeQueryServiceResponse::SharedDtor() {
  return_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &SeQueryServiceResponse_default_instance_.get()) {
    delete return_data_;
  }
}

void SeQueryServiceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeQueryServiceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SeQueryServiceResponse_descriptor_;
}

const SeQueryServiceResponse& SeQueryServiceResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SeQueryServiceResponse> SeQueryServiceResponse_default_instance_;

SeQueryServiceResponse* SeQueryServiceResponse::New(::google::protobuf::Arena* arena) const {
  SeQueryServiceResponse* n = new SeQueryServiceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeQueryServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.SeQueryServiceResponse)
  return_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && return_data_ != NULL) delete return_data_;
  return_data_ = NULL;
}

bool SeQueryServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.SeQueryServiceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string return_code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->return_code().data(), this->return_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeQueryServiceResponse.return_code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_return_msg;
        break;
      }

      // optional string return_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_return_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->return_msg().data(), this->return_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SeQueryServiceResponse.return_msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_return_data;
        break;
      }

      // optional .deviceapi.SeQueryResponse return_data = 3;
      case 3: {
        if (tag == 26) {
         parse_return_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_return_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.SeQueryServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.SeQueryServiceResponse)
  return false;
#undef DO_
}

void SeQueryServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.SeQueryServiceResponse)
  // optional string return_code = 1;
  if (this->return_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_code().data(), this->return_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryServiceResponse.return_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->return_code(), output);
  }

  // optional string return_msg = 2;
  if (this->return_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_msg().data(), this->return_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryServiceResponse.return_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->return_msg(), output);
  }

  // optional .deviceapi.SeQueryResponse return_data = 3;
  if (this->has_return_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->return_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.SeQueryServiceResponse)
}

::google::protobuf::uint8* SeQueryServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.SeQueryServiceResponse)
  // optional string return_code = 1;
  if (this->return_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_code().data(), this->return_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryServiceResponse.return_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->return_code(), target);
  }

  // optional string return_msg = 2;
  if (this->return_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_msg().data(), this->return_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SeQueryServiceResponse.return_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->return_msg(), target);
  }

  // optional .deviceapi.SeQueryResponse return_data = 3;
  if (this->has_return_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->return_data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.SeQueryServiceResponse)
  return target;
}

size_t SeQueryServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.SeQueryServiceResponse)
  size_t total_size = 0;

  // optional string return_code = 1;
  if (this->return_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->return_code());
  }

  // optional string return_msg = 2;
  if (this->return_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->return_msg());
  }

  // optional .deviceapi.SeQueryResponse return_data = 3;
  if (this->has_return_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->return_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeQueryServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.SeQueryServiceResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SeQueryServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeQueryServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.SeQueryServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.SeQueryServiceResponse)
    UnsafeMergeFrom(*source);
  }
}

void SeQueryServiceResponse::MergeFrom(const SeQueryServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.SeQueryServiceResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SeQueryServiceResponse::UnsafeMergeFrom(const SeQueryServiceResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.return_code().size() > 0) {

    return_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_code_);
  }
  if (from.return_msg().size() > 0) {

    return_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_msg_);
  }
  if (from.has_return_data()) {
    mutable_return_data()->::deviceapi::SeQueryResponse::MergeFrom(from.return_data());
  }
}

void SeQueryServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.SeQueryServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeQueryServiceResponse::CopyFrom(const SeQueryServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.SeQueryServiceResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SeQueryServiceResponse::IsInitialized() const {

  return true;
}

void SeQueryServiceResponse::Swap(SeQueryServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeQueryServiceResponse::InternalSwap(SeQueryServiceResponse* other) {
  return_code_.Swap(&other->return_code_);
  return_msg_.Swap(&other->return_msg_);
  std::swap(return_data_, other->return_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeQueryServiceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SeQueryServiceResponse_descriptor_;
  metadata.reflection = SeQueryServiceResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeQueryServiceResponse

// optional string return_code = 1;
void SeQueryServiceResponse::clear_return_code() {
  return_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeQueryServiceResponse::return_code() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeQueryServiceResponse.return_code)
  return return_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryServiceResponse::set_return_code(const ::std::string& value) {
  
  return_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeQueryServiceResponse.return_code)
}
void SeQueryServiceResponse::set_return_code(const char* value) {
  
  return_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeQueryServiceResponse.return_code)
}
void SeQueryServiceResponse::set_return_code(const char* value, size_t size) {
  
  return_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeQueryServiceResponse.return_code)
}
::std::string* SeQueryServiceResponse::mutable_return_code() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeQueryServiceResponse.return_code)
  return return_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeQueryServiceResponse::release_return_code() {
  // @@protoc_insertion_point(field_release:deviceapi.SeQueryServiceResponse.return_code)
  
  return return_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryServiceResponse::set_allocated_return_code(::std::string* return_code) {
  if (return_code != NULL) {
    
  } else {
    
  }
  return_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_code);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeQueryServiceResponse.return_code)
}

// optional string return_msg = 2;
void SeQueryServiceResponse::clear_return_msg() {
  return_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SeQueryServiceResponse::return_msg() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeQueryServiceResponse.return_msg)
  return return_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryServiceResponse::set_return_msg(const ::std::string& value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SeQueryServiceResponse.return_msg)
}
void SeQueryServiceResponse::set_return_msg(const char* value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SeQueryServiceResponse.return_msg)
}
void SeQueryServiceResponse::set_return_msg(const char* value, size_t size) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SeQueryServiceResponse.return_msg)
}
::std::string* SeQueryServiceResponse::mutable_return_msg() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SeQueryServiceResponse.return_msg)
  return return_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SeQueryServiceResponse::release_return_msg() {
  // @@protoc_insertion_point(field_release:deviceapi.SeQueryServiceResponse.return_msg)
  
  return return_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SeQueryServiceResponse::set_allocated_return_msg(::std::string* return_msg) {
  if (return_msg != NULL) {
    
  } else {
    
  }
  return_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_msg);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeQueryServiceResponse.return_msg)
}

// optional .deviceapi.SeQueryResponse return_data = 3;
bool SeQueryServiceResponse::has_return_data() const {
  return this != internal_default_instance() && return_data_ != NULL;
}
void SeQueryServiceResponse::clear_return_data() {
  if (GetArenaNoVirtual() == NULL && return_data_ != NULL) delete return_data_;
  return_data_ = NULL;
}
const ::deviceapi::SeQueryResponse& SeQueryServiceResponse::return_data() const {
  // @@protoc_insertion_point(field_get:deviceapi.SeQueryServiceResponse.return_data)
  return return_data_ != NULL ? *return_data_
                         : *::deviceapi::SeQueryResponse::internal_default_instance();
}
::deviceapi::SeQueryResponse* SeQueryServiceResponse::mutable_return_data() {
  
  if (return_data_ == NULL) {
    return_data_ = new ::deviceapi::SeQueryResponse;
  }
  // @@protoc_insertion_point(field_mutable:deviceapi.SeQueryServiceResponse.return_data)
  return return_data_;
}
::deviceapi::SeQueryResponse* SeQueryServiceResponse::release_return_data() {
  // @@protoc_insertion_point(field_release:deviceapi.SeQueryServiceResponse.return_data)
  
  ::deviceapi::SeQueryResponse* temp = return_data_;
  return_data_ = NULL;
  return temp;
}
void SeQueryServiceResponse::set_allocated_return_data(::deviceapi::SeQueryResponse* return_data) {
  delete return_data_;
  return_data_ = return_data;
  if (return_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SeQueryServiceResponse.return_data)
}

inline const SeQueryServiceResponse* SeQueryServiceResponse::internal_default_instance() {
  return &SeQueryServiceResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindCheck::kFilePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindCheck::BindCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindCheck)
}

void BindCheck::InitAsDefaultInstance() {
}

BindCheck::BindCheck(const BindCheck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindCheck)
}

void BindCheck::SharedCtor() {
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindCheck::~BindCheck() {
  // @@protoc_insertion_point(destructor:deviceapi.BindCheck)
  SharedDtor();
}

void BindCheck::SharedDtor() {
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindCheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindCheck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindCheck_descriptor_;
}

const BindCheck& BindCheck::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindCheck> BindCheck_default_instance_;

BindCheck* BindCheck::New(::google::protobuf::Arena* arena) const {
  BindCheck* n = new BindCheck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindCheck)
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindCheck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file_path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_path().data(), this->file_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindCheck.file_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindCheck)
  return false;
#undef DO_
}

void BindCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindCheck)
  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), this->file_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindCheck.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_path(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindCheck)
}

::google::protobuf::uint8* BindCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindCheck)
  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), this->file_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindCheck.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindCheck)
  return target;
}

size_t BindCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindCheck)
  size_t total_size = 0;

  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindCheck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindCheck)
    UnsafeMergeFrom(*source);
  }
}

void BindCheck::MergeFrom(const BindCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindCheck)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindCheck::UnsafeMergeFrom(const BindCheck& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.file_path().size() > 0) {

    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
}

void BindCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindCheck::CopyFrom(const BindCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindCheck)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindCheck::IsInitialized() const {

  return true;
}

void BindCheck::Swap(BindCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindCheck::InternalSwap(BindCheck* other) {
  file_path_.Swap(&other->file_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindCheck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindCheck_descriptor_;
  metadata.reflection = BindCheck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindCheck

// optional string file_path = 1;
void BindCheck::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindCheck::file_path() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindCheck.file_path)
  return file_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindCheck::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindCheck.file_path)
}
void BindCheck::set_file_path(const char* value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindCheck.file_path)
}
void BindCheck::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindCheck.file_path)
}
::std::string* BindCheck::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindCheck.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindCheck::release_file_path() {
  // @@protoc_insertion_point(field_release:deviceapi.BindCheck.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindCheck::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindCheck.file_path)
}

inline const BindCheck* BindCheck::internal_default_instance() {
  return &BindCheck_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindCheckResponse::kBindStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindCheckResponse::BindCheckResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindCheckResponse)
}

void BindCheckResponse::InitAsDefaultInstance() {
}

BindCheckResponse::BindCheckResponse(const BindCheckResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindCheckResponse)
}

void BindCheckResponse::SharedCtor() {
  bind_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindCheckResponse::~BindCheckResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.BindCheckResponse)
  SharedDtor();
}

void BindCheckResponse::SharedDtor() {
  bind_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindCheckResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindCheckResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindCheckResponse_descriptor_;
}

const BindCheckResponse& BindCheckResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindCheckResponse> BindCheckResponse_default_instance_;

BindCheckResponse* BindCheckResponse::New(::google::protobuf::Arena* arena) const {
  BindCheckResponse* n = new BindCheckResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindCheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindCheckResponse)
  bind_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindCheckResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindCheckResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bind_status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bind_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bind_status().data(), this->bind_status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindCheckResponse.bind_status"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindCheckResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindCheckResponse)
  return false;
#undef DO_
}

void BindCheckResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindCheckResponse)
  // optional string bind_status = 1;
  if (this->bind_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_status().data(), this->bind_status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindCheckResponse.bind_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bind_status(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindCheckResponse)
}

::google::protobuf::uint8* BindCheckResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindCheckResponse)
  // optional string bind_status = 1;
  if (this->bind_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_status().data(), this->bind_status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindCheckResponse.bind_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bind_status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindCheckResponse)
  return target;
}

size_t BindCheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindCheckResponse)
  size_t total_size = 0;

  // optional string bind_status = 1;
  if (this->bind_status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bind_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindCheckResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindCheckResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindCheckResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindCheckResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindCheckResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindCheckResponse)
    UnsafeMergeFrom(*source);
  }
}

void BindCheckResponse::MergeFrom(const BindCheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindCheckResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindCheckResponse::UnsafeMergeFrom(const BindCheckResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bind_status().size() > 0) {

    bind_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bind_status_);
  }
}

void BindCheckResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindCheckResponse::CopyFrom(const BindCheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindCheckResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindCheckResponse::IsInitialized() const {

  return true;
}

void BindCheckResponse::Swap(BindCheckResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindCheckResponse::InternalSwap(BindCheckResponse* other) {
  bind_status_.Swap(&other->bind_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindCheckResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindCheckResponse_descriptor_;
  metadata.reflection = BindCheckResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindCheckResponse

// optional string bind_status = 1;
void BindCheckResponse::clear_bind_status() {
  bind_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindCheckResponse::bind_status() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindCheckResponse.bind_status)
  return bind_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindCheckResponse::set_bind_status(const ::std::string& value) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindCheckResponse.bind_status)
}
void BindCheckResponse::set_bind_status(const char* value) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindCheckResponse.bind_status)
}
void BindCheckResponse::set_bind_status(const char* value, size_t size) {
  
  bind_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindCheckResponse.bind_status)
}
::std::string* BindCheckResponse::mutable_bind_status() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindCheckResponse.bind_status)
  return bind_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindCheckResponse::release_bind_status() {
  // @@protoc_insertion_point(field_release:deviceapi.BindCheckResponse.bind_status)
  
  return bind_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindCheckResponse::set_allocated_bind_status(::std::string* bind_status) {
  if (bind_status != NULL) {
    
  } else {
    
  }
  bind_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_status);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindCheckResponse.bind_status)
}

inline const BindCheckResponse* BindCheckResponse::internal_default_instance() {
  return &BindCheckResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindAcquire::kBindCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindAcquire::BindAcquire()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindAcquire)
}

void BindAcquire::InitAsDefaultInstance() {
}

BindAcquire::BindAcquire(const BindAcquire& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindAcquire)
}

void BindAcquire::SharedCtor() {
  bind_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindAcquire::~BindAcquire() {
  // @@protoc_insertion_point(destructor:deviceapi.BindAcquire)
  SharedDtor();
}

void BindAcquire::SharedDtor() {
  bind_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindAcquire::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindAcquire::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindAcquire_descriptor_;
}

const BindAcquire& BindAcquire::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindAcquire> BindAcquire_default_instance_;

BindAcquire* BindAcquire::New(::google::protobuf::Arena* arena) const {
  BindAcquire* n = new BindAcquire;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindAcquire::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindAcquire)
  bind_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindAcquire::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindAcquire)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bind_code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bind_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bind_code().data(), this->bind_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindAcquire.bind_code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindAcquire)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindAcquire)
  return false;
#undef DO_
}

void BindAcquire::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindAcquire)
  // optional string bind_code = 1;
  if (this->bind_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_code().data(), this->bind_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindAcquire.bind_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bind_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindAcquire)
}

::google::protobuf::uint8* BindAcquire::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindAcquire)
  // optional string bind_code = 1;
  if (this->bind_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_code().data(), this->bind_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindAcquire.bind_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bind_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindAcquire)
  return target;
}

size_t BindAcquire::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindAcquire)
  size_t total_size = 0;

  // optional string bind_code = 1;
  if (this->bind_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bind_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindAcquire::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindAcquire)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindAcquire* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindAcquire>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindAcquire)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindAcquire)
    UnsafeMergeFrom(*source);
  }
}

void BindAcquire::MergeFrom(const BindAcquire& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindAcquire)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindAcquire::UnsafeMergeFrom(const BindAcquire& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bind_code().size() > 0) {

    bind_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bind_code_);
  }
}

void BindAcquire::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindAcquire)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindAcquire::CopyFrom(const BindAcquire& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindAcquire)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindAcquire::IsInitialized() const {

  return true;
}

void BindAcquire::Swap(BindAcquire* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindAcquire::InternalSwap(BindAcquire* other) {
  bind_code_.Swap(&other->bind_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindAcquire::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindAcquire_descriptor_;
  metadata.reflection = BindAcquire_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindAcquire

// optional string bind_code = 1;
void BindAcquire::clear_bind_code() {
  bind_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindAcquire::bind_code() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindAcquire.bind_code)
  return bind_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindAcquire::set_bind_code(const ::std::string& value) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindAcquire.bind_code)
}
void BindAcquire::set_bind_code(const char* value) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindAcquire.bind_code)
}
void BindAcquire::set_bind_code(const char* value, size_t size) {
  
  bind_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindAcquire.bind_code)
}
::std::string* BindAcquire::mutable_bind_code() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindAcquire.bind_code)
  return bind_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindAcquire::release_bind_code() {
  // @@protoc_insertion_point(field_release:deviceapi.BindAcquire.bind_code)
  
  return bind_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindAcquire::set_allocated_bind_code(::std::string* bind_code) {
  if (bind_code != NULL) {
    
  } else {
    
  }
  bind_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_code);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindAcquire.bind_code)
}

inline const BindAcquire* BindAcquire::internal_default_instance() {
  return &BindAcquire_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindAcquireResponse::kBindResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindAcquireResponse::BindAcquireResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindAcquireResponse)
}

void BindAcquireResponse::InitAsDefaultInstance() {
}

BindAcquireResponse::BindAcquireResponse(const BindAcquireResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindAcquireResponse)
}

void BindAcquireResponse::SharedCtor() {
  bind_result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindAcquireResponse::~BindAcquireResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.BindAcquireResponse)
  SharedDtor();
}

void BindAcquireResponse::SharedDtor() {
  bind_result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindAcquireResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindAcquireResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindAcquireResponse_descriptor_;
}

const BindAcquireResponse& BindAcquireResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindAcquireResponse> BindAcquireResponse_default_instance_;

BindAcquireResponse* BindAcquireResponse::New(::google::protobuf::Arena* arena) const {
  BindAcquireResponse* n = new BindAcquireResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindAcquireResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindAcquireResponse)
  bind_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindAcquireResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindAcquireResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bind_result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bind_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bind_result().data(), this->bind_result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindAcquireResponse.bind_result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindAcquireResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindAcquireResponse)
  return false;
#undef DO_
}

void BindAcquireResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindAcquireResponse)
  // optional string bind_result = 1;
  if (this->bind_result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_result().data(), this->bind_result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindAcquireResponse.bind_result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bind_result(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindAcquireResponse)
}

::google::protobuf::uint8* BindAcquireResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindAcquireResponse)
  // optional string bind_result = 1;
  if (this->bind_result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_result().data(), this->bind_result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindAcquireResponse.bind_result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bind_result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindAcquireResponse)
  return target;
}

size_t BindAcquireResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindAcquireResponse)
  size_t total_size = 0;

  // optional string bind_result = 1;
  if (this->bind_result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bind_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindAcquireResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindAcquireResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindAcquireResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindAcquireResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindAcquireResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindAcquireResponse)
    UnsafeMergeFrom(*source);
  }
}

void BindAcquireResponse::MergeFrom(const BindAcquireResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindAcquireResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindAcquireResponse::UnsafeMergeFrom(const BindAcquireResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bind_result().size() > 0) {

    bind_result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bind_result_);
  }
}

void BindAcquireResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindAcquireResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindAcquireResponse::CopyFrom(const BindAcquireResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindAcquireResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindAcquireResponse::IsInitialized() const {

  return true;
}

void BindAcquireResponse::Swap(BindAcquireResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindAcquireResponse::InternalSwap(BindAcquireResponse* other) {
  bind_result_.Swap(&other->bind_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindAcquireResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindAcquireResponse_descriptor_;
  metadata.reflection = BindAcquireResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindAcquireResponse

// optional string bind_result = 1;
void BindAcquireResponse::clear_bind_result() {
  bind_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindAcquireResponse::bind_result() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindAcquireResponse.bind_result)
  return bind_result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindAcquireResponse::set_bind_result(const ::std::string& value) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindAcquireResponse.bind_result)
}
void BindAcquireResponse::set_bind_result(const char* value) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindAcquireResponse.bind_result)
}
void BindAcquireResponse::set_bind_result(const char* value, size_t size) {
  
  bind_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindAcquireResponse.bind_result)
}
::std::string* BindAcquireResponse::mutable_bind_result() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindAcquireResponse.bind_result)
  return bind_result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindAcquireResponse::release_bind_result() {
  // @@protoc_insertion_point(field_release:deviceapi.BindAcquireResponse.bind_result)
  
  return bind_result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindAcquireResponse::set_allocated_bind_result(::std::string* bind_result) {
  if (bind_result != NULL) {
    
  } else {
    
  }
  bind_result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_result);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindAcquireResponse.bind_result)
}

inline const BindAcquireResponse* BindAcquireResponse::internal_default_instance() {
  return &BindAcquireResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindDisplay::BindDisplay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindDisplay)
}

void BindDisplay::InitAsDefaultInstance() {
}

BindDisplay::BindDisplay(const BindDisplay& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindDisplay)
}

void BindDisplay::SharedCtor() {
  _cached_size_ = 0;
}

BindDisplay::~BindDisplay() {
  // @@protoc_insertion_point(destructor:deviceapi.BindDisplay)
  SharedDtor();
}

void BindDisplay::SharedDtor() {
}

void BindDisplay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindDisplay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindDisplay_descriptor_;
}

const BindDisplay& BindDisplay::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindDisplay> BindDisplay_default_instance_;

BindDisplay* BindDisplay::New(::google::protobuf::Arena* arena) const {
  BindDisplay* n = new BindDisplay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindDisplay::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindDisplay)
}

bool BindDisplay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindDisplay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindDisplay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindDisplay)
  return false;
#undef DO_
}

void BindDisplay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindDisplay)
  // @@protoc_insertion_point(serialize_end:deviceapi.BindDisplay)
}

::google::protobuf::uint8* BindDisplay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindDisplay)
  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindDisplay)
  return target;
}

size_t BindDisplay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindDisplay)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindDisplay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindDisplay)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindDisplay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindDisplay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindDisplay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindDisplay)
    UnsafeMergeFrom(*source);
  }
}

void BindDisplay::MergeFrom(const BindDisplay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindDisplay)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindDisplay::UnsafeMergeFrom(const BindDisplay& from) {
  GOOGLE_DCHECK(&from != this);
}

void BindDisplay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindDisplay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindDisplay::CopyFrom(const BindDisplay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindDisplay)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindDisplay::IsInitialized() const {

  return true;
}

void BindDisplay::Swap(BindDisplay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindDisplay::InternalSwap(BindDisplay* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindDisplay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindDisplay_descriptor_;
  metadata.reflection = BindDisplay_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindDisplay

inline const BindDisplay* BindDisplay::internal_default_instance() {
  return &BindDisplay_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindDisplayResponse::kBindDisplayResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindDisplayResponse::BindDisplayResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BindDisplayResponse)
}

void BindDisplayResponse::InitAsDefaultInstance() {
}

BindDisplayResponse::BindDisplayResponse(const BindDisplayResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BindDisplayResponse)
}

void BindDisplayResponse::SharedCtor() {
  bind_display_result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BindDisplayResponse::~BindDisplayResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.BindDisplayResponse)
  SharedDtor();
}

void BindDisplayResponse::SharedDtor() {
  bind_display_result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindDisplayResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindDisplayResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindDisplayResponse_descriptor_;
}

const BindDisplayResponse& BindDisplayResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindDisplayResponse> BindDisplayResponse_default_instance_;

BindDisplayResponse* BindDisplayResponse::New(::google::protobuf::Arena* arena) const {
  BindDisplayResponse* n = new BindDisplayResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindDisplayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BindDisplayResponse)
  bind_display_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BindDisplayResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BindDisplayResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bind_display_result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bind_display_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bind_display_result().data(), this->bind_display_result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BindDisplayResponse.bind_display_result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BindDisplayResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BindDisplayResponse)
  return false;
#undef DO_
}

void BindDisplayResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BindDisplayResponse)
  // optional string bind_display_result = 1;
  if (this->bind_display_result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_display_result().data(), this->bind_display_result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindDisplayResponse.bind_display_result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bind_display_result(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BindDisplayResponse)
}

::google::protobuf::uint8* BindDisplayResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BindDisplayResponse)
  // optional string bind_display_result = 1;
  if (this->bind_display_result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bind_display_result().data(), this->bind_display_result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BindDisplayResponse.bind_display_result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bind_display_result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BindDisplayResponse)
  return target;
}

size_t BindDisplayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BindDisplayResponse)
  size_t total_size = 0;

  // optional string bind_display_result = 1;
  if (this->bind_display_result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bind_display_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindDisplayResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BindDisplayResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindDisplayResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindDisplayResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BindDisplayResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BindDisplayResponse)
    UnsafeMergeFrom(*source);
  }
}

void BindDisplayResponse::MergeFrom(const BindDisplayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BindDisplayResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindDisplayResponse::UnsafeMergeFrom(const BindDisplayResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bind_display_result().size() > 0) {

    bind_display_result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bind_display_result_);
  }
}

void BindDisplayResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BindDisplayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindDisplayResponse::CopyFrom(const BindDisplayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BindDisplayResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindDisplayResponse::IsInitialized() const {

  return true;
}

void BindDisplayResponse::Swap(BindDisplayResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindDisplayResponse::InternalSwap(BindDisplayResponse* other) {
  bind_display_result_.Swap(&other->bind_display_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindDisplayResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindDisplayResponse_descriptor_;
  metadata.reflection = BindDisplayResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindDisplayResponse

// optional string bind_display_result = 1;
void BindDisplayResponse::clear_bind_display_result() {
  bind_display_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindDisplayResponse::bind_display_result() const {
  // @@protoc_insertion_point(field_get:deviceapi.BindDisplayResponse.bind_display_result)
  return bind_display_result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindDisplayResponse::set_bind_display_result(const ::std::string& value) {
  
  bind_display_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BindDisplayResponse.bind_display_result)
}
void BindDisplayResponse::set_bind_display_result(const char* value) {
  
  bind_display_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BindDisplayResponse.bind_display_result)
}
void BindDisplayResponse::set_bind_display_result(const char* value, size_t size) {
  
  bind_display_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BindDisplayResponse.bind_display_result)
}
::std::string* BindDisplayResponse::mutable_bind_display_result() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BindDisplayResponse.bind_display_result)
  return bind_display_result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindDisplayResponse::release_bind_display_result() {
  // @@protoc_insertion_point(field_release:deviceapi.BindDisplayResponse.bind_display_result)
  
  return bind_display_result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindDisplayResponse::set_allocated_bind_display_result(::std::string* bind_display_result) {
  if (bind_display_result != NULL) {
    
  } else {
    
  }
  bind_display_result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bind_display_result);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BindDisplayResponse.bind_display_result)
}

inline const BindDisplayResponse* BindDisplayResponse::internal_default_instance() {
  return &BindDisplayResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceName::kBleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceName::DeviceName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.DeviceName)
}

void DeviceName::InitAsDefaultInstance() {
}

DeviceName::DeviceName(const DeviceName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.DeviceName)
}

void DeviceName::SharedCtor() {
  ble_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeviceName::~DeviceName() {
  // @@protoc_insertion_point(destructor:deviceapi.DeviceName)
  SharedDtor();
}

void DeviceName::SharedDtor() {
  ble_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeviceName_descriptor_;
}

const DeviceName& DeviceName::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeviceName> DeviceName_default_instance_;

DeviceName* DeviceName::New(::google::protobuf::Arena* arena) const {
  DeviceName* n = new DeviceName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceName::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.DeviceName)
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeviceName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.DeviceName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ble_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ble_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ble_name().data(), this->ble_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.DeviceName.ble_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.DeviceName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.DeviceName)
  return false;
#undef DO_
}

void DeviceName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.DeviceName)
  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_name().data(), this->ble_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.DeviceName.ble_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ble_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.DeviceName)
}

::google::protobuf::uint8* DeviceName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.DeviceName)
  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_name().data(), this->ble_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.DeviceName.ble_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ble_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.DeviceName)
  return target;
}

size_t DeviceName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.DeviceName)
  size_t total_size = 0;

  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ble_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.DeviceName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeviceName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.DeviceName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.DeviceName)
    UnsafeMergeFrom(*source);
  }
}

void DeviceName::MergeFrom(const DeviceName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.DeviceName)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeviceName::UnsafeMergeFrom(const DeviceName& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ble_name().size() > 0) {

    ble_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ble_name_);
  }
}

void DeviceName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.DeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceName::CopyFrom(const DeviceName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.DeviceName)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeviceName::IsInitialized() const {

  return true;
}

void DeviceName::Swap(DeviceName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceName::InternalSwap(DeviceName* other) {
  ble_name_.Swap(&other->ble_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeviceName_descriptor_;
  metadata.reflection = DeviceName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceName

// optional string ble_name = 1;
void DeviceName::clear_ble_name() {
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceName::ble_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.DeviceName.ble_name)
  return ble_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceName::set_ble_name(const ::std::string& value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.DeviceName.ble_name)
}
void DeviceName::set_ble_name(const char* value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.DeviceName.ble_name)
}
void DeviceName::set_ble_name(const char* value, size_t size) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.DeviceName.ble_name)
}
::std::string* DeviceName::mutable_ble_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.DeviceName.ble_name)
  return ble_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceName::release_ble_name() {
  // @@protoc_insertion_point(field_release:deviceapi.DeviceName.ble_name)
  
  return ble_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceName::set_allocated_ble_name(::std::string* ble_name) {
  if (ble_name != NULL) {
    
  } else {
    
  }
  ble_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ble_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.DeviceName.ble_name)
}

inline const DeviceName* DeviceName::internal_default_instance() {
  return &DeviceName_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSnResponse::kSnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSnResponse::GetSnResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.GetSnResponse)
}

void GetSnResponse::InitAsDefaultInstance() {
}

GetSnResponse::GetSnResponse(const GetSnResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.GetSnResponse)
}

void GetSnResponse::SharedCtor() {
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetSnResponse::~GetSnResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.GetSnResponse)
  SharedDtor();
}

void GetSnResponse::SharedDtor() {
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSnResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSnResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSnResponse_descriptor_;
}

const GetSnResponse& GetSnResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetSnResponse> GetSnResponse_default_instance_;

GetSnResponse* GetSnResponse::New(::google::protobuf::Arena* arena) const {
  GetSnResponse* n = new GetSnResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSnResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.GetSnResponse)
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetSnResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.GetSnResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sn = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.GetSnResponse.sn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.GetSnResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.GetSnResponse)
  return false;
#undef DO_
}

void GetSnResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.GetSnResponse)
  // optional string sn = 1;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetSnResponse.sn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sn(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.GetSnResponse)
}

::google::protobuf::uint8* GetSnResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.GetSnResponse)
  // optional string sn = 1;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.GetSnResponse.sn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sn(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.GetSnResponse)
  return target;
}

size_t GetSnResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.GetSnResponse)
  size_t total_size = 0;

  // optional string sn = 1;
  if (this->sn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSnResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.GetSnResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetSnResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSnResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.GetSnResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.GetSnResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetSnResponse::MergeFrom(const GetSnResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.GetSnResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetSnResponse::UnsafeMergeFrom(const GetSnResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sn().size() > 0) {

    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
}

void GetSnResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.GetSnResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSnResponse::CopyFrom(const GetSnResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.GetSnResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetSnResponse::IsInitialized() const {

  return true;
}

void GetSnResponse::Swap(GetSnResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSnResponse::InternalSwap(GetSnResponse* other) {
  sn_.Swap(&other->sn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSnResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSnResponse_descriptor_;
  metadata.reflection = GetSnResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSnResponse

// optional string sn = 1;
void GetSnResponse::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetSnResponse::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.GetSnResponse.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSnResponse::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.GetSnResponse.sn)
}
void GetSnResponse::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.GetSnResponse.sn)
}
void GetSnResponse::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.GetSnResponse.sn)
}
::std::string* GetSnResponse::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.GetSnResponse.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSnResponse::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.GetSnResponse.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSnResponse::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.GetSnResponse.sn)
}

inline const GetSnResponse* GetSnResponse::internal_default_instance() {
  return &GetSnResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApduResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApduResponse::ApduResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.ApduResponse)
}

void ApduResponse::InitAsDefaultInstance() {
}

ApduResponse::ApduResponse(const ApduResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.ApduResponse)
}

void ApduResponse::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ApduResponse::~ApduResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.ApduResponse)
  SharedDtor();
}

void ApduResponse::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApduResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApduResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ApduResponse_descriptor_;
}

const ApduResponse& ApduResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ApduResponse> ApduResponse_default_instance_;

ApduResponse* ApduResponse::New(::google::protobuf::Arena* arena) const {
  ApduResponse* n = new ApduResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApduResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.ApduResponse)
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ApduResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.ApduResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string result = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.ApduResponse.result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.ApduResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.ApduResponse)
  return false;
#undef DO_
}

void ApduResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.ApduResponse)
  // optional string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.ApduResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.ApduResponse)
}

::google::protobuf::uint8* ApduResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.ApduResponse)
  // optional string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.ApduResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.ApduResponse)
  return target;
}

size_t ApduResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.ApduResponse)
  size_t total_size = 0;

  // optional string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApduResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.ApduResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ApduResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApduResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.ApduResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.ApduResponse)
    UnsafeMergeFrom(*source);
  }
}

void ApduResponse::MergeFrom(const ApduResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.ApduResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ApduResponse::UnsafeMergeFrom(const ApduResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void ApduResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.ApduResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApduResponse::CopyFrom(const ApduResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.ApduResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ApduResponse::IsInitialized() const {

  return true;
}

void ApduResponse::Swap(ApduResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApduResponse::InternalSwap(ApduResponse* other) {
  result_.Swap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApduResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ApduResponse_descriptor_;
  metadata.reflection = ApduResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApduResponse

// optional string result = 1;
void ApduResponse::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ApduResponse::result() const {
  // @@protoc_insertion_point(field_get:deviceapi.ApduResponse.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApduResponse::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.ApduResponse.result)
}
void ApduResponse::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.ApduResponse.result)
}
void ApduResponse::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.ApduResponse.result)
}
::std::string* ApduResponse::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.ApduResponse.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ApduResponse::release_result() {
  // @@protoc_insertion_point(field_release:deviceapi.ApduResponse.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApduResponse::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.ApduResponse.result)
}

inline const ApduResponse* ApduResponse::internal_default_instance() {
  return &ApduResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Test::kTtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test::Test()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.Test)
}

void Test::InitAsDefaultInstance() {
}

Test::Test(const Test& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.Test)
}

void Test::SharedCtor() {
  tt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Test::~Test() {
  // @@protoc_insertion_point(destructor:deviceapi.Test)
  SharedDtor();
}

void Test::SharedDtor() {
  tt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Test::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Test_descriptor_;
}

const Test& Test::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Test> Test_default_instance_;

Test* Test::New(::google::protobuf::Arena* arena) const {
  Test* n = new Test;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Test::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.Test)
  tt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Test::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.Test)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tt = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tt().data(), this->tt().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.Test.tt"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.Test)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.Test)
  return false;
#undef DO_
}

void Test::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.Test)
  // optional string tt = 1;
  if (this->tt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tt().data(), this->tt().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.Test.tt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tt(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.Test)
}

::google::protobuf::uint8* Test::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.Test)
  // optional string tt = 1;
  if (this->tt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tt().data(), this->tt().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.Test.tt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tt(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.Test)
  return target;
}

size_t Test::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.Test)
  size_t total_size = 0;

  // optional string tt = 1;
  if (this->tt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.Test)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Test* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.Test)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.Test)
    UnsafeMergeFrom(*source);
  }
}

void Test::MergeFrom(const Test& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.Test)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Test::UnsafeMergeFrom(const Test& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.tt().size() > 0) {

    tt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tt_);
  }
}

void Test::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.Test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test::CopyFrom(const Test& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.Test)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Test::IsInitialized() const {

  return true;
}

void Test::Swap(Test* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test::InternalSwap(Test* other) {
  tt_.Swap(&other->tt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Test_descriptor_;
  metadata.reflection = Test_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Test

// optional string tt = 1;
void Test::clear_tt() {
  tt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Test::tt() const {
  // @@protoc_insertion_point(field_get:deviceapi.Test.tt)
  return tt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Test::set_tt(const ::std::string& value) {
  
  tt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.Test.tt)
}
void Test::set_tt(const char* value) {
  
  tt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.Test.tt)
}
void Test::set_tt(const char* value, size_t size) {
  
  tt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.Test.tt)
}
::std::string* Test::mutable_tt() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.Test.tt)
  return tt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Test::release_tt() {
  // @@protoc_insertion_point(field_release:deviceapi.Test.tt)
  
  return tt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Test::set_allocated_tt(::std::string* tt) {
  if (tt != NULL) {
    
  } else {
    
  }
  tt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tt);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.Test.tt)
}

inline const Test* Test::internal_default_instance() {
  return &Test_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUpdateResponse::kSeIdFieldNumber;
const int CheckUpdateResponse::kSnFieldNumber;
const int CheckUpdateResponse::kStatusFieldNumber;
const int CheckUpdateResponse::kSdkModeFieldNumber;
const int CheckUpdateResponse::kAvailableAppListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUpdateResponse::CheckUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.CheckUpdateResponse)
}

void CheckUpdateResponse::InitAsDefaultInstance() {
}

CheckUpdateResponse::CheckUpdateResponse(const CheckUpdateResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.CheckUpdateResponse)
}

void CheckUpdateResponse::SharedCtor() {
  se_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CheckUpdateResponse::~CheckUpdateResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.CheckUpdateResponse)
  SharedDtor();
}

void CheckUpdateResponse::SharedDtor() {
  se_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckUpdateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckUpdateResponse_descriptor_;
}

const CheckUpdateResponse& CheckUpdateResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CheckUpdateResponse> CheckUpdateResponse_default_instance_;

CheckUpdateResponse* CheckUpdateResponse::New(::google::protobuf::Arena* arena) const {
  CheckUpdateResponse* n = new CheckUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.CheckUpdateResponse)
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  available_app_list_.Clear();
}

bool CheckUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.CheckUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string se_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_se_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->se_id().data(), this->se_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.CheckUpdateResponse.se_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sn;
        break;
      }

      // optional string sn = 2;
      case 2: {
        if (tag == 18) {
         parse_sn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.CheckUpdateResponse.sn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_status;
        break;
      }

      // optional string status = 3;
      case 3: {
        if (tag == 26) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.CheckUpdateResponse.status"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sdk_mode;
        break;
      }

      // optional string sdk_mode = 4;
      case 4: {
        if (tag == 34) {
         parse_sdk_mode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_mode().data(), this->sdk_mode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.CheckUpdateResponse.sdk_mode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_available_app_list;
        break;
      }

      // repeated .deviceapi.AvailableAppBean available_app_list = 5;
      case 5: {
        if (tag == 42) {
         parse_available_app_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_available_app_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_available_app_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_available_app_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.CheckUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.CheckUpdateResponse)
  return false;
#undef DO_
}

void CheckUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.CheckUpdateResponse)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateResponse.se_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->se_id(), output);
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateResponse.sn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sn(), output);
  }

  // optional string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateResponse.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status(), output);
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_mode().data(), this->sdk_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateResponse.sdk_mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdk_mode(), output);
  }

  // repeated .deviceapi.AvailableAppBean available_app_list = 5;
  for (unsigned int i = 0, n = this->available_app_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->available_app_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.CheckUpdateResponse)
}

::google::protobuf::uint8* CheckUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.CheckUpdateResponse)
  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->se_id().data(), this->se_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateResponse.se_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->se_id(), target);
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateResponse.sn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sn(), target);
  }

  // optional string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateResponse.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status(), target);
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_mode().data(), this->sdk_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.CheckUpdateResponse.sdk_mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sdk_mode(), target);
  }

  // repeated .deviceapi.AvailableAppBean available_app_list = 5;
  for (unsigned int i = 0, n = this->available_app_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->available_app_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.CheckUpdateResponse)
  return target;
}

size_t CheckUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.CheckUpdateResponse)
  size_t total_size = 0;

  // optional string se_id = 1;
  if (this->se_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->se_id());
  }

  // optional string sn = 2;
  if (this->sn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());
  }

  // optional string status = 3;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // optional string sdk_mode = 4;
  if (this->sdk_mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_mode());
  }

  // repeated .deviceapi.AvailableAppBean available_app_list = 5;
  {
    unsigned int count = this->available_app_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->available_app_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.CheckUpdateResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CheckUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.CheckUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.CheckUpdateResponse)
    UnsafeMergeFrom(*source);
  }
}

void CheckUpdateResponse::MergeFrom(const CheckUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.CheckUpdateResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CheckUpdateResponse::UnsafeMergeFrom(const CheckUpdateResponse& from) {
  GOOGLE_DCHECK(&from != this);
  available_app_list_.MergeFrom(from.available_app_list_);
  if (from.se_id().size() > 0) {

    se_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_id_);
  }
  if (from.sn().size() > 0) {

    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.sdk_mode().size() > 0) {

    sdk_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_mode_);
  }
}

void CheckUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.CheckUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUpdateResponse::CopyFrom(const CheckUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.CheckUpdateResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CheckUpdateResponse::IsInitialized() const {

  return true;
}

void CheckUpdateResponse::Swap(CheckUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUpdateResponse::InternalSwap(CheckUpdateResponse* other) {
  se_id_.Swap(&other->se_id_);
  sn_.Swap(&other->sn_);
  status_.Swap(&other->status_);
  sdk_mode_.Swap(&other->sdk_mode_);
  available_app_list_.UnsafeArenaSwap(&other->available_app_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckUpdateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckUpdateResponse_descriptor_;
  metadata.reflection = CheckUpdateResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckUpdateResponse

// optional string se_id = 1;
void CheckUpdateResponse::clear_se_id() {
  se_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateResponse::se_id() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateResponse.se_id)
  return se_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateResponse::set_se_id(const ::std::string& value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateResponse.se_id)
}
void CheckUpdateResponse::set_se_id(const char* value) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateResponse.se_id)
}
void CheckUpdateResponse::set_se_id(const char* value, size_t size) {
  
  se_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateResponse.se_id)
}
::std::string* CheckUpdateResponse::mutable_se_id() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateResponse.se_id)
  return se_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateResponse::release_se_id() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateResponse.se_id)
  
  return se_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateResponse::set_allocated_se_id(::std::string* se_id) {
  if (se_id != NULL) {
    
  } else {
    
  }
  se_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_id);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateResponse.se_id)
}

// optional string sn = 2;
void CheckUpdateResponse::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateResponse::sn() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateResponse.sn)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateResponse::set_sn(const ::std::string& value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateResponse.sn)
}
void CheckUpdateResponse::set_sn(const char* value) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateResponse.sn)
}
void CheckUpdateResponse::set_sn(const char* value, size_t size) {
  
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateResponse.sn)
}
::std::string* CheckUpdateResponse::mutable_sn() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateResponse.sn)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateResponse::release_sn() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateResponse.sn)
  
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateResponse::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    
  } else {
    
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateResponse.sn)
}

// optional string status = 3;
void CheckUpdateResponse::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateResponse::status() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateResponse.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateResponse::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateResponse.status)
}
void CheckUpdateResponse::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateResponse.status)
}
void CheckUpdateResponse::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateResponse.status)
}
::std::string* CheckUpdateResponse::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateResponse.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateResponse::release_status() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateResponse.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateResponse::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateResponse.status)
}

// optional string sdk_mode = 4;
void CheckUpdateResponse::clear_sdk_mode() {
  sdk_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateResponse::sdk_mode() const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateResponse.sdk_mode)
  return sdk_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateResponse::set_sdk_mode(const ::std::string& value) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.CheckUpdateResponse.sdk_mode)
}
void CheckUpdateResponse::set_sdk_mode(const char* value) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.CheckUpdateResponse.sdk_mode)
}
void CheckUpdateResponse::set_sdk_mode(const char* value, size_t size) {
  
  sdk_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.CheckUpdateResponse.sdk_mode)
}
::std::string* CheckUpdateResponse::mutable_sdk_mode() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateResponse.sdk_mode)
  return sdk_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateResponse::release_sdk_mode() {
  // @@protoc_insertion_point(field_release:deviceapi.CheckUpdateResponse.sdk_mode)
  
  return sdk_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateResponse::set_allocated_sdk_mode(::std::string* sdk_mode) {
  if (sdk_mode != NULL) {
    
  } else {
    
  }
  sdk_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_mode);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.CheckUpdateResponse.sdk_mode)
}

// repeated .deviceapi.AvailableAppBean available_app_list = 5;
int CheckUpdateResponse::available_app_list_size() const {
  return available_app_list_.size();
}
void CheckUpdateResponse::clear_available_app_list() {
  available_app_list_.Clear();
}
const ::deviceapi::AvailableAppBean& CheckUpdateResponse::available_app_list(int index) const {
  // @@protoc_insertion_point(field_get:deviceapi.CheckUpdateResponse.available_app_list)
  return available_app_list_.Get(index);
}
::deviceapi::AvailableAppBean* CheckUpdateResponse::mutable_available_app_list(int index) {
  // @@protoc_insertion_point(field_mutable:deviceapi.CheckUpdateResponse.available_app_list)
  return available_app_list_.Mutable(index);
}
::deviceapi::AvailableAppBean* CheckUpdateResponse::add_available_app_list() {
  // @@protoc_insertion_point(field_add:deviceapi.CheckUpdateResponse.available_app_list)
  return available_app_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >*
CheckUpdateResponse::mutable_available_app_list() {
  // @@protoc_insertion_point(field_mutable_list:deviceapi.CheckUpdateResponse.available_app_list)
  return &available_app_list_;
}
const ::google::protobuf::RepeatedPtrField< ::deviceapi::AvailableAppBean >&
CheckUpdateResponse::available_app_list() const {
  // @@protoc_insertion_point(field_list:deviceapi.CheckUpdateResponse.available_app_list)
  return available_app_list_;
}

inline const CheckUpdateResponse* CheckUpdateResponse::internal_default_instance() {
  return &CheckUpdateResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvailableAppBean::kAppNameFieldNumber;
const int AvailableAppBean::kAppLogoFieldNumber;
const int AvailableAppBean::kInstalledVersionFieldNumber;
const int AvailableAppBean::kLastUpdatedFieldNumber;
const int AvailableAppBean::kLatestVersionFieldNumber;
const int AvailableAppBean::kInstallModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvailableAppBean::AvailableAppBean()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.AvailableAppBean)
}

void AvailableAppBean::InitAsDefaultInstance() {
}

AvailableAppBean::AvailableAppBean(const AvailableAppBean& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.AvailableAppBean)
}

void AvailableAppBean::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_logo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  installed_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_updated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  install_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AvailableAppBean::~AvailableAppBean() {
  // @@protoc_insertion_point(destructor:deviceapi.AvailableAppBean)
  SharedDtor();
}

void AvailableAppBean::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_logo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  installed_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_updated_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  install_mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AvailableAppBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvailableAppBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AvailableAppBean_descriptor_;
}

const AvailableAppBean& AvailableAppBean::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AvailableAppBean> AvailableAppBean_default_instance_;

AvailableAppBean* AvailableAppBean::New(::google::protobuf::Arena* arena) const {
  AvailableAppBean* n = new AvailableAppBean;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvailableAppBean::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.AvailableAppBean)
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_logo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  installed_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_updated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  install_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AvailableAppBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.AvailableAppBean)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.app_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_app_logo;
        break;
      }

      // optional string app_logo = 2;
      case 2: {
        if (tag == 18) {
         parse_app_logo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_logo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_logo().data(), this->app_logo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.app_logo"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_installed_version;
        break;
      }

      // optional string installed_version = 3;
      case 3: {
        if (tag == 26) {
         parse_installed_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_installed_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->installed_version().data(), this->installed_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.installed_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_last_updated;
        break;
      }

      // optional string last_updated = 4;
      case 4: {
        if (tag == 34) {
         parse_last_updated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_updated()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_updated().data(), this->last_updated().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.last_updated"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_latest_version;
        break;
      }

      // optional string latest_version = 5;
      case 5: {
        if (tag == 42) {
         parse_latest_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latest_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->latest_version().data(), this->latest_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.latest_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_install_mode;
        break;
      }

      // optional string install_mode = 6;
      case 6: {
        if (tag == 50) {
         parse_install_mode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_install_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->install_mode().data(), this->install_mode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.AvailableAppBean.install_mode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.AvailableAppBean)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.AvailableAppBean)
  return false;
#undef DO_
}

void AvailableAppBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.AvailableAppBean)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // optional string app_logo = 2;
  if (this->app_logo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_logo().data(), this->app_logo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.app_logo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->app_logo(), output);
  }

  // optional string installed_version = 3;
  if (this->installed_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->installed_version().data(), this->installed_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.installed_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->installed_version(), output);
  }

  // optional string last_updated = 4;
  if (this->last_updated().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_updated().data(), this->last_updated().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.last_updated");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->last_updated(), output);
  }

  // optional string latest_version = 5;
  if (this->latest_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latest_version().data(), this->latest_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.latest_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->latest_version(), output);
  }

  // optional string install_mode = 6;
  if (this->install_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->install_mode().data(), this->install_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.install_mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->install_mode(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.AvailableAppBean)
}

::google::protobuf::uint8* AvailableAppBean::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.AvailableAppBean)
  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // optional string app_logo = 2;
  if (this->app_logo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_logo().data(), this->app_logo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.app_logo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->app_logo(), target);
  }

  // optional string installed_version = 3;
  if (this->installed_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->installed_version().data(), this->installed_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.installed_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->installed_version(), target);
  }

  // optional string last_updated = 4;
  if (this->last_updated().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_updated().data(), this->last_updated().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.last_updated");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->last_updated(), target);
  }

  // optional string latest_version = 5;
  if (this->latest_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latest_version().data(), this->latest_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.latest_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->latest_version(), target);
  }

  // optional string install_mode = 6;
  if (this->install_mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->install_mode().data(), this->install_mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.AvailableAppBean.install_mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->install_mode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.AvailableAppBean)
  return target;
}

size_t AvailableAppBean::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.AvailableAppBean)
  size_t total_size = 0;

  // optional string app_name = 1;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  // optional string app_logo = 2;
  if (this->app_logo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_logo());
  }

  // optional string installed_version = 3;
  if (this->installed_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->installed_version());
  }

  // optional string last_updated = 4;
  if (this->last_updated().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_updated());
  }

  // optional string latest_version = 5;
  if (this->latest_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->latest_version());
  }

  // optional string install_mode = 6;
  if (this->install_mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->install_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvailableAppBean::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.AvailableAppBean)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AvailableAppBean* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvailableAppBean>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.AvailableAppBean)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.AvailableAppBean)
    UnsafeMergeFrom(*source);
  }
}

void AvailableAppBean::MergeFrom(const AvailableAppBean& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.AvailableAppBean)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AvailableAppBean::UnsafeMergeFrom(const AvailableAppBean& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  if (from.app_logo().size() > 0) {

    app_logo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_logo_);
  }
  if (from.installed_version().size() > 0) {

    installed_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.installed_version_);
  }
  if (from.last_updated().size() > 0) {

    last_updated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_updated_);
  }
  if (from.latest_version().size() > 0) {

    latest_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_version_);
  }
  if (from.install_mode().size() > 0) {

    install_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.install_mode_);
  }
}

void AvailableAppBean::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.AvailableAppBean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvailableAppBean::CopyFrom(const AvailableAppBean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.AvailableAppBean)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AvailableAppBean::IsInitialized() const {

  return true;
}

void AvailableAppBean::Swap(AvailableAppBean* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvailableAppBean::InternalSwap(AvailableAppBean* other) {
  app_name_.Swap(&other->app_name_);
  app_logo_.Swap(&other->app_logo_);
  installed_version_.Swap(&other->installed_version_);
  last_updated_.Swap(&other->last_updated_);
  latest_version_.Swap(&other->latest_version_);
  install_mode_.Swap(&other->install_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvailableAppBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AvailableAppBean_descriptor_;
  metadata.reflection = AvailableAppBean_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvailableAppBean

// optional string app_name = 1;
void AvailableAppBean::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::app_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.app_name)
}
void AvailableAppBean::set_app_name(const char* value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.app_name)
}
void AvailableAppBean::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.app_name)
}
::std::string* AvailableAppBean::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_app_name() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.app_name)
}

// optional string app_logo = 2;
void AvailableAppBean::clear_app_logo() {
  app_logo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::app_logo() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.app_logo)
  return app_logo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_app_logo(const ::std::string& value) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.app_logo)
}
void AvailableAppBean::set_app_logo(const char* value) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.app_logo)
}
void AvailableAppBean::set_app_logo(const char* value, size_t size) {
  
  app_logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.app_logo)
}
::std::string* AvailableAppBean::mutable_app_logo() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.app_logo)
  return app_logo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_app_logo() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.app_logo)
  
  return app_logo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_app_logo(::std::string* app_logo) {
  if (app_logo != NULL) {
    
  } else {
    
  }
  app_logo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_logo);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.app_logo)
}

// optional string installed_version = 3;
void AvailableAppBean::clear_installed_version() {
  installed_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::installed_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.installed_version)
  return installed_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_installed_version(const ::std::string& value) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.installed_version)
}
void AvailableAppBean::set_installed_version(const char* value) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.installed_version)
}
void AvailableAppBean::set_installed_version(const char* value, size_t size) {
  
  installed_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.installed_version)
}
::std::string* AvailableAppBean::mutable_installed_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.installed_version)
  return installed_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_installed_version() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.installed_version)
  
  return installed_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_installed_version(::std::string* installed_version) {
  if (installed_version != NULL) {
    
  } else {
    
  }
  installed_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), installed_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.installed_version)
}

// optional string last_updated = 4;
void AvailableAppBean::clear_last_updated() {
  last_updated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::last_updated() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.last_updated)
  return last_updated_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_last_updated(const ::std::string& value) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.last_updated)
}
void AvailableAppBean::set_last_updated(const char* value) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.last_updated)
}
void AvailableAppBean::set_last_updated(const char* value, size_t size) {
  
  last_updated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.last_updated)
}
::std::string* AvailableAppBean::mutable_last_updated() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.last_updated)
  return last_updated_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_last_updated() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.last_updated)
  
  return last_updated_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_last_updated(::std::string* last_updated) {
  if (last_updated != NULL) {
    
  } else {
    
  }
  last_updated_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_updated);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.last_updated)
}

// optional string latest_version = 5;
void AvailableAppBean::clear_latest_version() {
  latest_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::latest_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.latest_version)
  return latest_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_latest_version(const ::std::string& value) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.latest_version)
}
void AvailableAppBean::set_latest_version(const char* value) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.latest_version)
}
void AvailableAppBean::set_latest_version(const char* value, size_t size) {
  
  latest_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.latest_version)
}
::std::string* AvailableAppBean::mutable_latest_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.latest_version)
  return latest_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_latest_version() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.latest_version)
  
  return latest_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_latest_version(::std::string* latest_version) {
  if (latest_version != NULL) {
    
  } else {
    
  }
  latest_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latest_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.latest_version)
}

// optional string install_mode = 6;
void AvailableAppBean::clear_install_mode() {
  install_mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AvailableAppBean::install_mode() const {
  // @@protoc_insertion_point(field_get:deviceapi.AvailableAppBean.install_mode)
  return install_mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_install_mode(const ::std::string& value) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.AvailableAppBean.install_mode)
}
void AvailableAppBean::set_install_mode(const char* value) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.AvailableAppBean.install_mode)
}
void AvailableAppBean::set_install_mode(const char* value, size_t size) {
  
  install_mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.AvailableAppBean.install_mode)
}
::std::string* AvailableAppBean::mutable_install_mode() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.AvailableAppBean.install_mode)
  return install_mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AvailableAppBean::release_install_mode() {
  // @@protoc_insertion_point(field_release:deviceapi.AvailableAppBean.install_mode)
  
  return install_mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AvailableAppBean::set_allocated_install_mode(::std::string* install_mode) {
  if (install_mode != NULL) {
    
  } else {
    
  }
  install_mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), install_mode);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.AvailableAppBean.install_mode)
}

inline const AvailableAppBean* AvailableAppBean::internal_default_instance() {
  return &AvailableAppBean_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SdkInfoResponse::kSdkVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SdkInfoResponse::SdkInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.SdkInfoResponse)
}

void SdkInfoResponse::InitAsDefaultInstance() {
}

SdkInfoResponse::SdkInfoResponse(const SdkInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.SdkInfoResponse)
}

void SdkInfoResponse::SharedCtor() {
  sdk_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SdkInfoResponse::~SdkInfoResponse() {
  // @@protoc_insertion_point(destructor:deviceapi.SdkInfoResponse)
  SharedDtor();
}

void SdkInfoResponse::SharedDtor() {
  sdk_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SdkInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SdkInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SdkInfoResponse_descriptor_;
}

const SdkInfoResponse& SdkInfoResponse::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SdkInfoResponse> SdkInfoResponse_default_instance_;

SdkInfoResponse* SdkInfoResponse::New(::google::protobuf::Arena* arena) const {
  SdkInfoResponse* n = new SdkInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SdkInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.SdkInfoResponse)
  sdk_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SdkInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.SdkInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sdk_version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_version().data(), this->sdk_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.SdkInfoResponse.sdk_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.SdkInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.SdkInfoResponse)
  return false;
#undef DO_
}

void SdkInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.SdkInfoResponse)
  // optional string sdk_version = 1;
  if (this->sdk_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_version().data(), this->sdk_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SdkInfoResponse.sdk_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sdk_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.SdkInfoResponse)
}

::google::protobuf::uint8* SdkInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.SdkInfoResponse)
  // optional string sdk_version = 1;
  if (this->sdk_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_version().data(), this->sdk_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.SdkInfoResponse.sdk_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sdk_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.SdkInfoResponse)
  return target;
}

size_t SdkInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.SdkInfoResponse)
  size_t total_size = 0;

  // optional string sdk_version = 1;
  if (this->sdk_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SdkInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.SdkInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SdkInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SdkInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.SdkInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.SdkInfoResponse)
    UnsafeMergeFrom(*source);
  }
}

void SdkInfoResponse::MergeFrom(const SdkInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.SdkInfoResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SdkInfoResponse::UnsafeMergeFrom(const SdkInfoResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sdk_version().size() > 0) {

    sdk_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_version_);
  }
}

void SdkInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.SdkInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SdkInfoResponse::CopyFrom(const SdkInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.SdkInfoResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SdkInfoResponse::IsInitialized() const {

  return true;
}

void SdkInfoResponse::Swap(SdkInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SdkInfoResponse::InternalSwap(SdkInfoResponse* other) {
  sdk_version_.Swap(&other->sdk_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SdkInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SdkInfoResponse_descriptor_;
  metadata.reflection = SdkInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SdkInfoResponse

// optional string sdk_version = 1;
void SdkInfoResponse::clear_sdk_version() {
  sdk_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SdkInfoResponse::sdk_version() const {
  // @@protoc_insertion_point(field_get:deviceapi.SdkInfoResponse.sdk_version)
  return sdk_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SdkInfoResponse::set_sdk_version(const ::std::string& value) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.SdkInfoResponse.sdk_version)
}
void SdkInfoResponse::set_sdk_version(const char* value) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.SdkInfoResponse.sdk_version)
}
void SdkInfoResponse::set_sdk_version(const char* value, size_t size) {
  
  sdk_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.SdkInfoResponse.sdk_version)
}
::std::string* SdkInfoResponse::mutable_sdk_version() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.SdkInfoResponse.sdk_version)
  return sdk_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SdkInfoResponse::release_sdk_version() {
  // @@protoc_insertion_point(field_release:deviceapi.SdkInfoResponse.sdk_version)
  
  return sdk_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SdkInfoResponse::set_allocated_sdk_version(::std::string* sdk_version) {
  if (sdk_version != NULL) {
    
  } else {
    
  }
  sdk_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_version);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.SdkInfoResponse.sdk_version)
}

inline const SdkInfoResponse* SdkInfoResponse::internal_default_instance() {
  return &SdkInfoResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BleAction::kBleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BleAction::BleAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_device_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:deviceapi.BleAction)
}

void BleAction::InitAsDefaultInstance() {
}

BleAction::BleAction(const BleAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:deviceapi.BleAction)
}

void BleAction::SharedCtor() {
  ble_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BleAction::~BleAction() {
  // @@protoc_insertion_point(destructor:deviceapi.BleAction)
  SharedDtor();
}

void BleAction::SharedDtor() {
  ble_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BleAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BleAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BleAction_descriptor_;
}

const BleAction& BleAction::default_instance() {
  protobuf_InitDefaults_device_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BleAction> BleAction_default_instance_;

BleAction* BleAction::New(::google::protobuf::Arena* arena) const {
  BleAction* n = new BleAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BleAction::Clear() {
// @@protoc_insertion_point(message_clear_start:deviceapi.BleAction)
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BleAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:deviceapi.BleAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ble_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ble_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ble_name().data(), this->ble_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "deviceapi.BleAction.ble_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:deviceapi.BleAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:deviceapi.BleAction)
  return false;
#undef DO_
}

void BleAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:deviceapi.BleAction)
  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_name().data(), this->ble_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BleAction.ble_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ble_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:deviceapi.BleAction)
}

::google::protobuf::uint8* BleAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:deviceapi.BleAction)
  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ble_name().data(), this->ble_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "deviceapi.BleAction.ble_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ble_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:deviceapi.BleAction)
  return target;
}

size_t BleAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:deviceapi.BleAction)
  size_t total_size = 0;

  // optional string ble_name = 1;
  if (this->ble_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ble_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BleAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:deviceapi.BleAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BleAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BleAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:deviceapi.BleAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:deviceapi.BleAction)
    UnsafeMergeFrom(*source);
  }
}

void BleAction::MergeFrom(const BleAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:deviceapi.BleAction)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BleAction::UnsafeMergeFrom(const BleAction& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.ble_name().size() > 0) {

    ble_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ble_name_);
  }
}

void BleAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:deviceapi.BleAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BleAction::CopyFrom(const BleAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:deviceapi.BleAction)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BleAction::IsInitialized() const {

  return true;
}

void BleAction::Swap(BleAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BleAction::InternalSwap(BleAction* other) {
  ble_name_.Swap(&other->ble_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BleAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BleAction_descriptor_;
  metadata.reflection = BleAction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BleAction

// optional string ble_name = 1;
void BleAction::clear_ble_name() {
  ble_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BleAction::ble_name() const {
  // @@protoc_insertion_point(field_get:deviceapi.BleAction.ble_name)
  return ble_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BleAction::set_ble_name(const ::std::string& value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceapi.BleAction.ble_name)
}
void BleAction::set_ble_name(const char* value) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceapi.BleAction.ble_name)
}
void BleAction::set_ble_name(const char* value, size_t size) {
  
  ble_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceapi.BleAction.ble_name)
}
::std::string* BleAction::mutable_ble_name() {
  
  // @@protoc_insertion_point(field_mutable:deviceapi.BleAction.ble_name)
  return ble_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BleAction::release_ble_name() {
  // @@protoc_insertion_point(field_release:deviceapi.BleAction.ble_name)
  
  return ble_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BleAction::set_allocated_ble_name(::std::string* ble_name) {
  if (ble_name != NULL) {
    
  } else {
    
  }
  ble_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ble_name);
  // @@protoc_insertion_point(field_set_allocated:deviceapi.BleAction.ble_name)
}

inline const BleAction* BleAction::internal_default_instance() {
  return &BleAction_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace deviceapi

// @@protoc_insertion_point(global_scope)
