// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace api {

namespace {

const ::google::protobuf::Descriptor* TcxAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TcxAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* InitTokenCoreXParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InitTokenCoreXParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* HdStoreCreateParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HdStoreCreateParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* WalletResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WalletResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* HdStoreImportParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HdStoreImportParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* HdStoreDeriveParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HdStoreDeriveParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* HdStoreDeriveParam_Derivation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HdStoreDeriveParam_Derivation_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddressResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddressResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddressParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddressParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeystoreCommonExportResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeystoreCommonExportResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrivateKeyStoreImportParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrivateKeyStoreImportParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrivateKeyStoreExportParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrivateKeyStoreExportParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* WalletKeyParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WalletKeyParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeystoreCommonExistsParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeystoreCommonExistsParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeystoreCommonExistsResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeystoreCommonExistsResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeystoreCommonAccountsParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeystoreCommonAccountsParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* SignParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SignParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternalAddressParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternalAddressParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternalAddressResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternalAddressResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternalAddressExtra_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternalAddressExtra_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExternalAddressExtra_ExternalAddress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternalAddressExtra_ExternalAddress_reflection_ = NULL;
const ::google::protobuf::Descriptor* BtcForkDeriveExtraParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BtcForkDeriveExtraParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* HdStoreExtendedPublicKeyParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HdStoreExtendedPublicKeyParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* HdStoreExtendedPublicKeyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HdStoreExtendedPublicKeyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeviceParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeviceParam_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* KeyType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_api_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_api_2eproto() {
  protobuf_AddDesc_api_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api.proto");
  GOOGLE_CHECK(file != NULL);
  TcxAction_descriptor_ = file->message_type(0);
  static const int TcxAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TcxAction, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TcxAction, param_),
  };
  TcxAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TcxAction_descriptor_,
      TcxAction::internal_default_instance(),
      TcxAction_offsets_,
      -1,
      -1,
      -1,
      sizeof(TcxAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TcxAction, _internal_metadata_));
  Response_descriptor_ = file->message_type(1);
  static const int Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, error_),
  };
  Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_descriptor_,
      Response::internal_default_instance(),
      Response_offsets_,
      -1,
      -1,
      -1,
      sizeof(Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_));
  InitTokenCoreXParam_descriptor_ = file->message_type(2);
  static const int InitTokenCoreXParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitTokenCoreXParam, filedir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitTokenCoreXParam, xpubcommonkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitTokenCoreXParam, xpubcommoniv_),
  };
  InitTokenCoreXParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InitTokenCoreXParam_descriptor_,
      InitTokenCoreXParam::internal_default_instance(),
      InitTokenCoreXParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(InitTokenCoreXParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitTokenCoreXParam, _internal_metadata_));
  HdStoreCreateParam_descriptor_ = file->message_type(3);
  static const int HdStoreCreateParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreCreateParam, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreCreateParam, passwordhint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreCreateParam, name_),
  };
  HdStoreCreateParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HdStoreCreateParam_descriptor_,
      HdStoreCreateParam::internal_default_instance(),
      HdStoreCreateParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(HdStoreCreateParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreCreateParam, _internal_metadata_));
  WalletResult_descriptor_ = file->message_type(4);
  static const int WalletResult_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletResult, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletResult, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletResult, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletResult, accounts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletResult, createdat_),
  };
  WalletResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WalletResult_descriptor_,
      WalletResult::internal_default_instance(),
      WalletResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(WalletResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletResult, _internal_metadata_));
  HdStoreImportParam_descriptor_ = file->message_type(5);
  static const int HdStoreImportParam_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreImportParam, mnemonic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreImportParam, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreImportParam, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreImportParam, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreImportParam, passwordhint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreImportParam, overwrite_),
  };
  HdStoreImportParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HdStoreImportParam_descriptor_,
      HdStoreImportParam::internal_default_instance(),
      HdStoreImportParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(HdStoreImportParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreImportParam, _internal_metadata_));
  HdStoreDeriveParam_descriptor_ = file->message_type(6);
  static const int HdStoreDeriveParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam, derivations_),
  };
  HdStoreDeriveParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HdStoreDeriveParam_descriptor_,
      HdStoreDeriveParam::internal_default_instance(),
      HdStoreDeriveParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(HdStoreDeriveParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam, _internal_metadata_));
  HdStoreDeriveParam_Derivation_descriptor_ = HdStoreDeriveParam_descriptor_->nested_type(0);
  static const int HdStoreDeriveParam_Derivation_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam_Derivation, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam_Derivation, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam_Derivation, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam_Derivation, segwit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam_Derivation, chainid_),
  };
  HdStoreDeriveParam_Derivation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HdStoreDeriveParam_Derivation_descriptor_,
      HdStoreDeriveParam_Derivation::internal_default_instance(),
      HdStoreDeriveParam_Derivation_offsets_,
      -1,
      -1,
      -1,
      sizeof(HdStoreDeriveParam_Derivation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreDeriveParam_Derivation, _internal_metadata_));
  AccountResponse_descriptor_ = file->message_type(7);
  static const int AccountResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountResponse, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountResponse, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountResponse, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountResponse, extendedxpubkey_),
  };
  AccountResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountResponse_descriptor_,
      AccountResponse::internal_default_instance(),
      AccountResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountResponse, _internal_metadata_));
  AccountsResponse_descriptor_ = file->message_type(8);
  static const int AccountsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountsResponse, accounts_),
  };
  AccountsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountsResponse_descriptor_,
      AccountsResponse::internal_default_instance(),
      AccountsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountsResponse, _internal_metadata_));
  AddressResponse_descriptor_ = file->message_type(9);
  static const int AddressResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressResponse, address_),
  };
  AddressResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddressResponse_descriptor_,
      AddressResponse::internal_default_instance(),
      AddressResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddressResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressResponse, _internal_metadata_));
  AddressParam_descriptor_ = file->message_type(10);
  static const int AddressParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressParam, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressParam, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressParam, network_),
  };
  AddressParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddressParam_descriptor_,
      AddressParam::internal_default_instance(),
      AddressParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddressParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressParam, _internal_metadata_));
  KeystoreCommonExportResult_descriptor_ = file->message_type(11);
  static const int KeystoreCommonExportResult_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExportResult, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExportResult, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExportResult, value_),
  };
  KeystoreCommonExportResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeystoreCommonExportResult_descriptor_,
      KeystoreCommonExportResult::internal_default_instance(),
      KeystoreCommonExportResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(KeystoreCommonExportResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExportResult, _internal_metadata_));
  PrivateKeyStoreImportParam_descriptor_ = file->message_type(12);
  static const int PrivateKeyStoreImportParam_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreImportParam, privatekey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreImportParam, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreImportParam, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreImportParam, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreImportParam, segwit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreImportParam, overwrite_),
  };
  PrivateKeyStoreImportParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrivateKeyStoreImportParam_descriptor_,
      PrivateKeyStoreImportParam::internal_default_instance(),
      PrivateKeyStoreImportParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(PrivateKeyStoreImportParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreImportParam, _internal_metadata_));
  PrivateKeyStoreExportParam_descriptor_ = file->message_type(13);
  static const int PrivateKeyStoreExportParam_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreExportParam, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreExportParam, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreExportParam, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreExportParam, network_),
  };
  PrivateKeyStoreExportParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrivateKeyStoreExportParam_descriptor_,
      PrivateKeyStoreExportParam::internal_default_instance(),
      PrivateKeyStoreExportParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(PrivateKeyStoreExportParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateKeyStoreExportParam, _internal_metadata_));
  WalletKeyParam_descriptor_ = file->message_type(14);
  static const int WalletKeyParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletKeyParam, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletKeyParam, password_),
  };
  WalletKeyParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WalletKeyParam_descriptor_,
      WalletKeyParam::internal_default_instance(),
      WalletKeyParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(WalletKeyParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WalletKeyParam, _internal_metadata_));
  KeystoreCommonExistsParam_descriptor_ = file->message_type(15);
  static const int KeystoreCommonExistsParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExistsParam, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExistsParam, value_),
  };
  KeystoreCommonExistsParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeystoreCommonExistsParam_descriptor_,
      KeystoreCommonExistsParam::internal_default_instance(),
      KeystoreCommonExistsParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(KeystoreCommonExistsParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExistsParam, _internal_metadata_));
  KeystoreCommonExistsResult_descriptor_ = file->message_type(16);
  static const int KeystoreCommonExistsResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExistsResult, isexists_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExistsResult, id_),
  };
  KeystoreCommonExistsResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeystoreCommonExistsResult_descriptor_,
      KeystoreCommonExistsResult::internal_default_instance(),
      KeystoreCommonExistsResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(KeystoreCommonExistsResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonExistsResult, _internal_metadata_));
  KeystoreCommonAccountsParam_descriptor_ = file->message_type(17);
  static const int KeystoreCommonAccountsParam_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonAccountsParam, id_),
  };
  KeystoreCommonAccountsParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeystoreCommonAccountsParam_descriptor_,
      KeystoreCommonAccountsParam::internal_default_instance(),
      KeystoreCommonAccountsParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(KeystoreCommonAccountsParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystoreCommonAccountsParam, _internal_metadata_));
  SignParam_descriptor_ = file->message_type(18);
  static const int SignParam_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, input_),
  };
  SignParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SignParam_descriptor_,
      SignParam::internal_default_instance(),
      SignParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(SignParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignParam, _internal_metadata_));
  ExternalAddressParam_descriptor_ = file->message_type(19);
  static const int ExternalAddressParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressParam, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressParam, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressParam, externalidx_),
  };
  ExternalAddressParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExternalAddressParam_descriptor_,
      ExternalAddressParam::internal_default_instance(),
      ExternalAddressParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExternalAddressParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressParam, _internal_metadata_));
  ExternalAddressResult_descriptor_ = file->message_type(20);
  static const int ExternalAddressResult_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressResult, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressResult, derivedpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressResult, type_),
  };
  ExternalAddressResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExternalAddressResult_descriptor_,
      ExternalAddressResult::internal_default_instance(),
      ExternalAddressResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExternalAddressResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressResult, _internal_metadata_));
  ExternalAddressExtra_descriptor_ = file->message_type(21);
  static const int ExternalAddressExtra_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressExtra, encxpub_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressExtra, externaladdress_),
  };
  ExternalAddressExtra_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExternalAddressExtra_descriptor_,
      ExternalAddressExtra::internal_default_instance(),
      ExternalAddressExtra_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExternalAddressExtra),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressExtra, _internal_metadata_));
  ExternalAddressExtra_ExternalAddress_descriptor_ = ExternalAddressExtra_descriptor_->nested_type(0);
  static const int ExternalAddressExtra_ExternalAddress_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressExtra_ExternalAddress, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressExtra_ExternalAddress, derivedpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressExtra_ExternalAddress, type_),
  };
  ExternalAddressExtra_ExternalAddress_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExternalAddressExtra_ExternalAddress_descriptor_,
      ExternalAddressExtra_ExternalAddress::internal_default_instance(),
      ExternalAddressExtra_ExternalAddress_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExternalAddressExtra_ExternalAddress),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternalAddressExtra_ExternalAddress, _internal_metadata_));
  BtcForkDeriveExtraParam_descriptor_ = file->message_type(22);
  static const int BtcForkDeriveExtraParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcForkDeriveExtraParam, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcForkDeriveExtraParam, segwit_),
  };
  BtcForkDeriveExtraParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BtcForkDeriveExtraParam_descriptor_,
      BtcForkDeriveExtraParam::internal_default_instance(),
      BtcForkDeriveExtraParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(BtcForkDeriveExtraParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcForkDeriveExtraParam, _internal_metadata_));
  HdStoreExtendedPublicKeyParam_descriptor_ = file->message_type(23);
  static const int HdStoreExtendedPublicKeyParam_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreExtendedPublicKeyParam, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreExtendedPublicKeyParam, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreExtendedPublicKeyParam, chaintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreExtendedPublicKeyParam, address_),
  };
  HdStoreExtendedPublicKeyParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HdStoreExtendedPublicKeyParam_descriptor_,
      HdStoreExtendedPublicKeyParam::internal_default_instance(),
      HdStoreExtendedPublicKeyParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(HdStoreExtendedPublicKeyParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreExtendedPublicKeyParam, _internal_metadata_));
  HdStoreExtendedPublicKeyResponse_descriptor_ = file->message_type(24);
  static const int HdStoreExtendedPublicKeyResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreExtendedPublicKeyResponse, extendedpublickey_),
  };
  HdStoreExtendedPublicKeyResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HdStoreExtendedPublicKeyResponse_descriptor_,
      HdStoreExtendedPublicKeyResponse::internal_default_instance(),
      HdStoreExtendedPublicKeyResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(HdStoreExtendedPublicKeyResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdStoreExtendedPublicKeyResponse, _internal_metadata_));
  DeviceParam_descriptor_ = file->message_type(25);
  static const int DeviceParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceParam, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceParam, param_),
  };
  DeviceParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeviceParam_descriptor_,
      DeviceParam::internal_default_instance(),
      DeviceParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeviceParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceParam, _internal_metadata_));
  KeyType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TcxAction_descriptor_, TcxAction::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_descriptor_, Response::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InitTokenCoreXParam_descriptor_, InitTokenCoreXParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HdStoreCreateParam_descriptor_, HdStoreCreateParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WalletResult_descriptor_, WalletResult::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HdStoreImportParam_descriptor_, HdStoreImportParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HdStoreDeriveParam_descriptor_, HdStoreDeriveParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HdStoreDeriveParam_Derivation_descriptor_, HdStoreDeriveParam_Derivation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountResponse_descriptor_, AccountResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountsResponse_descriptor_, AccountsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddressResponse_descriptor_, AddressResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddressParam_descriptor_, AddressParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeystoreCommonExportResult_descriptor_, KeystoreCommonExportResult::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrivateKeyStoreImportParam_descriptor_, PrivateKeyStoreImportParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrivateKeyStoreExportParam_descriptor_, PrivateKeyStoreExportParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WalletKeyParam_descriptor_, WalletKeyParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeystoreCommonExistsParam_descriptor_, KeystoreCommonExistsParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeystoreCommonExistsResult_descriptor_, KeystoreCommonExistsResult::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeystoreCommonAccountsParam_descriptor_, KeystoreCommonAccountsParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SignParam_descriptor_, SignParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExternalAddressParam_descriptor_, ExternalAddressParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExternalAddressResult_descriptor_, ExternalAddressResult::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExternalAddressExtra_descriptor_, ExternalAddressExtra::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExternalAddressExtra_ExternalAddress_descriptor_, ExternalAddressExtra_ExternalAddress::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BtcForkDeriveExtraParam_descriptor_, BtcForkDeriveExtraParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HdStoreExtendedPublicKeyParam_descriptor_, HdStoreExtendedPublicKeyParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HdStoreExtendedPublicKeyResponse_descriptor_, HdStoreExtendedPublicKeyResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeviceParam_descriptor_, DeviceParam::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_api_2eproto() {
  TcxAction_default_instance_.Shutdown();
  delete TcxAction_reflection_;
  Response_default_instance_.Shutdown();
  delete Response_reflection_;
  InitTokenCoreXParam_default_instance_.Shutdown();
  delete InitTokenCoreXParam_reflection_;
  HdStoreCreateParam_default_instance_.Shutdown();
  delete HdStoreCreateParam_reflection_;
  WalletResult_default_instance_.Shutdown();
  delete WalletResult_reflection_;
  HdStoreImportParam_default_instance_.Shutdown();
  delete HdStoreImportParam_reflection_;
  HdStoreDeriveParam_default_instance_.Shutdown();
  delete HdStoreDeriveParam_reflection_;
  HdStoreDeriveParam_Derivation_default_instance_.Shutdown();
  delete HdStoreDeriveParam_Derivation_reflection_;
  AccountResponse_default_instance_.Shutdown();
  delete AccountResponse_reflection_;
  AccountsResponse_default_instance_.Shutdown();
  delete AccountsResponse_reflection_;
  AddressResponse_default_instance_.Shutdown();
  delete AddressResponse_reflection_;
  AddressParam_default_instance_.Shutdown();
  delete AddressParam_reflection_;
  KeystoreCommonExportResult_default_instance_.Shutdown();
  delete KeystoreCommonExportResult_reflection_;
  PrivateKeyStoreImportParam_default_instance_.Shutdown();
  delete PrivateKeyStoreImportParam_reflection_;
  PrivateKeyStoreExportParam_default_instance_.Shutdown();
  delete PrivateKeyStoreExportParam_reflection_;
  WalletKeyParam_default_instance_.Shutdown();
  delete WalletKeyParam_reflection_;
  KeystoreCommonExistsParam_default_instance_.Shutdown();
  delete KeystoreCommonExistsParam_reflection_;
  KeystoreCommonExistsResult_default_instance_.Shutdown();
  delete KeystoreCommonExistsResult_reflection_;
  KeystoreCommonAccountsParam_default_instance_.Shutdown();
  delete KeystoreCommonAccountsParam_reflection_;
  SignParam_default_instance_.Shutdown();
  delete SignParam_reflection_;
  ExternalAddressParam_default_instance_.Shutdown();
  delete ExternalAddressParam_reflection_;
  ExternalAddressResult_default_instance_.Shutdown();
  delete ExternalAddressResult_reflection_;
  ExternalAddressExtra_default_instance_.Shutdown();
  delete ExternalAddressExtra_reflection_;
  ExternalAddressExtra_ExternalAddress_default_instance_.Shutdown();
  delete ExternalAddressExtra_ExternalAddress_reflection_;
  BtcForkDeriveExtraParam_default_instance_.Shutdown();
  delete BtcForkDeriveExtraParam_reflection_;
  HdStoreExtendedPublicKeyParam_default_instance_.Shutdown();
  delete HdStoreExtendedPublicKeyParam_reflection_;
  HdStoreExtendedPublicKeyResponse_default_instance_.Shutdown();
  delete HdStoreExtendedPublicKeyResponse_reflection_;
  DeviceParam_default_instance_.Shutdown();
  delete DeviceParam_reflection_;
}

void protobuf_InitDefaults_api_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  TcxAction_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Response_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InitTokenCoreXParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HdStoreCreateParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WalletResult_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HdStoreImportParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HdStoreDeriveParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HdStoreDeriveParam_Derivation_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AccountResponse_default_instance_.DefaultConstruct();
  AccountsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AddressResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AddressParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  KeystoreCommonExportResult_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PrivateKeyStoreImportParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PrivateKeyStoreExportParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WalletKeyParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  KeystoreCommonExistsParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  KeystoreCommonExistsResult_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  KeystoreCommonAccountsParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SignParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ExternalAddressParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ExternalAddressResult_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ExternalAddressExtra_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ExternalAddressExtra_ExternalAddress_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BtcForkDeriveExtraParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HdStoreExtendedPublicKeyParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HdStoreExtendedPublicKeyResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeviceParam_default_instance_.DefaultConstruct();
  TcxAction_default_instance_.get_mutable()->InitAsDefaultInstance();
  Response_default_instance_.get_mutable()->InitAsDefaultInstance();
  InitTokenCoreXParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  HdStoreCreateParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  WalletResult_default_instance_.get_mutable()->InitAsDefaultInstance();
  HdStoreImportParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  HdStoreDeriveParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  HdStoreDeriveParam_Derivation_default_instance_.get_mutable()->InitAsDefaultInstance();
  AccountResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AccountsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AddressResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AddressParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  KeystoreCommonExportResult_default_instance_.get_mutable()->InitAsDefaultInstance();
  PrivateKeyStoreImportParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  PrivateKeyStoreExportParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  WalletKeyParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  KeystoreCommonExistsParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  KeystoreCommonExistsResult_default_instance_.get_mutable()->InitAsDefaultInstance();
  KeystoreCommonAccountsParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  SignParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  ExternalAddressParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  ExternalAddressResult_default_instance_.get_mutable()->InitAsDefaultInstance();
  ExternalAddressExtra_default_instance_.get_mutable()->InitAsDefaultInstance();
  ExternalAddressExtra_ExternalAddress_default_instance_.get_mutable()->InitAsDefaultInstance();
  BtcForkDeriveExtraParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  HdStoreExtendedPublicKeyParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  HdStoreExtendedPublicKeyResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeviceParam_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_api_2eproto_once_);
void protobuf_InitDefaults_api_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_api_2eproto_once_,
                 &protobuf_InitDefaults_api_2eproto_impl);
}
void protobuf_AddDesc_api_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_api_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tapi.proto\022\003api\032\031google/protobuf/any.pr"
    "oto\"@\n\tTcxAction\022\016\n\006method\030\001 \001(\t\022#\n\005para"
    "m\030\002 \001(\0132\024.google.protobuf.Any\",\n\010Respons"
    "e\022\021\n\tisSuccess\030\001 \001(\010\022\r\n\005error\030\002 \001(\t\"S\n\023I"
    "nitTokenCoreXParam\022\017\n\007fileDir\030\001 \001(\t\022\025\n\rx"
    "pubCommonKey\030\002 \001(\t\022\024\n\014xpubCommonIv\030\003 \001(\t"
    "\"J\n\022HdStoreCreateParam\022\020\n\010password\030\001 \001(\t"
    "\022\024\n\014passwordHint\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\"s\n\014"
    "WalletResult\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016"
    "\n\006source\030\003 \001(\t\022&\n\010accounts\030\004 \003(\0132\024.api.A"
    "ccountResponse\022\021\n\tcreatedAt\030\005 \001(\003\"\177\n\022HdS"
    "toreImportParam\022\020\n\010mnemonic\030\001 \001(\t\022\020\n\010pas"
    "sword\030\002 \001(\t\022\016\n\006source\030\003 \001(\t\022\014\n\004name\030\004 \001("
    "\t\022\024\n\014passwordHint\030\005 \001(\t\022\021\n\toverwrite\030\006 \001"
    "(\010\"\314\001\n\022HdStoreDeriveParam\022\n\n\002id\030\001 \001(\t\022\020\n"
    "\010password\030\002 \001(\t\0227\n\013derivations\030\003 \003(\0132\".a"
    "pi.HdStoreDeriveParam.Derivation\032_\n\nDeri"
    "vation\022\021\n\tchainType\030\001 \001(\t\022\014\n\004path\030\002 \001(\t\022"
    "\017\n\007network\030\003 \001(\t\022\016\n\006segWit\030\004 \001(\t\022\017\n\007chai"
    "nId\030\005 \001(\t\"\\\n\017AccountResponse\022\021\n\tchainTyp"
    "e\030\001 \001(\t\022\017\n\007address\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\027"
    "\n\017extendedXpubKey\030\004 \001(\t\":\n\020AccountsRespo"
    "nse\022&\n\010accounts\030\001 \003(\0132\024.api.AccountRespo"
    "nse\"\"\n\017AddressResponse\022\017\n\007address\030\001 \001(\t\""
    "@\n\014AddressParam\022\021\n\tchainType\030\001 \001(\t\022\014\n\004pa"
    "th\030\002 \001(\t\022\017\n\007network\030\003 \001(\t\"S\n\032KeystoreCom"
    "monExportResult\022\n\n\002id\030\001 \001(\t\022\032\n\004type\030\002 \001("
    "\0162\014.api.KeyType\022\r\n\005value\030\003 \001(\t\"\211\001\n\032Priva"
    "teKeyStoreImportParam\022\022\n\nprivateKey\030\001 \001("
    "\t\022\020\n\010password\030\002 \001(\t\022\021\n\tchainType\030\003 \001(\t\022\017"
    "\n\007network\030\004 \001(\t\022\016\n\006segWit\030\005 \001(\t\022\021\n\toverw"
    "rite\030\n \001(\010\"^\n\032PrivateKeyStoreExportParam"
    "\022\n\n\002id\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\021\n\tchainT"
    "ype\030\003 \001(\t\022\017\n\007network\030\004 \001(\t\".\n\016WalletKeyP"
    "aram\022\n\n\002id\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"F\n\031Ke"
    "ystoreCommonExistsParam\022\032\n\004type\030\001 \001(\0162\014."
    "api.KeyType\022\r\n\005value\030\002 \001(\t\":\n\032KeystoreCo"
    "mmonExistsResult\022\020\n\010isExists\030\001 \001(\010\022\n\n\002id"
    "\030\002 \001(\t\")\n\033KeystoreCommonAccountsParam\022\n\n"
    "\002id\030\001 \001(\t\"r\n\tSignParam\022\n\n\002id\030\001 \001(\t\022\020\n\010pa"
    "ssword\030\002 \001(\t\022\021\n\tchainType\030\003 \001(\t\022\017\n\007addre"
    "ss\030\004 \001(\t\022#\n\005input\030\005 \001(\0132\024.google.protobu"
    "f.Any\"J\n\024ExternalAddressParam\022\n\n\002id\030\001 \001("
    "\t\022\021\n\tchainType\030\002 \001(\t\022\023\n\013externalIdx\030\003 \001("
    "\r\"K\n\025ExternalAddressResult\022\017\n\007address\030\001 "
    "\001(\t\022\023\n\013derivedPath\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\"\262"
    "\001\n\024ExternalAddressExtra\022\017\n\007encXpub\030\001 \001(\t"
    "\022B\n\017externalAddress\030\002 \001(\0132).api.External"
    "AddressExtra.ExternalAddress\032E\n\017External"
    "Address\022\017\n\007address\030\001 \001(\t\022\023\n\013derivedPath\030"
    "\002 \001(\t\022\014\n\004type\030\003 \001(\t\":\n\027BtcForkDeriveExtr"
    "aParam\022\017\n\007network\030\001 \001(\t\022\016\n\006segWit\030\002 \001(\t\""
    "a\n\035HdStoreExtendedPublicKeyParam\022\n\n\002id\030\001"
    " \001(\t\022\020\n\010password\030\002 \001(\t\022\021\n\tchainType\030\003 \001("
    "\t\022\017\n\007address\030\004 \001(\t\"=\n HdStoreExtendedPub"
    "licKeyResponse\022\031\n\021extendedPublicKey\030\001 \001("
    "\t\"B\n\013DeviceParam\022\016\n\006action\030\001 \001(\t\022#\n\005para"
    "m\030\002 \001(\0132\024.google.protobuf.Any*(\n\007KeyType"
    "\022\014\n\010MNEMONIC\020\000\022\017\n\013PRIVATE_KEY\020\001b\006proto3", 2359);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_api_2eproto_once_);
void protobuf_AddDesc_api_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_api_2eproto_once_,
                 &protobuf_AddDesc_api_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2eproto {
  StaticDescriptorInitializer_api_2eproto() {
    protobuf_AddDesc_api_2eproto();
  }
} static_descriptor_initializer_api_2eproto_;
const ::google::protobuf::EnumDescriptor* KeyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyType_descriptor_;
}
bool KeyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TcxAction::kMethodFieldNumber;
const int TcxAction::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TcxAction::TcxAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.TcxAction)
}

void TcxAction::InitAsDefaultInstance() {
  param_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

TcxAction::TcxAction(const TcxAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.TcxAction)
}

void TcxAction::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_ = NULL;
  _cached_size_ = 0;
}

TcxAction::~TcxAction() {
  // @@protoc_insertion_point(destructor:api.TcxAction)
  SharedDtor();
}

void TcxAction::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TcxAction_default_instance_.get()) {
    delete param_;
  }
}

void TcxAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TcxAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TcxAction_descriptor_;
}

const TcxAction& TcxAction::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TcxAction> TcxAction_default_instance_;

TcxAction* TcxAction::New(::google::protobuf::Arena* arena) const {
  TcxAction* n = new TcxAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TcxAction::Clear() {
// @@protoc_insertion_point(message_clear_start:api.TcxAction)
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && param_ != NULL) delete param_;
  param_ = NULL;
}

bool TcxAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.TcxAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.TcxAction.method"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_param;
        break;
      }

      // optional .google.protobuf.Any param = 2;
      case 2: {
        if (tag == 18) {
         parse_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.TcxAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.TcxAction)
  return false;
#undef DO_
}

void TcxAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.TcxAction)
  // optional string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.TcxAction.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // optional .google.protobuf.Any param = 2;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->param_, output);
  }

  // @@protoc_insertion_point(serialize_end:api.TcxAction)
}

::google::protobuf::uint8* TcxAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.TcxAction)
  // optional string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.TcxAction.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // optional .google.protobuf.Any param = 2;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->param_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.TcxAction)
  return target;
}

size_t TcxAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.TcxAction)
  size_t total_size = 0;

  // optional string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // optional .google.protobuf.Any param = 2;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TcxAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.TcxAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TcxAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TcxAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.TcxAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.TcxAction)
    UnsafeMergeFrom(*source);
  }
}

void TcxAction::MergeFrom(const TcxAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.TcxAction)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TcxAction::UnsafeMergeFrom(const TcxAction& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_param()) {
    mutable_param()->::google::protobuf::Any::MergeFrom(from.param());
  }
}

void TcxAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.TcxAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TcxAction::CopyFrom(const TcxAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.TcxAction)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TcxAction::IsInitialized() const {

  return true;
}

void TcxAction::Swap(TcxAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TcxAction::InternalSwap(TcxAction* other) {
  method_.Swap(&other->method_);
  std::swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TcxAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TcxAction_descriptor_;
  metadata.reflection = TcxAction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TcxAction

// optional string method = 1;
void TcxAction::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TcxAction::method() const {
  // @@protoc_insertion_point(field_get:api.TcxAction.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TcxAction::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.TcxAction.method)
}
void TcxAction::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.TcxAction.method)
}
void TcxAction::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.TcxAction.method)
}
::std::string* TcxAction::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:api.TcxAction.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TcxAction::release_method() {
  // @@protoc_insertion_point(field_release:api.TcxAction.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TcxAction::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:api.TcxAction.method)
}

// optional .google.protobuf.Any param = 2;
bool TcxAction::has_param() const {
  return this != internal_default_instance() && param_ != NULL;
}
void TcxAction::clear_param() {
  if (GetArenaNoVirtual() == NULL && param_ != NULL) delete param_;
  param_ = NULL;
}
const ::google::protobuf::Any& TcxAction::param() const {
  // @@protoc_insertion_point(field_get:api.TcxAction.param)
  return param_ != NULL ? *param_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* TcxAction::mutable_param() {
  
  if (param_ == NULL) {
    param_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:api.TcxAction.param)
  return param_;
}
::google::protobuf::Any* TcxAction::release_param() {
  // @@protoc_insertion_point(field_release:api.TcxAction.param)
  
  ::google::protobuf::Any* temp = param_;
  param_ = NULL;
  return temp;
}
void TcxAction::set_allocated_param(::google::protobuf::Any* param) {
  delete param_;
  param_ = param;
  if (param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:api.TcxAction.param)
}

inline const TcxAction* TcxAction::internal_default_instance() {
  return &TcxAction_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kIsSuccessFieldNumber;
const int Response::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Response)
}

void Response::InitAsDefaultInstance() {
}

Response::Response(const Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.Response)
}

void Response::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuccess_ = false;
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:api.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Response)
  issuccess_ = false;
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool isSuccess = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional string error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Response.error"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Response)
  // optional bool isSuccess = 1;
  if (this->issuccess() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Response.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Response)
  // optional bool isSuccess = 1;
  if (this->issuccess() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Response.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Response)
  size_t total_size = 0;

  // optional bool isSuccess = 1;
  if (this->issuccess() != 0) {
    total_size += 1 + 1;
  }

  // optional string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Response)
    UnsafeMergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Response)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Response::UnsafeMergeFrom(const Response& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.issuccess() != 0) {
    set_issuccess(from.issuccess());
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Response)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Response::IsInitialized() const {

  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  std::swap(issuccess_, other->issuccess_);
  error_.Swap(&other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// optional bool isSuccess = 1;
void Response::clear_issuccess() {
  issuccess_ = false;
}
bool Response::issuccess() const {
  // @@protoc_insertion_point(field_get:api.Response.isSuccess)
  return issuccess_;
}
void Response::set_issuccess(bool value) {
  
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:api.Response.isSuccess)
}

// optional string error = 2;
void Response::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Response::error() const {
  // @@protoc_insertion_point(field_get:api.Response.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.Response.error)
}
void Response::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.Response.error)
}
void Response::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.Response.error)
}
::std::string* Response::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:api.Response.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Response::release_error() {
  // @@protoc_insertion_point(field_release:api.Response.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:api.Response.error)
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitTokenCoreXParam::kFileDirFieldNumber;
const int InitTokenCoreXParam::kXpubCommonKeyFieldNumber;
const int InitTokenCoreXParam::kXpubCommonIvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitTokenCoreXParam::InitTokenCoreXParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.InitTokenCoreXParam)
}

void InitTokenCoreXParam::InitAsDefaultInstance() {
}

InitTokenCoreXParam::InitTokenCoreXParam(const InitTokenCoreXParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.InitTokenCoreXParam)
}

void InitTokenCoreXParam::SharedCtor() {
  filedir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xpubcommonkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xpubcommoniv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InitTokenCoreXParam::~InitTokenCoreXParam() {
  // @@protoc_insertion_point(destructor:api.InitTokenCoreXParam)
  SharedDtor();
}

void InitTokenCoreXParam::SharedDtor() {
  filedir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xpubcommonkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xpubcommoniv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitTokenCoreXParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitTokenCoreXParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InitTokenCoreXParam_descriptor_;
}

const InitTokenCoreXParam& InitTokenCoreXParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InitTokenCoreXParam> InitTokenCoreXParam_default_instance_;

InitTokenCoreXParam* InitTokenCoreXParam::New(::google::protobuf::Arena* arena) const {
  InitTokenCoreXParam* n = new InitTokenCoreXParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitTokenCoreXParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.InitTokenCoreXParam)
  filedir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xpubcommonkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xpubcommoniv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InitTokenCoreXParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.InitTokenCoreXParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fileDir = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filedir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filedir().data(), this->filedir().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.InitTokenCoreXParam.fileDir"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_xpubCommonKey;
        break;
      }

      // optional string xpubCommonKey = 2;
      case 2: {
        if (tag == 18) {
         parse_xpubCommonKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xpubcommonkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xpubcommonkey().data(), this->xpubcommonkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.InitTokenCoreXParam.xpubCommonKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_xpubCommonIv;
        break;
      }

      // optional string xpubCommonIv = 3;
      case 3: {
        if (tag == 26) {
         parse_xpubCommonIv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xpubcommoniv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xpubcommoniv().data(), this->xpubcommoniv().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.InitTokenCoreXParam.xpubCommonIv"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.InitTokenCoreXParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.InitTokenCoreXParam)
  return false;
#undef DO_
}

void InitTokenCoreXParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.InitTokenCoreXParam)
  // optional string fileDir = 1;
  if (this->filedir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filedir().data(), this->filedir().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitTokenCoreXParam.fileDir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filedir(), output);
  }

  // optional string xpubCommonKey = 2;
  if (this->xpubcommonkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xpubcommonkey().data(), this->xpubcommonkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitTokenCoreXParam.xpubCommonKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->xpubcommonkey(), output);
  }

  // optional string xpubCommonIv = 3;
  if (this->xpubcommoniv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xpubcommoniv().data(), this->xpubcommoniv().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitTokenCoreXParam.xpubCommonIv");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->xpubcommoniv(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.InitTokenCoreXParam)
}

::google::protobuf::uint8* InitTokenCoreXParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.InitTokenCoreXParam)
  // optional string fileDir = 1;
  if (this->filedir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filedir().data(), this->filedir().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitTokenCoreXParam.fileDir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filedir(), target);
  }

  // optional string xpubCommonKey = 2;
  if (this->xpubcommonkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xpubcommonkey().data(), this->xpubcommonkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitTokenCoreXParam.xpubCommonKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->xpubcommonkey(), target);
  }

  // optional string xpubCommonIv = 3;
  if (this->xpubcommoniv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xpubcommoniv().data(), this->xpubcommoniv().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitTokenCoreXParam.xpubCommonIv");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->xpubcommoniv(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.InitTokenCoreXParam)
  return target;
}

size_t InitTokenCoreXParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.InitTokenCoreXParam)
  size_t total_size = 0;

  // optional string fileDir = 1;
  if (this->filedir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filedir());
  }

  // optional string xpubCommonKey = 2;
  if (this->xpubcommonkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xpubcommonkey());
  }

  // optional string xpubCommonIv = 3;
  if (this->xpubcommoniv().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xpubcommoniv());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitTokenCoreXParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.InitTokenCoreXParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InitTokenCoreXParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitTokenCoreXParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.InitTokenCoreXParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.InitTokenCoreXParam)
    UnsafeMergeFrom(*source);
  }
}

void InitTokenCoreXParam::MergeFrom(const InitTokenCoreXParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.InitTokenCoreXParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InitTokenCoreXParam::UnsafeMergeFrom(const InitTokenCoreXParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.filedir().size() > 0) {

    filedir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filedir_);
  }
  if (from.xpubcommonkey().size() > 0) {

    xpubcommonkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xpubcommonkey_);
  }
  if (from.xpubcommoniv().size() > 0) {

    xpubcommoniv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xpubcommoniv_);
  }
}

void InitTokenCoreXParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.InitTokenCoreXParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitTokenCoreXParam::CopyFrom(const InitTokenCoreXParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.InitTokenCoreXParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InitTokenCoreXParam::IsInitialized() const {

  return true;
}

void InitTokenCoreXParam::Swap(InitTokenCoreXParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitTokenCoreXParam::InternalSwap(InitTokenCoreXParam* other) {
  filedir_.Swap(&other->filedir_);
  xpubcommonkey_.Swap(&other->xpubcommonkey_);
  xpubcommoniv_.Swap(&other->xpubcommoniv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitTokenCoreXParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InitTokenCoreXParam_descriptor_;
  metadata.reflection = InitTokenCoreXParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitTokenCoreXParam

// optional string fileDir = 1;
void InitTokenCoreXParam::clear_filedir() {
  filedir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InitTokenCoreXParam::filedir() const {
  // @@protoc_insertion_point(field_get:api.InitTokenCoreXParam.fileDir)
  return filedir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitTokenCoreXParam::set_filedir(const ::std::string& value) {
  
  filedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.InitTokenCoreXParam.fileDir)
}
void InitTokenCoreXParam::set_filedir(const char* value) {
  
  filedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.InitTokenCoreXParam.fileDir)
}
void InitTokenCoreXParam::set_filedir(const char* value, size_t size) {
  
  filedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.InitTokenCoreXParam.fileDir)
}
::std::string* InitTokenCoreXParam::mutable_filedir() {
  
  // @@protoc_insertion_point(field_mutable:api.InitTokenCoreXParam.fileDir)
  return filedir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitTokenCoreXParam::release_filedir() {
  // @@protoc_insertion_point(field_release:api.InitTokenCoreXParam.fileDir)
  
  return filedir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitTokenCoreXParam::set_allocated_filedir(::std::string* filedir) {
  if (filedir != NULL) {
    
  } else {
    
  }
  filedir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filedir);
  // @@protoc_insertion_point(field_set_allocated:api.InitTokenCoreXParam.fileDir)
}

// optional string xpubCommonKey = 2;
void InitTokenCoreXParam::clear_xpubcommonkey() {
  xpubcommonkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InitTokenCoreXParam::xpubcommonkey() const {
  // @@protoc_insertion_point(field_get:api.InitTokenCoreXParam.xpubCommonKey)
  return xpubcommonkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitTokenCoreXParam::set_xpubcommonkey(const ::std::string& value) {
  
  xpubcommonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.InitTokenCoreXParam.xpubCommonKey)
}
void InitTokenCoreXParam::set_xpubcommonkey(const char* value) {
  
  xpubcommonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.InitTokenCoreXParam.xpubCommonKey)
}
void InitTokenCoreXParam::set_xpubcommonkey(const char* value, size_t size) {
  
  xpubcommonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.InitTokenCoreXParam.xpubCommonKey)
}
::std::string* InitTokenCoreXParam::mutable_xpubcommonkey() {
  
  // @@protoc_insertion_point(field_mutable:api.InitTokenCoreXParam.xpubCommonKey)
  return xpubcommonkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitTokenCoreXParam::release_xpubcommonkey() {
  // @@protoc_insertion_point(field_release:api.InitTokenCoreXParam.xpubCommonKey)
  
  return xpubcommonkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitTokenCoreXParam::set_allocated_xpubcommonkey(::std::string* xpubcommonkey) {
  if (xpubcommonkey != NULL) {
    
  } else {
    
  }
  xpubcommonkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xpubcommonkey);
  // @@protoc_insertion_point(field_set_allocated:api.InitTokenCoreXParam.xpubCommonKey)
}

// optional string xpubCommonIv = 3;
void InitTokenCoreXParam::clear_xpubcommoniv() {
  xpubcommoniv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InitTokenCoreXParam::xpubcommoniv() const {
  // @@protoc_insertion_point(field_get:api.InitTokenCoreXParam.xpubCommonIv)
  return xpubcommoniv_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitTokenCoreXParam::set_xpubcommoniv(const ::std::string& value) {
  
  xpubcommoniv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.InitTokenCoreXParam.xpubCommonIv)
}
void InitTokenCoreXParam::set_xpubcommoniv(const char* value) {
  
  xpubcommoniv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.InitTokenCoreXParam.xpubCommonIv)
}
void InitTokenCoreXParam::set_xpubcommoniv(const char* value, size_t size) {
  
  xpubcommoniv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.InitTokenCoreXParam.xpubCommonIv)
}
::std::string* InitTokenCoreXParam::mutable_xpubcommoniv() {
  
  // @@protoc_insertion_point(field_mutable:api.InitTokenCoreXParam.xpubCommonIv)
  return xpubcommoniv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitTokenCoreXParam::release_xpubcommoniv() {
  // @@protoc_insertion_point(field_release:api.InitTokenCoreXParam.xpubCommonIv)
  
  return xpubcommoniv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitTokenCoreXParam::set_allocated_xpubcommoniv(::std::string* xpubcommoniv) {
  if (xpubcommoniv != NULL) {
    
  } else {
    
  }
  xpubcommoniv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xpubcommoniv);
  // @@protoc_insertion_point(field_set_allocated:api.InitTokenCoreXParam.xpubCommonIv)
}

inline const InitTokenCoreXParam* InitTokenCoreXParam::internal_default_instance() {
  return &InitTokenCoreXParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HdStoreCreateParam::kPasswordFieldNumber;
const int HdStoreCreateParam::kPasswordHintFieldNumber;
const int HdStoreCreateParam::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HdStoreCreateParam::HdStoreCreateParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.HdStoreCreateParam)
}

void HdStoreCreateParam::InitAsDefaultInstance() {
}

HdStoreCreateParam::HdStoreCreateParam(const HdStoreCreateParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.HdStoreCreateParam)
}

void HdStoreCreateParam::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HdStoreCreateParam::~HdStoreCreateParam() {
  // @@protoc_insertion_point(destructor:api.HdStoreCreateParam)
  SharedDtor();
}

void HdStoreCreateParam::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HdStoreCreateParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HdStoreCreateParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HdStoreCreateParam_descriptor_;
}

const HdStoreCreateParam& HdStoreCreateParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HdStoreCreateParam> HdStoreCreateParam_default_instance_;

HdStoreCreateParam* HdStoreCreateParam::New(::google::protobuf::Arena* arena) const {
  HdStoreCreateParam* n = new HdStoreCreateParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HdStoreCreateParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.HdStoreCreateParam)
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HdStoreCreateParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.HdStoreCreateParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreCreateParam.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_passwordHint;
        break;
      }

      // optional string passwordHint = 2;
      case 2: {
        if (tag == 18) {
         parse_passwordHint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwordhint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwordhint().data(), this->passwordhint().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreCreateParam.passwordHint"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreCreateParam.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.HdStoreCreateParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.HdStoreCreateParam)
  return false;
#undef DO_
}

void HdStoreCreateParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.HdStoreCreateParam)
  // optional string password = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreCreateParam.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string passwordHint = 2;
  if (this->passwordhint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwordhint().data(), this->passwordhint().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreCreateParam.passwordHint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwordhint(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreCreateParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.HdStoreCreateParam)
}

::google::protobuf::uint8* HdStoreCreateParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.HdStoreCreateParam)
  // optional string password = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreCreateParam.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string passwordHint = 2;
  if (this->passwordhint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwordhint().data(), this->passwordhint().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreCreateParam.passwordHint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwordhint(), target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreCreateParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.HdStoreCreateParam)
  return target;
}

size_t HdStoreCreateParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.HdStoreCreateParam)
  size_t total_size = 0;

  // optional string password = 1;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string passwordHint = 2;
  if (this->passwordhint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwordhint());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HdStoreCreateParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.HdStoreCreateParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HdStoreCreateParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HdStoreCreateParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.HdStoreCreateParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.HdStoreCreateParam)
    UnsafeMergeFrom(*source);
  }
}

void HdStoreCreateParam::MergeFrom(const HdStoreCreateParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.HdStoreCreateParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HdStoreCreateParam::UnsafeMergeFrom(const HdStoreCreateParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.passwordhint().size() > 0) {

    passwordhint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordhint_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void HdStoreCreateParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.HdStoreCreateParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HdStoreCreateParam::CopyFrom(const HdStoreCreateParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.HdStoreCreateParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HdStoreCreateParam::IsInitialized() const {

  return true;
}

void HdStoreCreateParam::Swap(HdStoreCreateParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HdStoreCreateParam::InternalSwap(HdStoreCreateParam* other) {
  password_.Swap(&other->password_);
  passwordhint_.Swap(&other->passwordhint_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HdStoreCreateParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HdStoreCreateParam_descriptor_;
  metadata.reflection = HdStoreCreateParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HdStoreCreateParam

// optional string password = 1;
void HdStoreCreateParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreCreateParam::password() const {
  // @@protoc_insertion_point(field_get:api.HdStoreCreateParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreCreateParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreCreateParam.password)
}
void HdStoreCreateParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreCreateParam.password)
}
void HdStoreCreateParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreCreateParam.password)
}
::std::string* HdStoreCreateParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreCreateParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreCreateParam::release_password() {
  // @@protoc_insertion_point(field_release:api.HdStoreCreateParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreCreateParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreCreateParam.password)
}

// optional string passwordHint = 2;
void HdStoreCreateParam::clear_passwordhint() {
  passwordhint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreCreateParam::passwordhint() const {
  // @@protoc_insertion_point(field_get:api.HdStoreCreateParam.passwordHint)
  return passwordhint_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreCreateParam::set_passwordhint(const ::std::string& value) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreCreateParam.passwordHint)
}
void HdStoreCreateParam::set_passwordhint(const char* value) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreCreateParam.passwordHint)
}
void HdStoreCreateParam::set_passwordhint(const char* value, size_t size) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreCreateParam.passwordHint)
}
::std::string* HdStoreCreateParam::mutable_passwordhint() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreCreateParam.passwordHint)
  return passwordhint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreCreateParam::release_passwordhint() {
  // @@protoc_insertion_point(field_release:api.HdStoreCreateParam.passwordHint)
  
  return passwordhint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreCreateParam::set_allocated_passwordhint(::std::string* passwordhint) {
  if (passwordhint != NULL) {
    
  } else {
    
  }
  passwordhint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwordhint);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreCreateParam.passwordHint)
}

// optional string name = 3;
void HdStoreCreateParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreCreateParam::name() const {
  // @@protoc_insertion_point(field_get:api.HdStoreCreateParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreCreateParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreCreateParam.name)
}
void HdStoreCreateParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreCreateParam.name)
}
void HdStoreCreateParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreCreateParam.name)
}
::std::string* HdStoreCreateParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreCreateParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreCreateParam::release_name() {
  // @@protoc_insertion_point(field_release:api.HdStoreCreateParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreCreateParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreCreateParam.name)
}

inline const HdStoreCreateParam* HdStoreCreateParam::internal_default_instance() {
  return &HdStoreCreateParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletResult::kIdFieldNumber;
const int WalletResult::kNameFieldNumber;
const int WalletResult::kSourceFieldNumber;
const int WalletResult::kAccountsFieldNumber;
const int WalletResult::kCreatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletResult::WalletResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.WalletResult)
}

void WalletResult::InitAsDefaultInstance() {
}

WalletResult::WalletResult(const WalletResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.WalletResult)
}

void WalletResult::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdat_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

WalletResult::~WalletResult() {
  // @@protoc_insertion_point(destructor:api.WalletResult)
  SharedDtor();
}

void WalletResult::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WalletResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WalletResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WalletResult_descriptor_;
}

const WalletResult& WalletResult::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WalletResult> WalletResult_default_instance_;

WalletResult* WalletResult::New(::google::protobuf::Arena* arena) const {
  WalletResult* n = new WalletResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WalletResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.WalletResult)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdat_ = GOOGLE_LONGLONG(0);
  accounts_.Clear();
}

bool WalletResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.WalletResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.WalletResult.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.WalletResult.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_source;
        break;
      }

      // optional string source = 3;
      case 3: {
        if (tag == 26) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.WalletResult.source"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_accounts;
        break;
      }

      // repeated .api.AccountResponse accounts = 4;
      case 4: {
        if (tag == 34) {
         parse_accounts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_accounts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_accounts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_createdAt;
        break;
      }

      // optional int64 createdAt = 5;
      case 5: {
        if (tag == 40) {
         parse_createdAt:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createdat_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.WalletResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.WalletResult)
  return false;
#undef DO_
}

void WalletResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.WalletResult)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletResult.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletResult.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletResult.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source(), output);
  }

  // repeated .api.AccountResponse accounts = 4;
  for (unsigned int i = 0, n = this->accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->accounts(i), output);
  }

  // optional int64 createdAt = 5;
  if (this->createdat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->createdat(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.WalletResult)
}

::google::protobuf::uint8* WalletResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.WalletResult)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletResult.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletResult.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletResult.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->source(), target);
  }

  // repeated .api.AccountResponse accounts = 4;
  for (unsigned int i = 0, n = this->accounts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->accounts(i), false, target);
  }

  // optional int64 createdAt = 5;
  if (this->createdat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->createdat(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.WalletResult)
  return target;
}

size_t WalletResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.WalletResult)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // optional int64 createdAt = 5;
  if (this->createdat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createdat());
  }

  // repeated .api.AccountResponse accounts = 4;
  {
    unsigned int count = this->accounts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->accounts(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WalletResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.WalletResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WalletResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WalletResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.WalletResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.WalletResult)
    UnsafeMergeFrom(*source);
  }
}

void WalletResult::MergeFrom(const WalletResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.WalletResult)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WalletResult::UnsafeMergeFrom(const WalletResult& from) {
  GOOGLE_DCHECK(&from != this);
  accounts_.MergeFrom(from.accounts_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.createdat() != 0) {
    set_createdat(from.createdat());
  }
}

void WalletResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.WalletResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WalletResult::CopyFrom(const WalletResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.WalletResult)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WalletResult::IsInitialized() const {

  return true;
}

void WalletResult::Swap(WalletResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WalletResult::InternalSwap(WalletResult* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  source_.Swap(&other->source_);
  accounts_.UnsafeArenaSwap(&other->accounts_);
  std::swap(createdat_, other->createdat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WalletResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WalletResult_descriptor_;
  metadata.reflection = WalletResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WalletResult

// optional string id = 1;
void WalletResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WalletResult::id() const {
  // @@protoc_insertion_point(field_get:api.WalletResult.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletResult.id)
}
void WalletResult::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletResult.id)
}
void WalletResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletResult.id)
}
::std::string* WalletResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletResult::release_id() {
  // @@protoc_insertion_point(field_release:api.WalletResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.WalletResult.id)
}

// optional string name = 2;
void WalletResult::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WalletResult::name() const {
  // @@protoc_insertion_point(field_get:api.WalletResult.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletResult::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletResult.name)
}
void WalletResult::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletResult.name)
}
void WalletResult::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletResult.name)
}
::std::string* WalletResult::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletResult.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletResult::release_name() {
  // @@protoc_insertion_point(field_release:api.WalletResult.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletResult::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:api.WalletResult.name)
}

// optional string source = 3;
void WalletResult::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WalletResult::source() const {
  // @@protoc_insertion_point(field_get:api.WalletResult.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletResult::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletResult.source)
}
void WalletResult::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletResult.source)
}
void WalletResult::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletResult.source)
}
::std::string* WalletResult::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletResult.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletResult::release_source() {
  // @@protoc_insertion_point(field_release:api.WalletResult.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletResult::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:api.WalletResult.source)
}

// repeated .api.AccountResponse accounts = 4;
int WalletResult::accounts_size() const {
  return accounts_.size();
}
void WalletResult::clear_accounts() {
  accounts_.Clear();
}
const ::api::AccountResponse& WalletResult::accounts(int index) const {
  // @@protoc_insertion_point(field_get:api.WalletResult.accounts)
  return accounts_.Get(index);
}
::api::AccountResponse* WalletResult::mutable_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:api.WalletResult.accounts)
  return accounts_.Mutable(index);
}
::api::AccountResponse* WalletResult::add_accounts() {
  // @@protoc_insertion_point(field_add:api.WalletResult.accounts)
  return accounts_.Add();
}
::google::protobuf::RepeatedPtrField< ::api::AccountResponse >*
WalletResult::mutable_accounts() {
  // @@protoc_insertion_point(field_mutable_list:api.WalletResult.accounts)
  return &accounts_;
}
const ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >&
WalletResult::accounts() const {
  // @@protoc_insertion_point(field_list:api.WalletResult.accounts)
  return accounts_;
}

// optional int64 createdAt = 5;
void WalletResult::clear_createdat() {
  createdat_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 WalletResult::createdat() const {
  // @@protoc_insertion_point(field_get:api.WalletResult.createdAt)
  return createdat_;
}
void WalletResult::set_createdat(::google::protobuf::int64 value) {
  
  createdat_ = value;
  // @@protoc_insertion_point(field_set:api.WalletResult.createdAt)
}

inline const WalletResult* WalletResult::internal_default_instance() {
  return &WalletResult_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HdStoreImportParam::kMnemonicFieldNumber;
const int HdStoreImportParam::kPasswordFieldNumber;
const int HdStoreImportParam::kSourceFieldNumber;
const int HdStoreImportParam::kNameFieldNumber;
const int HdStoreImportParam::kPasswordHintFieldNumber;
const int HdStoreImportParam::kOverwriteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HdStoreImportParam::HdStoreImportParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.HdStoreImportParam)
}

void HdStoreImportParam::InitAsDefaultInstance() {
}

HdStoreImportParam::HdStoreImportParam(const HdStoreImportParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.HdStoreImportParam)
}

void HdStoreImportParam::SharedCtor() {
  mnemonic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overwrite_ = false;
  _cached_size_ = 0;
}

HdStoreImportParam::~HdStoreImportParam() {
  // @@protoc_insertion_point(destructor:api.HdStoreImportParam)
  SharedDtor();
}

void HdStoreImportParam::SharedDtor() {
  mnemonic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HdStoreImportParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HdStoreImportParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HdStoreImportParam_descriptor_;
}

const HdStoreImportParam& HdStoreImportParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HdStoreImportParam> HdStoreImportParam_default_instance_;

HdStoreImportParam* HdStoreImportParam::New(::google::protobuf::Arena* arena) const {
  HdStoreImportParam* n = new HdStoreImportParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HdStoreImportParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.HdStoreImportParam)
  mnemonic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overwrite_ = false;
}

bool HdStoreImportParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.HdStoreImportParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mnemonic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mnemonic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mnemonic().data(), this->mnemonic().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreImportParam.mnemonic"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreImportParam.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_source;
        break;
      }

      // optional string source = 3;
      case 3: {
        if (tag == 26) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreImportParam.source"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreImportParam.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_passwordHint;
        break;
      }

      // optional string passwordHint = 5;
      case 5: {
        if (tag == 42) {
         parse_passwordHint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwordhint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwordhint().data(), this->passwordhint().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreImportParam.passwordHint"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_overwrite;
        break;
      }

      // optional bool overwrite = 6;
      case 6: {
        if (tag == 48) {
         parse_overwrite:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &overwrite_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.HdStoreImportParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.HdStoreImportParam)
  return false;
#undef DO_
}

void HdStoreImportParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.HdStoreImportParam)
  // optional string mnemonic = 1;
  if (this->mnemonic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mnemonic().data(), this->mnemonic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.mnemonic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mnemonic(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source(), output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional string passwordHint = 5;
  if (this->passwordhint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwordhint().data(), this->passwordhint().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.passwordHint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->passwordhint(), output);
  }

  // optional bool overwrite = 6;
  if (this->overwrite() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->overwrite(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.HdStoreImportParam)
}

::google::protobuf::uint8* HdStoreImportParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.HdStoreImportParam)
  // optional string mnemonic = 1;
  if (this->mnemonic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mnemonic().data(), this->mnemonic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.mnemonic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mnemonic(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->source(), target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional string passwordHint = 5;
  if (this->passwordhint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwordhint().data(), this->passwordhint().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreImportParam.passwordHint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->passwordhint(), target);
  }

  // optional bool overwrite = 6;
  if (this->overwrite() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->overwrite(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.HdStoreImportParam)
  return target;
}

size_t HdStoreImportParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.HdStoreImportParam)
  size_t total_size = 0;

  // optional string mnemonic = 1;
  if (this->mnemonic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mnemonic());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string source = 3;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string passwordHint = 5;
  if (this->passwordhint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwordhint());
  }

  // optional bool overwrite = 6;
  if (this->overwrite() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HdStoreImportParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.HdStoreImportParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HdStoreImportParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HdStoreImportParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.HdStoreImportParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.HdStoreImportParam)
    UnsafeMergeFrom(*source);
  }
}

void HdStoreImportParam::MergeFrom(const HdStoreImportParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.HdStoreImportParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HdStoreImportParam::UnsafeMergeFrom(const HdStoreImportParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mnemonic().size() > 0) {

    mnemonic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mnemonic_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.passwordhint().size() > 0) {

    passwordhint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordhint_);
  }
  if (from.overwrite() != 0) {
    set_overwrite(from.overwrite());
  }
}

void HdStoreImportParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.HdStoreImportParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HdStoreImportParam::CopyFrom(const HdStoreImportParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.HdStoreImportParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HdStoreImportParam::IsInitialized() const {

  return true;
}

void HdStoreImportParam::Swap(HdStoreImportParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HdStoreImportParam::InternalSwap(HdStoreImportParam* other) {
  mnemonic_.Swap(&other->mnemonic_);
  password_.Swap(&other->password_);
  source_.Swap(&other->source_);
  name_.Swap(&other->name_);
  passwordhint_.Swap(&other->passwordhint_);
  std::swap(overwrite_, other->overwrite_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HdStoreImportParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HdStoreImportParam_descriptor_;
  metadata.reflection = HdStoreImportParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HdStoreImportParam

// optional string mnemonic = 1;
void HdStoreImportParam::clear_mnemonic() {
  mnemonic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreImportParam::mnemonic() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.mnemonic)
  return mnemonic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_mnemonic(const ::std::string& value) {
  
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.mnemonic)
}
void HdStoreImportParam::set_mnemonic(const char* value) {
  
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.mnemonic)
}
void HdStoreImportParam::set_mnemonic(const char* value, size_t size) {
  
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.mnemonic)
}
::std::string* HdStoreImportParam::mutable_mnemonic() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.mnemonic)
  return mnemonic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreImportParam::release_mnemonic() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.mnemonic)
  
  return mnemonic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_allocated_mnemonic(::std::string* mnemonic) {
  if (mnemonic != NULL) {
    
  } else {
    
  }
  mnemonic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mnemonic);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.mnemonic)
}

// optional string password = 2;
void HdStoreImportParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreImportParam::password() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.password)
}
void HdStoreImportParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.password)
}
void HdStoreImportParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.password)
}
::std::string* HdStoreImportParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreImportParam::release_password() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.password)
}

// optional string source = 3;
void HdStoreImportParam::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreImportParam::source() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.source)
}
void HdStoreImportParam::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.source)
}
void HdStoreImportParam::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.source)
}
::std::string* HdStoreImportParam::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreImportParam::release_source() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.source)
}

// optional string name = 4;
void HdStoreImportParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreImportParam::name() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.name)
}
void HdStoreImportParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.name)
}
void HdStoreImportParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.name)
}
::std::string* HdStoreImportParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreImportParam::release_name() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.name)
}

// optional string passwordHint = 5;
void HdStoreImportParam::clear_passwordhint() {
  passwordhint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreImportParam::passwordhint() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.passwordHint)
  return passwordhint_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_passwordhint(const ::std::string& value) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.passwordHint)
}
void HdStoreImportParam::set_passwordhint(const char* value) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.passwordHint)
}
void HdStoreImportParam::set_passwordhint(const char* value, size_t size) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.passwordHint)
}
::std::string* HdStoreImportParam::mutable_passwordhint() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.passwordHint)
  return passwordhint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreImportParam::release_passwordhint() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.passwordHint)
  
  return passwordhint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreImportParam::set_allocated_passwordhint(::std::string* passwordhint) {
  if (passwordhint != NULL) {
    
  } else {
    
  }
  passwordhint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwordhint);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.passwordHint)
}

// optional bool overwrite = 6;
void HdStoreImportParam::clear_overwrite() {
  overwrite_ = false;
}
bool HdStoreImportParam::overwrite() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.overwrite)
  return overwrite_;
}
void HdStoreImportParam::set_overwrite(bool value) {
  
  overwrite_ = value;
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.overwrite)
}

inline const HdStoreImportParam* HdStoreImportParam::internal_default_instance() {
  return &HdStoreImportParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HdStoreDeriveParam_Derivation::kChainTypeFieldNumber;
const int HdStoreDeriveParam_Derivation::kPathFieldNumber;
const int HdStoreDeriveParam_Derivation::kNetworkFieldNumber;
const int HdStoreDeriveParam_Derivation::kSegWitFieldNumber;
const int HdStoreDeriveParam_Derivation::kChainIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HdStoreDeriveParam_Derivation::HdStoreDeriveParam_Derivation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.HdStoreDeriveParam.Derivation)
}

void HdStoreDeriveParam_Derivation::InitAsDefaultInstance() {
}

HdStoreDeriveParam_Derivation::HdStoreDeriveParam_Derivation(const HdStoreDeriveParam_Derivation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.HdStoreDeriveParam.Derivation)
}

void HdStoreDeriveParam_Derivation::SharedCtor() {
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HdStoreDeriveParam_Derivation::~HdStoreDeriveParam_Derivation() {
  // @@protoc_insertion_point(destructor:api.HdStoreDeriveParam.Derivation)
  SharedDtor();
}

void HdStoreDeriveParam_Derivation::SharedDtor() {
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HdStoreDeriveParam_Derivation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HdStoreDeriveParam_Derivation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HdStoreDeriveParam_Derivation_descriptor_;
}

const HdStoreDeriveParam_Derivation& HdStoreDeriveParam_Derivation::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HdStoreDeriveParam_Derivation> HdStoreDeriveParam_Derivation_default_instance_;

HdStoreDeriveParam_Derivation* HdStoreDeriveParam_Derivation::New(::google::protobuf::Arena* arena) const {
  HdStoreDeriveParam_Derivation* n = new HdStoreDeriveParam_Derivation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HdStoreDeriveParam_Derivation::Clear() {
// @@protoc_insertion_point(message_clear_start:api.HdStoreDeriveParam.Derivation)
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HdStoreDeriveParam_Derivation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.HdStoreDeriveParam.Derivation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chainType = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreDeriveParam.Derivation.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // optional string path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreDeriveParam.Derivation.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_network;
        break;
      }

      // optional string network = 3;
      case 3: {
        if (tag == 26) {
         parse_network:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreDeriveParam.Derivation.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_segWit;
        break;
      }

      // optional string segWit = 4;
      case 4: {
        if (tag == 34) {
         parse_segWit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segwit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segwit().data(), this->segwit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreDeriveParam.Derivation.segWit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_chainId;
        break;
      }

      // optional string chainId = 5;
      case 5: {
        if (tag == 42) {
         parse_chainId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chainid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chainid().data(), this->chainid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreDeriveParam.Derivation.chainId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.HdStoreDeriveParam.Derivation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.HdStoreDeriveParam.Derivation)
  return false;
#undef DO_
}

void HdStoreDeriveParam_Derivation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.HdStoreDeriveParam.Derivation)
  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chaintype(), output);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->network(), output);
  }

  // optional string segWit = 4;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.segWit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->segwit(), output);
  }

  // optional string chainId = 5;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), this->chainid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.chainId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->chainid(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.HdStoreDeriveParam.Derivation)
}

::google::protobuf::uint8* HdStoreDeriveParam_Derivation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.HdStoreDeriveParam.Derivation)
  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chaintype(), target);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->network(), target);
  }

  // optional string segWit = 4;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.segWit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->segwit(), target);
  }

  // optional string chainId = 5;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), this->chainid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.Derivation.chainId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->chainid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.HdStoreDeriveParam.Derivation)
  return target;
}

size_t HdStoreDeriveParam_Derivation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.HdStoreDeriveParam.Derivation)
  size_t total_size = 0;

  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // optional string segWit = 4;
  if (this->segwit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segwit());
  }

  // optional string chainId = 5;
  if (this->chainid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chainid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HdStoreDeriveParam_Derivation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.HdStoreDeriveParam.Derivation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HdStoreDeriveParam_Derivation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HdStoreDeriveParam_Derivation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.HdStoreDeriveParam.Derivation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.HdStoreDeriveParam.Derivation)
    UnsafeMergeFrom(*source);
  }
}

void HdStoreDeriveParam_Derivation::MergeFrom(const HdStoreDeriveParam_Derivation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.HdStoreDeriveParam.Derivation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HdStoreDeriveParam_Derivation::UnsafeMergeFrom(const HdStoreDeriveParam_Derivation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.segwit().size() > 0) {

    segwit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segwit_);
  }
  if (from.chainid().size() > 0) {

    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
}

void HdStoreDeriveParam_Derivation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.HdStoreDeriveParam.Derivation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HdStoreDeriveParam_Derivation::CopyFrom(const HdStoreDeriveParam_Derivation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.HdStoreDeriveParam.Derivation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HdStoreDeriveParam_Derivation::IsInitialized() const {

  return true;
}

void HdStoreDeriveParam_Derivation::Swap(HdStoreDeriveParam_Derivation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HdStoreDeriveParam_Derivation::InternalSwap(HdStoreDeriveParam_Derivation* other) {
  chaintype_.Swap(&other->chaintype_);
  path_.Swap(&other->path_);
  network_.Swap(&other->network_);
  segwit_.Swap(&other->segwit_);
  chainid_.Swap(&other->chainid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HdStoreDeriveParam_Derivation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HdStoreDeriveParam_Derivation_descriptor_;
  metadata.reflection = HdStoreDeriveParam_Derivation_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HdStoreDeriveParam::kIdFieldNumber;
const int HdStoreDeriveParam::kPasswordFieldNumber;
const int HdStoreDeriveParam::kDerivationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HdStoreDeriveParam::HdStoreDeriveParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.HdStoreDeriveParam)
}

void HdStoreDeriveParam::InitAsDefaultInstance() {
}

HdStoreDeriveParam::HdStoreDeriveParam(const HdStoreDeriveParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.HdStoreDeriveParam)
}

void HdStoreDeriveParam::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HdStoreDeriveParam::~HdStoreDeriveParam() {
  // @@protoc_insertion_point(destructor:api.HdStoreDeriveParam)
  SharedDtor();
}

void HdStoreDeriveParam::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HdStoreDeriveParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HdStoreDeriveParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HdStoreDeriveParam_descriptor_;
}

const HdStoreDeriveParam& HdStoreDeriveParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HdStoreDeriveParam> HdStoreDeriveParam_default_instance_;

HdStoreDeriveParam* HdStoreDeriveParam::New(::google::protobuf::Arena* arena) const {
  HdStoreDeriveParam* n = new HdStoreDeriveParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HdStoreDeriveParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.HdStoreDeriveParam)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivations_.Clear();
}

bool HdStoreDeriveParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.HdStoreDeriveParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreDeriveParam.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreDeriveParam.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_derivations;
        break;
      }

      // repeated .api.HdStoreDeriveParam.Derivation derivations = 3;
      case 3: {
        if (tag == 26) {
         parse_derivations:
          DO_(input->IncrementRecursionDepth());
         parse_loop_derivations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_derivations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_derivations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.HdStoreDeriveParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.HdStoreDeriveParam)
  return false;
#undef DO_
}

void HdStoreDeriveParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.HdStoreDeriveParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // repeated .api.HdStoreDeriveParam.Derivation derivations = 3;
  for (unsigned int i = 0, n = this->derivations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->derivations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:api.HdStoreDeriveParam)
}

::google::protobuf::uint8* HdStoreDeriveParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.HdStoreDeriveParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreDeriveParam.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // repeated .api.HdStoreDeriveParam.Derivation derivations = 3;
  for (unsigned int i = 0, n = this->derivations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->derivations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.HdStoreDeriveParam)
  return target;
}

size_t HdStoreDeriveParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.HdStoreDeriveParam)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // repeated .api.HdStoreDeriveParam.Derivation derivations = 3;
  {
    unsigned int count = this->derivations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->derivations(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HdStoreDeriveParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.HdStoreDeriveParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HdStoreDeriveParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HdStoreDeriveParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.HdStoreDeriveParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.HdStoreDeriveParam)
    UnsafeMergeFrom(*source);
  }
}

void HdStoreDeriveParam::MergeFrom(const HdStoreDeriveParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.HdStoreDeriveParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HdStoreDeriveParam::UnsafeMergeFrom(const HdStoreDeriveParam& from) {
  GOOGLE_DCHECK(&from != this);
  derivations_.MergeFrom(from.derivations_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void HdStoreDeriveParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.HdStoreDeriveParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HdStoreDeriveParam::CopyFrom(const HdStoreDeriveParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.HdStoreDeriveParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HdStoreDeriveParam::IsInitialized() const {

  return true;
}

void HdStoreDeriveParam::Swap(HdStoreDeriveParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HdStoreDeriveParam::InternalSwap(HdStoreDeriveParam* other) {
  id_.Swap(&other->id_);
  password_.Swap(&other->password_);
  derivations_.UnsafeArenaSwap(&other->derivations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HdStoreDeriveParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HdStoreDeriveParam_descriptor_;
  metadata.reflection = HdStoreDeriveParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HdStoreDeriveParam_Derivation

// optional string chainType = 1;
void HdStoreDeriveParam_Derivation::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreDeriveParam_Derivation::chaintype() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.chainType)
}
void HdStoreDeriveParam_Derivation::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.chainType)
}
void HdStoreDeriveParam_Derivation::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.chainType)
}
::std::string* HdStoreDeriveParam_Derivation::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreDeriveParam_Derivation::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.chainType)
}

// optional string path = 2;
void HdStoreDeriveParam_Derivation::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreDeriveParam_Derivation::path() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.path)
}
void HdStoreDeriveParam_Derivation::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.path)
}
void HdStoreDeriveParam_Derivation::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.path)
}
::std::string* HdStoreDeriveParam_Derivation::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreDeriveParam_Derivation::release_path() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.path)
}

// optional string network = 3;
void HdStoreDeriveParam_Derivation::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreDeriveParam_Derivation::network() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.network)
}
void HdStoreDeriveParam_Derivation::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.network)
}
void HdStoreDeriveParam_Derivation::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.network)
}
::std::string* HdStoreDeriveParam_Derivation::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreDeriveParam_Derivation::release_network() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.network)
}

// optional string segWit = 4;
void HdStoreDeriveParam_Derivation::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreDeriveParam_Derivation::segwit() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.segWit)
}
void HdStoreDeriveParam_Derivation::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.segWit)
}
void HdStoreDeriveParam_Derivation::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.segWit)
}
::std::string* HdStoreDeriveParam_Derivation::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreDeriveParam_Derivation::release_segwit() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.segWit)
}

// optional string chainId = 5;
void HdStoreDeriveParam_Derivation::clear_chainid() {
  chainid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreDeriveParam_Derivation::chainid() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.chainId)
  return chainid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_chainid(const ::std::string& value) {
  
  chainid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.chainId)
}
void HdStoreDeriveParam_Derivation::set_chainid(const char* value) {
  
  chainid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.chainId)
}
void HdStoreDeriveParam_Derivation::set_chainid(const char* value, size_t size) {
  
  chainid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.chainId)
}
::std::string* HdStoreDeriveParam_Derivation::mutable_chainid() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.chainId)
  return chainid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreDeriveParam_Derivation::release_chainid() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.chainId)
  
  return chainid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam_Derivation::set_allocated_chainid(::std::string* chainid) {
  if (chainid != NULL) {
    
  } else {
    
  }
  chainid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chainid);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.chainId)
}

inline const HdStoreDeriveParam_Derivation* HdStoreDeriveParam_Derivation::internal_default_instance() {
  return &HdStoreDeriveParam_Derivation_default_instance_.get();
}
// -------------------------------------------------------------------

// HdStoreDeriveParam

// optional string id = 1;
void HdStoreDeriveParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreDeriveParam::id() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.id)
}
void HdStoreDeriveParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.id)
}
void HdStoreDeriveParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.id)
}
::std::string* HdStoreDeriveParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreDeriveParam::release_id() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.id)
}

// optional string password = 2;
void HdStoreDeriveParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreDeriveParam::password() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.password)
}
void HdStoreDeriveParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.password)
}
void HdStoreDeriveParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.password)
}
::std::string* HdStoreDeriveParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreDeriveParam::release_password() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreDeriveParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.password)
}

// repeated .api.HdStoreDeriveParam.Derivation derivations = 3;
int HdStoreDeriveParam::derivations_size() const {
  return derivations_.size();
}
void HdStoreDeriveParam::clear_derivations() {
  derivations_.Clear();
}
const ::api::HdStoreDeriveParam_Derivation& HdStoreDeriveParam::derivations(int index) const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.derivations)
  return derivations_.Get(index);
}
::api::HdStoreDeriveParam_Derivation* HdStoreDeriveParam::mutable_derivations(int index) {
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.derivations)
  return derivations_.Mutable(index);
}
::api::HdStoreDeriveParam_Derivation* HdStoreDeriveParam::add_derivations() {
  // @@protoc_insertion_point(field_add:api.HdStoreDeriveParam.derivations)
  return derivations_.Add();
}
::google::protobuf::RepeatedPtrField< ::api::HdStoreDeriveParam_Derivation >*
HdStoreDeriveParam::mutable_derivations() {
  // @@protoc_insertion_point(field_mutable_list:api.HdStoreDeriveParam.derivations)
  return &derivations_;
}
const ::google::protobuf::RepeatedPtrField< ::api::HdStoreDeriveParam_Derivation >&
HdStoreDeriveParam::derivations() const {
  // @@protoc_insertion_point(field_list:api.HdStoreDeriveParam.derivations)
  return derivations_;
}

inline const HdStoreDeriveParam* HdStoreDeriveParam::internal_default_instance() {
  return &HdStoreDeriveParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountResponse::kChainTypeFieldNumber;
const int AccountResponse::kAddressFieldNumber;
const int AccountResponse::kPathFieldNumber;
const int AccountResponse::kExtendedXpubKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountResponse::AccountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AccountResponse)
}

void AccountResponse::InitAsDefaultInstance() {
}

AccountResponse::AccountResponse(const AccountResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.AccountResponse)
}

void AccountResponse::SharedCtor() {
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extendedxpubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AccountResponse::~AccountResponse() {
  // @@protoc_insertion_point(destructor:api.AccountResponse)
  SharedDtor();
}

void AccountResponse::SharedDtor() {
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extendedxpubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountResponse_descriptor_;
}

const AccountResponse& AccountResponse::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AccountResponse> AccountResponse_default_instance_;

AccountResponse* AccountResponse::New(::google::protobuf::Arena* arena) const {
  AccountResponse* n = new AccountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AccountResponse)
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extendedxpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AccountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AccountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chainType = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccountResponse.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_address;
        break;
      }

      // optional string address = 2;
      case 2: {
        if (tag == 18) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccountResponse.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_path;
        break;
      }

      // optional string path = 3;
      case 3: {
        if (tag == 26) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccountResponse.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_extendedXpubKey;
        break;
      }

      // optional string extendedXpubKey = 4;
      case 4: {
        if (tag == 34) {
         parse_extendedXpubKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extendedxpubkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extendedxpubkey().data(), this->extendedxpubkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccountResponse.extendedXpubKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AccountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AccountResponse)
  return false;
#undef DO_
}

void AccountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AccountResponse)
  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccountResponse.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chaintype(), output);
  }

  // optional string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccountResponse.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // optional string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccountResponse.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // optional string extendedXpubKey = 4;
  if (this->extendedxpubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extendedxpubkey().data(), this->extendedxpubkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccountResponse.extendedXpubKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->extendedxpubkey(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.AccountResponse)
}

::google::protobuf::uint8* AccountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AccountResponse)
  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccountResponse.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chaintype(), target);
  }

  // optional string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccountResponse.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // optional string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccountResponse.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // optional string extendedXpubKey = 4;
  if (this->extendedxpubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extendedxpubkey().data(), this->extendedxpubkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccountResponse.extendedXpubKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->extendedxpubkey(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.AccountResponse)
  return target;
}

size_t AccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AccountResponse)
  size_t total_size = 0;

  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string extendedXpubKey = 4;
  if (this->extendedxpubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extendedxpubkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AccountResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AccountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AccountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AccountResponse)
    UnsafeMergeFrom(*source);
  }
}

void AccountResponse::MergeFrom(const AccountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AccountResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AccountResponse::UnsafeMergeFrom(const AccountResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.extendedxpubkey().size() > 0) {

    extendedxpubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extendedxpubkey_);
  }
}

void AccountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountResponse::CopyFrom(const AccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AccountResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AccountResponse::IsInitialized() const {

  return true;
}

void AccountResponse::Swap(AccountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountResponse::InternalSwap(AccountResponse* other) {
  chaintype_.Swap(&other->chaintype_);
  address_.Swap(&other->address_);
  path_.Swap(&other->path_);
  extendedxpubkey_.Swap(&other->extendedxpubkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountResponse_descriptor_;
  metadata.reflection = AccountResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountResponse

// optional string chainType = 1;
void AccountResponse::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountResponse::chaintype() const {
  // @@protoc_insertion_point(field_get:api.AccountResponse.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountResponse::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AccountResponse.chainType)
}
void AccountResponse::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AccountResponse.chainType)
}
void AccountResponse::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AccountResponse.chainType)
}
::std::string* AccountResponse::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.AccountResponse.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountResponse::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.AccountResponse.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountResponse::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.AccountResponse.chainType)
}

// optional string address = 2;
void AccountResponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountResponse::address() const {
  // @@protoc_insertion_point(field_get:api.AccountResponse.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountResponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AccountResponse.address)
}
void AccountResponse::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AccountResponse.address)
}
void AccountResponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AccountResponse.address)
}
::std::string* AccountResponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.AccountResponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountResponse::release_address() {
  // @@protoc_insertion_point(field_release:api.AccountResponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountResponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.AccountResponse.address)
}

// optional string path = 3;
void AccountResponse::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountResponse::path() const {
  // @@protoc_insertion_point(field_get:api.AccountResponse.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountResponse::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AccountResponse.path)
}
void AccountResponse::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AccountResponse.path)
}
void AccountResponse::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AccountResponse.path)
}
::std::string* AccountResponse::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:api.AccountResponse.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountResponse::release_path() {
  // @@protoc_insertion_point(field_release:api.AccountResponse.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountResponse::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:api.AccountResponse.path)
}

// optional string extendedXpubKey = 4;
void AccountResponse::clear_extendedxpubkey() {
  extendedxpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountResponse::extendedxpubkey() const {
  // @@protoc_insertion_point(field_get:api.AccountResponse.extendedXpubKey)
  return extendedxpubkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountResponse::set_extendedxpubkey(const ::std::string& value) {
  
  extendedxpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AccountResponse.extendedXpubKey)
}
void AccountResponse::set_extendedxpubkey(const char* value) {
  
  extendedxpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AccountResponse.extendedXpubKey)
}
void AccountResponse::set_extendedxpubkey(const char* value, size_t size) {
  
  extendedxpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AccountResponse.extendedXpubKey)
}
::std::string* AccountResponse::mutable_extendedxpubkey() {
  
  // @@protoc_insertion_point(field_mutable:api.AccountResponse.extendedXpubKey)
  return extendedxpubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountResponse::release_extendedxpubkey() {
  // @@protoc_insertion_point(field_release:api.AccountResponse.extendedXpubKey)
  
  return extendedxpubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountResponse::set_allocated_extendedxpubkey(::std::string* extendedxpubkey) {
  if (extendedxpubkey != NULL) {
    
  } else {
    
  }
  extendedxpubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extendedxpubkey);
  // @@protoc_insertion_point(field_set_allocated:api.AccountResponse.extendedXpubKey)
}

inline const AccountResponse* AccountResponse::internal_default_instance() {
  return &AccountResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountsResponse::kAccountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountsResponse::AccountsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AccountsResponse)
}

void AccountsResponse::InitAsDefaultInstance() {
}

AccountsResponse::AccountsResponse(const AccountsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.AccountsResponse)
}

void AccountsResponse::SharedCtor() {
  _cached_size_ = 0;
}

AccountsResponse::~AccountsResponse() {
  // @@protoc_insertion_point(destructor:api.AccountsResponse)
  SharedDtor();
}

void AccountsResponse::SharedDtor() {
}

void AccountsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountsResponse_descriptor_;
}

const AccountsResponse& AccountsResponse::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AccountsResponse> AccountsResponse_default_instance_;

AccountsResponse* AccountsResponse::New(::google::protobuf::Arena* arena) const {
  AccountsResponse* n = new AccountsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AccountsResponse)
  accounts_.Clear();
}

bool AccountsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AccountsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .api.AccountResponse accounts = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_accounts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_accounts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AccountsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AccountsResponse)
  return false;
#undef DO_
}

void AccountsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AccountsResponse)
  // repeated .api.AccountResponse accounts = 1;
  for (unsigned int i = 0, n = this->accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->accounts(i), output);
  }

  // @@protoc_insertion_point(serialize_end:api.AccountsResponse)
}

::google::protobuf::uint8* AccountsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AccountsResponse)
  // repeated .api.AccountResponse accounts = 1;
  for (unsigned int i = 0, n = this->accounts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->accounts(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.AccountsResponse)
  return target;
}

size_t AccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AccountsResponse)
  size_t total_size = 0;

  // repeated .api.AccountResponse accounts = 1;
  {
    unsigned int count = this->accounts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->accounts(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AccountsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AccountsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AccountsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AccountsResponse)
    UnsafeMergeFrom(*source);
  }
}

void AccountsResponse::MergeFrom(const AccountsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AccountsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AccountsResponse::UnsafeMergeFrom(const AccountsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  accounts_.MergeFrom(from.accounts_);
}

void AccountsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountsResponse::CopyFrom(const AccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AccountsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AccountsResponse::IsInitialized() const {

  return true;
}

void AccountsResponse::Swap(AccountsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountsResponse::InternalSwap(AccountsResponse* other) {
  accounts_.UnsafeArenaSwap(&other->accounts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountsResponse_descriptor_;
  metadata.reflection = AccountsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountsResponse

// repeated .api.AccountResponse accounts = 1;
int AccountsResponse::accounts_size() const {
  return accounts_.size();
}
void AccountsResponse::clear_accounts() {
  accounts_.Clear();
}
const ::api::AccountResponse& AccountsResponse::accounts(int index) const {
  // @@protoc_insertion_point(field_get:api.AccountsResponse.accounts)
  return accounts_.Get(index);
}
::api::AccountResponse* AccountsResponse::mutable_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:api.AccountsResponse.accounts)
  return accounts_.Mutable(index);
}
::api::AccountResponse* AccountsResponse::add_accounts() {
  // @@protoc_insertion_point(field_add:api.AccountsResponse.accounts)
  return accounts_.Add();
}
::google::protobuf::RepeatedPtrField< ::api::AccountResponse >*
AccountsResponse::mutable_accounts() {
  // @@protoc_insertion_point(field_mutable_list:api.AccountsResponse.accounts)
  return &accounts_;
}
const ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >&
AccountsResponse::accounts() const {
  // @@protoc_insertion_point(field_list:api.AccountsResponse.accounts)
  return accounts_;
}

inline const AccountsResponse* AccountsResponse::internal_default_instance() {
  return &AccountsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddressResponse::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddressResponse::AddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AddressResponse)
}

void AddressResponse::InitAsDefaultInstance() {
}

AddressResponse::AddressResponse(const AddressResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.AddressResponse)
}

void AddressResponse::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddressResponse::~AddressResponse() {
  // @@protoc_insertion_point(destructor:api.AddressResponse)
  SharedDtor();
}

void AddressResponse::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddressResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddressResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddressResponse_descriptor_;
}

const AddressResponse& AddressResponse::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AddressResponse> AddressResponse_default_instance_;

AddressResponse* AddressResponse::New(::google::protobuf::Arena* arena) const {
  AddressResponse* n = new AddressResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AddressResponse)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AddressResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AddressResponse.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AddressResponse)
  return false;
#undef DO_
}

void AddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AddressResponse)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AddressResponse.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.AddressResponse)
}

::google::protobuf::uint8* AddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AddressResponse)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AddressResponse.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.AddressResponse)
  return target;
}

size_t AddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AddressResponse)
  size_t total_size = 0;

  // optional string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AddressResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AddressResponse)
    UnsafeMergeFrom(*source);
  }
}

void AddressResponse::MergeFrom(const AddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AddressResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AddressResponse::UnsafeMergeFrom(const AddressResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void AddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddressResponse::CopyFrom(const AddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AddressResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AddressResponse::IsInitialized() const {

  return true;
}

void AddressResponse::Swap(AddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddressResponse::InternalSwap(AddressResponse* other) {
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddressResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddressResponse_descriptor_;
  metadata.reflection = AddressResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddressResponse

// optional string address = 1;
void AddressResponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressResponse::address() const {
  // @@protoc_insertion_point(field_get:api.AddressResponse.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressResponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AddressResponse.address)
}
void AddressResponse::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AddressResponse.address)
}
void AddressResponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AddressResponse.address)
}
::std::string* AddressResponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.AddressResponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressResponse::release_address() {
  // @@protoc_insertion_point(field_release:api.AddressResponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressResponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.AddressResponse.address)
}

inline const AddressResponse* AddressResponse::internal_default_instance() {
  return &AddressResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddressParam::kChainTypeFieldNumber;
const int AddressParam::kPathFieldNumber;
const int AddressParam::kNetworkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddressParam::AddressParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AddressParam)
}

void AddressParam::InitAsDefaultInstance() {
}

AddressParam::AddressParam(const AddressParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.AddressParam)
}

void AddressParam::SharedCtor() {
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddressParam::~AddressParam() {
  // @@protoc_insertion_point(destructor:api.AddressParam)
  SharedDtor();
}

void AddressParam::SharedDtor() {
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddressParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddressParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddressParam_descriptor_;
}

const AddressParam& AddressParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AddressParam> AddressParam_default_instance_;

AddressParam* AddressParam::New(::google::protobuf::Arena* arena) const {
  AddressParam* n = new AddressParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddressParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AddressParam)
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddressParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AddressParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chainType = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AddressParam.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // optional string path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AddressParam.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_network;
        break;
      }

      // optional string network = 3;
      case 3: {
        if (tag == 26) {
         parse_network:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AddressParam.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AddressParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AddressParam)
  return false;
#undef DO_
}

void AddressParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AddressParam)
  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AddressParam.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chaintype(), output);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AddressParam.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AddressParam.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->network(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.AddressParam)
}

::google::protobuf::uint8* AddressParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AddressParam)
  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AddressParam.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chaintype(), target);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AddressParam.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AddressParam.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->network(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.AddressParam)
  return target;
}

size_t AddressParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AddressParam)
  size_t total_size = 0;

  // optional string chainType = 1;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddressParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AddressParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddressParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddressParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AddressParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AddressParam)
    UnsafeMergeFrom(*source);
  }
}

void AddressParam::MergeFrom(const AddressParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AddressParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AddressParam::UnsafeMergeFrom(const AddressParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
}

void AddressParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AddressParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddressParam::CopyFrom(const AddressParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AddressParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AddressParam::IsInitialized() const {

  return true;
}

void AddressParam::Swap(AddressParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddressParam::InternalSwap(AddressParam* other) {
  chaintype_.Swap(&other->chaintype_);
  path_.Swap(&other->path_);
  network_.Swap(&other->network_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddressParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddressParam_descriptor_;
  metadata.reflection = AddressParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddressParam

// optional string chainType = 1;
void AddressParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.AddressParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AddressParam.chainType)
}
void AddressParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AddressParam.chainType)
}
void AddressParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AddressParam.chainType)
}
::std::string* AddressParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.AddressParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.AddressParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.AddressParam.chainType)
}

// optional string path = 2;
void AddressParam::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressParam::path() const {
  // @@protoc_insertion_point(field_get:api.AddressParam.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressParam::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AddressParam.path)
}
void AddressParam::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AddressParam.path)
}
void AddressParam::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AddressParam.path)
}
::std::string* AddressParam::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:api.AddressParam.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressParam::release_path() {
  // @@protoc_insertion_point(field_release:api.AddressParam.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressParam::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:api.AddressParam.path)
}

// optional string network = 3;
void AddressParam::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressParam::network() const {
  // @@protoc_insertion_point(field_get:api.AddressParam.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressParam::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AddressParam.network)
}
void AddressParam::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AddressParam.network)
}
void AddressParam::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AddressParam.network)
}
::std::string* AddressParam::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.AddressParam.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressParam::release_network() {
  // @@protoc_insertion_point(field_release:api.AddressParam.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressParam::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.AddressParam.network)
}

inline const AddressParam* AddressParam::internal_default_instance() {
  return &AddressParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeystoreCommonExportResult::kIdFieldNumber;
const int KeystoreCommonExportResult::kTypeFieldNumber;
const int KeystoreCommonExportResult::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeystoreCommonExportResult::KeystoreCommonExportResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.KeystoreCommonExportResult)
}

void KeystoreCommonExportResult::InitAsDefaultInstance() {
}

KeystoreCommonExportResult::KeystoreCommonExportResult(const KeystoreCommonExportResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.KeystoreCommonExportResult)
}

void KeystoreCommonExportResult::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

KeystoreCommonExportResult::~KeystoreCommonExportResult() {
  // @@protoc_insertion_point(destructor:api.KeystoreCommonExportResult)
  SharedDtor();
}

void KeystoreCommonExportResult::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeystoreCommonExportResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeystoreCommonExportResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeystoreCommonExportResult_descriptor_;
}

const KeystoreCommonExportResult& KeystoreCommonExportResult::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KeystoreCommonExportResult> KeystoreCommonExportResult_default_instance_;

KeystoreCommonExportResult* KeystoreCommonExportResult::New(::google::protobuf::Arena* arena) const {
  KeystoreCommonExportResult* n = new KeystoreCommonExportResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeystoreCommonExportResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.KeystoreCommonExportResult)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KeystoreCommonExportResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.KeystoreCommonExportResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.KeystoreCommonExportResult.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .api.KeyType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::api::KeyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional string value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.KeystoreCommonExportResult.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.KeystoreCommonExportResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.KeystoreCommonExportResult)
  return false;
#undef DO_
}

void KeystoreCommonExportResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.KeystoreCommonExportResult)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonExportResult.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .api.KeyType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonExportResult.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.KeystoreCommonExportResult)
}

::google::protobuf::uint8* KeystoreCommonExportResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.KeystoreCommonExportResult)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonExportResult.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .api.KeyType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonExportResult.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.KeystoreCommonExportResult)
  return target;
}

size_t KeystoreCommonExportResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.KeystoreCommonExportResult)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional .api.KeyType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeystoreCommonExportResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.KeystoreCommonExportResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KeystoreCommonExportResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeystoreCommonExportResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.KeystoreCommonExportResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.KeystoreCommonExportResult)
    UnsafeMergeFrom(*source);
  }
}

void KeystoreCommonExportResult::MergeFrom(const KeystoreCommonExportResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.KeystoreCommonExportResult)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KeystoreCommonExportResult::UnsafeMergeFrom(const KeystoreCommonExportResult& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KeystoreCommonExportResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.KeystoreCommonExportResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeystoreCommonExportResult::CopyFrom(const KeystoreCommonExportResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.KeystoreCommonExportResult)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KeystoreCommonExportResult::IsInitialized() const {

  return true;
}

void KeystoreCommonExportResult::Swap(KeystoreCommonExportResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeystoreCommonExportResult::InternalSwap(KeystoreCommonExportResult* other) {
  id_.Swap(&other->id_);
  std::swap(type_, other->type_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeystoreCommonExportResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeystoreCommonExportResult_descriptor_;
  metadata.reflection = KeystoreCommonExportResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeystoreCommonExportResult

// optional string id = 1;
void KeystoreCommonExportResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KeystoreCommonExportResult::id() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExportResult.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonExportResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExportResult.id)
}
void KeystoreCommonExportResult::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonExportResult.id)
}
void KeystoreCommonExportResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonExportResult.id)
}
::std::string* KeystoreCommonExportResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonExportResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeystoreCommonExportResult::release_id() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonExportResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonExportResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonExportResult.id)
}

// optional .api.KeyType type = 2;
void KeystoreCommonExportResult::clear_type() {
  type_ = 0;
}
::api::KeyType KeystoreCommonExportResult::type() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExportResult.type)
  return static_cast< ::api::KeyType >(type_);
}
void KeystoreCommonExportResult::set_type(::api::KeyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExportResult.type)
}

// optional string value = 3;
void KeystoreCommonExportResult::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KeystoreCommonExportResult::value() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExportResult.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonExportResult::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExportResult.value)
}
void KeystoreCommonExportResult::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonExportResult.value)
}
void KeystoreCommonExportResult::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonExportResult.value)
}
::std::string* KeystoreCommonExportResult::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonExportResult.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeystoreCommonExportResult::release_value() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonExportResult.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonExportResult::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonExportResult.value)
}

inline const KeystoreCommonExportResult* KeystoreCommonExportResult::internal_default_instance() {
  return &KeystoreCommonExportResult_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrivateKeyStoreImportParam::kPrivateKeyFieldNumber;
const int PrivateKeyStoreImportParam::kPasswordFieldNumber;
const int PrivateKeyStoreImportParam::kChainTypeFieldNumber;
const int PrivateKeyStoreImportParam::kNetworkFieldNumber;
const int PrivateKeyStoreImportParam::kSegWitFieldNumber;
const int PrivateKeyStoreImportParam::kOverwriteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivateKeyStoreImportParam::PrivateKeyStoreImportParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.PrivateKeyStoreImportParam)
}

void PrivateKeyStoreImportParam::InitAsDefaultInstance() {
}

PrivateKeyStoreImportParam::PrivateKeyStoreImportParam(const PrivateKeyStoreImportParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.PrivateKeyStoreImportParam)
}

void PrivateKeyStoreImportParam::SharedCtor() {
  privatekey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overwrite_ = false;
  _cached_size_ = 0;
}

PrivateKeyStoreImportParam::~PrivateKeyStoreImportParam() {
  // @@protoc_insertion_point(destructor:api.PrivateKeyStoreImportParam)
  SharedDtor();
}

void PrivateKeyStoreImportParam::SharedDtor() {
  privatekey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrivateKeyStoreImportParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrivateKeyStoreImportParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrivateKeyStoreImportParam_descriptor_;
}

const PrivateKeyStoreImportParam& PrivateKeyStoreImportParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PrivateKeyStoreImportParam> PrivateKeyStoreImportParam_default_instance_;

PrivateKeyStoreImportParam* PrivateKeyStoreImportParam::New(::google::protobuf::Arena* arena) const {
  PrivateKeyStoreImportParam* n = new PrivateKeyStoreImportParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrivateKeyStoreImportParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.PrivateKeyStoreImportParam)
  privatekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overwrite_ = false;
}

bool PrivateKeyStoreImportParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.PrivateKeyStoreImportParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string privateKey = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_privatekey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->privatekey().data(), this->privatekey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreImportParam.privateKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreImportParam.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chainType;
        break;
      }

      // optional string chainType = 3;
      case 3: {
        if (tag == 26) {
         parse_chainType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreImportParam.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_network;
        break;
      }

      // optional string network = 4;
      case 4: {
        if (tag == 34) {
         parse_network:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreImportParam.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_segWit;
        break;
      }

      // optional string segWit = 5;
      case 5: {
        if (tag == 42) {
         parse_segWit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segwit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segwit().data(), this->segwit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreImportParam.segWit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_overwrite;
        break;
      }

      // optional bool overwrite = 10;
      case 10: {
        if (tag == 80) {
         parse_overwrite:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &overwrite_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.PrivateKeyStoreImportParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.PrivateKeyStoreImportParam)
  return false;
#undef DO_
}

void PrivateKeyStoreImportParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.PrivateKeyStoreImportParam)
  // optional string privateKey = 1;
  if (this->privatekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->privatekey().data(), this->privatekey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.privateKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->privatekey(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chaintype(), output);
  }

  // optional string network = 4;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->network(), output);
  }

  // optional string segWit = 5;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.segWit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->segwit(), output);
  }

  // optional bool overwrite = 10;
  if (this->overwrite() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->overwrite(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.PrivateKeyStoreImportParam)
}

::google::protobuf::uint8* PrivateKeyStoreImportParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.PrivateKeyStoreImportParam)
  // optional string privateKey = 1;
  if (this->privatekey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->privatekey().data(), this->privatekey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.privateKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->privatekey(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chaintype(), target);
  }

  // optional string network = 4;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->network(), target);
  }

  // optional string segWit = 5;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreImportParam.segWit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->segwit(), target);
  }

  // optional bool overwrite = 10;
  if (this->overwrite() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->overwrite(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.PrivateKeyStoreImportParam)
  return target;
}

size_t PrivateKeyStoreImportParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.PrivateKeyStoreImportParam)
  size_t total_size = 0;

  // optional string privateKey = 1;
  if (this->privatekey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->privatekey());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional string network = 4;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // optional string segWit = 5;
  if (this->segwit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segwit());
  }

  // optional bool overwrite = 10;
  if (this->overwrite() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrivateKeyStoreImportParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.PrivateKeyStoreImportParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PrivateKeyStoreImportParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrivateKeyStoreImportParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.PrivateKeyStoreImportParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.PrivateKeyStoreImportParam)
    UnsafeMergeFrom(*source);
  }
}

void PrivateKeyStoreImportParam::MergeFrom(const PrivateKeyStoreImportParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.PrivateKeyStoreImportParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PrivateKeyStoreImportParam::UnsafeMergeFrom(const PrivateKeyStoreImportParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.privatekey().size() > 0) {

    privatekey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.privatekey_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.segwit().size() > 0) {

    segwit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segwit_);
  }
  if (from.overwrite() != 0) {
    set_overwrite(from.overwrite());
  }
}

void PrivateKeyStoreImportParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.PrivateKeyStoreImportParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateKeyStoreImportParam::CopyFrom(const PrivateKeyStoreImportParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.PrivateKeyStoreImportParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PrivateKeyStoreImportParam::IsInitialized() const {

  return true;
}

void PrivateKeyStoreImportParam::Swap(PrivateKeyStoreImportParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivateKeyStoreImportParam::InternalSwap(PrivateKeyStoreImportParam* other) {
  privatekey_.Swap(&other->privatekey_);
  password_.Swap(&other->password_);
  chaintype_.Swap(&other->chaintype_);
  network_.Swap(&other->network_);
  segwit_.Swap(&other->segwit_);
  std::swap(overwrite_, other->overwrite_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrivateKeyStoreImportParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrivateKeyStoreImportParam_descriptor_;
  metadata.reflection = PrivateKeyStoreImportParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrivateKeyStoreImportParam

// optional string privateKey = 1;
void PrivateKeyStoreImportParam::clear_privatekey() {
  privatekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreImportParam::privatekey() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.privateKey)
  return privatekey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_privatekey(const ::std::string& value) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.privateKey)
}
void PrivateKeyStoreImportParam::set_privatekey(const char* value) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.privateKey)
}
void PrivateKeyStoreImportParam::set_privatekey(const char* value, size_t size) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.privateKey)
}
::std::string* PrivateKeyStoreImportParam::mutable_privatekey() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.privateKey)
  return privatekey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreImportParam::release_privatekey() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.privateKey)
  
  return privatekey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_allocated_privatekey(::std::string* privatekey) {
  if (privatekey != NULL) {
    
  } else {
    
  }
  privatekey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privatekey);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.privateKey)
}

// optional string password = 2;
void PrivateKeyStoreImportParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreImportParam::password() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.password)
}
void PrivateKeyStoreImportParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.password)
}
void PrivateKeyStoreImportParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.password)
}
::std::string* PrivateKeyStoreImportParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreImportParam::release_password() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.password)
}

// optional string chainType = 3;
void PrivateKeyStoreImportParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreImportParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.chainType)
}
void PrivateKeyStoreImportParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.chainType)
}
void PrivateKeyStoreImportParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.chainType)
}
::std::string* PrivateKeyStoreImportParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreImportParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.chainType)
}

// optional string network = 4;
void PrivateKeyStoreImportParam::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreImportParam::network() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.network)
}
void PrivateKeyStoreImportParam::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.network)
}
void PrivateKeyStoreImportParam::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.network)
}
::std::string* PrivateKeyStoreImportParam::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreImportParam::release_network() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.network)
}

// optional string segWit = 5;
void PrivateKeyStoreImportParam::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreImportParam::segwit() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.segWit)
}
void PrivateKeyStoreImportParam::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.segWit)
}
void PrivateKeyStoreImportParam::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.segWit)
}
::std::string* PrivateKeyStoreImportParam::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreImportParam::release_segwit() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreImportParam::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.segWit)
}

// optional bool overwrite = 10;
void PrivateKeyStoreImportParam::clear_overwrite() {
  overwrite_ = false;
}
bool PrivateKeyStoreImportParam::overwrite() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.overwrite)
  return overwrite_;
}
void PrivateKeyStoreImportParam::set_overwrite(bool value) {
  
  overwrite_ = value;
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.overwrite)
}

inline const PrivateKeyStoreImportParam* PrivateKeyStoreImportParam::internal_default_instance() {
  return &PrivateKeyStoreImportParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrivateKeyStoreExportParam::kIdFieldNumber;
const int PrivateKeyStoreExportParam::kPasswordFieldNumber;
const int PrivateKeyStoreExportParam::kChainTypeFieldNumber;
const int PrivateKeyStoreExportParam::kNetworkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivateKeyStoreExportParam::PrivateKeyStoreExportParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.PrivateKeyStoreExportParam)
}

void PrivateKeyStoreExportParam::InitAsDefaultInstance() {
}

PrivateKeyStoreExportParam::PrivateKeyStoreExportParam(const PrivateKeyStoreExportParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.PrivateKeyStoreExportParam)
}

void PrivateKeyStoreExportParam::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PrivateKeyStoreExportParam::~PrivateKeyStoreExportParam() {
  // @@protoc_insertion_point(destructor:api.PrivateKeyStoreExportParam)
  SharedDtor();
}

void PrivateKeyStoreExportParam::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrivateKeyStoreExportParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrivateKeyStoreExportParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrivateKeyStoreExportParam_descriptor_;
}

const PrivateKeyStoreExportParam& PrivateKeyStoreExportParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PrivateKeyStoreExportParam> PrivateKeyStoreExportParam_default_instance_;

PrivateKeyStoreExportParam* PrivateKeyStoreExportParam::New(::google::protobuf::Arena* arena) const {
  PrivateKeyStoreExportParam* n = new PrivateKeyStoreExportParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrivateKeyStoreExportParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.PrivateKeyStoreExportParam)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PrivateKeyStoreExportParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.PrivateKeyStoreExportParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreExportParam.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreExportParam.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chainType;
        break;
      }

      // optional string chainType = 3;
      case 3: {
        if (tag == 26) {
         parse_chainType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreExportParam.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_network;
        break;
      }

      // optional string network = 4;
      case 4: {
        if (tag == 34) {
         parse_network:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.PrivateKeyStoreExportParam.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.PrivateKeyStoreExportParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.PrivateKeyStoreExportParam)
  return false;
#undef DO_
}

void PrivateKeyStoreExportParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.PrivateKeyStoreExportParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreExportParam.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreExportParam.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreExportParam.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chaintype(), output);
  }

  // optional string network = 4;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreExportParam.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->network(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.PrivateKeyStoreExportParam)
}

::google::protobuf::uint8* PrivateKeyStoreExportParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.PrivateKeyStoreExportParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreExportParam.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreExportParam.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreExportParam.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chaintype(), target);
  }

  // optional string network = 4;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.PrivateKeyStoreExportParam.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->network(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.PrivateKeyStoreExportParam)
  return target;
}

size_t PrivateKeyStoreExportParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.PrivateKeyStoreExportParam)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional string network = 4;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrivateKeyStoreExportParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.PrivateKeyStoreExportParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PrivateKeyStoreExportParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrivateKeyStoreExportParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.PrivateKeyStoreExportParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.PrivateKeyStoreExportParam)
    UnsafeMergeFrom(*source);
  }
}

void PrivateKeyStoreExportParam::MergeFrom(const PrivateKeyStoreExportParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.PrivateKeyStoreExportParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PrivateKeyStoreExportParam::UnsafeMergeFrom(const PrivateKeyStoreExportParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
}

void PrivateKeyStoreExportParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.PrivateKeyStoreExportParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateKeyStoreExportParam::CopyFrom(const PrivateKeyStoreExportParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.PrivateKeyStoreExportParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PrivateKeyStoreExportParam::IsInitialized() const {

  return true;
}

void PrivateKeyStoreExportParam::Swap(PrivateKeyStoreExportParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivateKeyStoreExportParam::InternalSwap(PrivateKeyStoreExportParam* other) {
  id_.Swap(&other->id_);
  password_.Swap(&other->password_);
  chaintype_.Swap(&other->chaintype_);
  network_.Swap(&other->network_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrivateKeyStoreExportParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrivateKeyStoreExportParam_descriptor_;
  metadata.reflection = PrivateKeyStoreExportParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrivateKeyStoreExportParam

// optional string id = 1;
void PrivateKeyStoreExportParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreExportParam::id() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreExportParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreExportParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreExportParam.id)
}
void PrivateKeyStoreExportParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreExportParam.id)
}
void PrivateKeyStoreExportParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreExportParam.id)
}
::std::string* PrivateKeyStoreExportParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreExportParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreExportParam::release_id() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreExportParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreExportParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreExportParam.id)
}

// optional string password = 2;
void PrivateKeyStoreExportParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreExportParam::password() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreExportParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreExportParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreExportParam.password)
}
void PrivateKeyStoreExportParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreExportParam.password)
}
void PrivateKeyStoreExportParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreExportParam.password)
}
::std::string* PrivateKeyStoreExportParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreExportParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreExportParam::release_password() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreExportParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreExportParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreExportParam.password)
}

// optional string chainType = 3;
void PrivateKeyStoreExportParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreExportParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreExportParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreExportParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreExportParam.chainType)
}
void PrivateKeyStoreExportParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreExportParam.chainType)
}
void PrivateKeyStoreExportParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreExportParam.chainType)
}
::std::string* PrivateKeyStoreExportParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreExportParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreExportParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreExportParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreExportParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreExportParam.chainType)
}

// optional string network = 4;
void PrivateKeyStoreExportParam::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrivateKeyStoreExportParam::network() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreExportParam.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreExportParam::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreExportParam.network)
}
void PrivateKeyStoreExportParam::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreExportParam.network)
}
void PrivateKeyStoreExportParam::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreExportParam.network)
}
::std::string* PrivateKeyStoreExportParam::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreExportParam.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrivateKeyStoreExportParam::release_network() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreExportParam.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrivateKeyStoreExportParam::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreExportParam.network)
}

inline const PrivateKeyStoreExportParam* PrivateKeyStoreExportParam::internal_default_instance() {
  return &PrivateKeyStoreExportParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletKeyParam::kIdFieldNumber;
const int WalletKeyParam::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletKeyParam::WalletKeyParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.WalletKeyParam)
}

void WalletKeyParam::InitAsDefaultInstance() {
}

WalletKeyParam::WalletKeyParam(const WalletKeyParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.WalletKeyParam)
}

void WalletKeyParam::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WalletKeyParam::~WalletKeyParam() {
  // @@protoc_insertion_point(destructor:api.WalletKeyParam)
  SharedDtor();
}

void WalletKeyParam::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WalletKeyParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WalletKeyParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WalletKeyParam_descriptor_;
}

const WalletKeyParam& WalletKeyParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WalletKeyParam> WalletKeyParam_default_instance_;

WalletKeyParam* WalletKeyParam::New(::google::protobuf::Arena* arena) const {
  WalletKeyParam* n = new WalletKeyParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WalletKeyParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.WalletKeyParam)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WalletKeyParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.WalletKeyParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.WalletKeyParam.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.WalletKeyParam.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.WalletKeyParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.WalletKeyParam)
  return false;
#undef DO_
}

void WalletKeyParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.WalletKeyParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletKeyParam.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletKeyParam.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.WalletKeyParam)
}

::google::protobuf::uint8* WalletKeyParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.WalletKeyParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletKeyParam.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.WalletKeyParam.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.WalletKeyParam)
  return target;
}

size_t WalletKeyParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.WalletKeyParam)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WalletKeyParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.WalletKeyParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WalletKeyParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WalletKeyParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.WalletKeyParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.WalletKeyParam)
    UnsafeMergeFrom(*source);
  }
}

void WalletKeyParam::MergeFrom(const WalletKeyParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.WalletKeyParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WalletKeyParam::UnsafeMergeFrom(const WalletKeyParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void WalletKeyParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.WalletKeyParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WalletKeyParam::CopyFrom(const WalletKeyParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.WalletKeyParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WalletKeyParam::IsInitialized() const {

  return true;
}

void WalletKeyParam::Swap(WalletKeyParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WalletKeyParam::InternalSwap(WalletKeyParam* other) {
  id_.Swap(&other->id_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WalletKeyParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WalletKeyParam_descriptor_;
  metadata.reflection = WalletKeyParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WalletKeyParam

// optional string id = 1;
void WalletKeyParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WalletKeyParam::id() const {
  // @@protoc_insertion_point(field_get:api.WalletKeyParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletKeyParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletKeyParam.id)
}
void WalletKeyParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletKeyParam.id)
}
void WalletKeyParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletKeyParam.id)
}
::std::string* WalletKeyParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletKeyParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletKeyParam::release_id() {
  // @@protoc_insertion_point(field_release:api.WalletKeyParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletKeyParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.WalletKeyParam.id)
}

// optional string password = 2;
void WalletKeyParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WalletKeyParam::password() const {
  // @@protoc_insertion_point(field_get:api.WalletKeyParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletKeyParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletKeyParam.password)
}
void WalletKeyParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletKeyParam.password)
}
void WalletKeyParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletKeyParam.password)
}
::std::string* WalletKeyParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletKeyParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WalletKeyParam::release_password() {
  // @@protoc_insertion_point(field_release:api.WalletKeyParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WalletKeyParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.WalletKeyParam.password)
}

inline const WalletKeyParam* WalletKeyParam::internal_default_instance() {
  return &WalletKeyParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeystoreCommonExistsParam::kTypeFieldNumber;
const int KeystoreCommonExistsParam::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeystoreCommonExistsParam::KeystoreCommonExistsParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.KeystoreCommonExistsParam)
}

void KeystoreCommonExistsParam::InitAsDefaultInstance() {
}

KeystoreCommonExistsParam::KeystoreCommonExistsParam(const KeystoreCommonExistsParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.KeystoreCommonExistsParam)
}

void KeystoreCommonExistsParam::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

KeystoreCommonExistsParam::~KeystoreCommonExistsParam() {
  // @@protoc_insertion_point(destructor:api.KeystoreCommonExistsParam)
  SharedDtor();
}

void KeystoreCommonExistsParam::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeystoreCommonExistsParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeystoreCommonExistsParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeystoreCommonExistsParam_descriptor_;
}

const KeystoreCommonExistsParam& KeystoreCommonExistsParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KeystoreCommonExistsParam> KeystoreCommonExistsParam_default_instance_;

KeystoreCommonExistsParam* KeystoreCommonExistsParam::New(::google::protobuf::Arena* arena) const {
  KeystoreCommonExistsParam* n = new KeystoreCommonExistsParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeystoreCommonExistsParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.KeystoreCommonExistsParam)
  type_ = 0;
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KeystoreCommonExistsParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.KeystoreCommonExistsParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .api.KeyType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::api::KeyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.KeystoreCommonExistsParam.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.KeystoreCommonExistsParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.KeystoreCommonExistsParam)
  return false;
#undef DO_
}

void KeystoreCommonExistsParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.KeystoreCommonExistsParam)
  // optional .api.KeyType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonExistsParam.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.KeystoreCommonExistsParam)
}

::google::protobuf::uint8* KeystoreCommonExistsParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.KeystoreCommonExistsParam)
  // optional .api.KeyType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonExistsParam.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.KeystoreCommonExistsParam)
  return target;
}

size_t KeystoreCommonExistsParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.KeystoreCommonExistsParam)
  size_t total_size = 0;

  // optional .api.KeyType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeystoreCommonExistsParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.KeystoreCommonExistsParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KeystoreCommonExistsParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeystoreCommonExistsParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.KeystoreCommonExistsParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.KeystoreCommonExistsParam)
    UnsafeMergeFrom(*source);
  }
}

void KeystoreCommonExistsParam::MergeFrom(const KeystoreCommonExistsParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.KeystoreCommonExistsParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KeystoreCommonExistsParam::UnsafeMergeFrom(const KeystoreCommonExistsParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KeystoreCommonExistsParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.KeystoreCommonExistsParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeystoreCommonExistsParam::CopyFrom(const KeystoreCommonExistsParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.KeystoreCommonExistsParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KeystoreCommonExistsParam::IsInitialized() const {

  return true;
}

void KeystoreCommonExistsParam::Swap(KeystoreCommonExistsParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeystoreCommonExistsParam::InternalSwap(KeystoreCommonExistsParam* other) {
  std::swap(type_, other->type_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeystoreCommonExistsParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeystoreCommonExistsParam_descriptor_;
  metadata.reflection = KeystoreCommonExistsParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeystoreCommonExistsParam

// optional .api.KeyType type = 1;
void KeystoreCommonExistsParam::clear_type() {
  type_ = 0;
}
::api::KeyType KeystoreCommonExistsParam::type() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExistsParam.type)
  return static_cast< ::api::KeyType >(type_);
}
void KeystoreCommonExistsParam::set_type(::api::KeyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExistsParam.type)
}

// optional string value = 2;
void KeystoreCommonExistsParam::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KeystoreCommonExistsParam::value() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExistsParam.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonExistsParam::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExistsParam.value)
}
void KeystoreCommonExistsParam::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonExistsParam.value)
}
void KeystoreCommonExistsParam::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonExistsParam.value)
}
::std::string* KeystoreCommonExistsParam::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonExistsParam.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeystoreCommonExistsParam::release_value() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonExistsParam.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonExistsParam::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonExistsParam.value)
}

inline const KeystoreCommonExistsParam* KeystoreCommonExistsParam::internal_default_instance() {
  return &KeystoreCommonExistsParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeystoreCommonExistsResult::kIsExistsFieldNumber;
const int KeystoreCommonExistsResult::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeystoreCommonExistsResult::KeystoreCommonExistsResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.KeystoreCommonExistsResult)
}

void KeystoreCommonExistsResult::InitAsDefaultInstance() {
}

KeystoreCommonExistsResult::KeystoreCommonExistsResult(const KeystoreCommonExistsResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.KeystoreCommonExistsResult)
}

void KeystoreCommonExistsResult::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isexists_ = false;
  _cached_size_ = 0;
}

KeystoreCommonExistsResult::~KeystoreCommonExistsResult() {
  // @@protoc_insertion_point(destructor:api.KeystoreCommonExistsResult)
  SharedDtor();
}

void KeystoreCommonExistsResult::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeystoreCommonExistsResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeystoreCommonExistsResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeystoreCommonExistsResult_descriptor_;
}

const KeystoreCommonExistsResult& KeystoreCommonExistsResult::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KeystoreCommonExistsResult> KeystoreCommonExistsResult_default_instance_;

KeystoreCommonExistsResult* KeystoreCommonExistsResult::New(::google::protobuf::Arena* arena) const {
  KeystoreCommonExistsResult* n = new KeystoreCommonExistsResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeystoreCommonExistsResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.KeystoreCommonExistsResult)
  isexists_ = false;
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KeystoreCommonExistsResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.KeystoreCommonExistsResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool isExists = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isexists_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.KeystoreCommonExistsResult.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.KeystoreCommonExistsResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.KeystoreCommonExistsResult)
  return false;
#undef DO_
}

void KeystoreCommonExistsResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.KeystoreCommonExistsResult)
  // optional bool isExists = 1;
  if (this->isexists() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isexists(), output);
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonExistsResult.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.KeystoreCommonExistsResult)
}

::google::protobuf::uint8* KeystoreCommonExistsResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.KeystoreCommonExistsResult)
  // optional bool isExists = 1;
  if (this->isexists() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isexists(), target);
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonExistsResult.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.KeystoreCommonExistsResult)
  return target;
}

size_t KeystoreCommonExistsResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.KeystoreCommonExistsResult)
  size_t total_size = 0;

  // optional bool isExists = 1;
  if (this->isexists() != 0) {
    total_size += 1 + 1;
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeystoreCommonExistsResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.KeystoreCommonExistsResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KeystoreCommonExistsResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeystoreCommonExistsResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.KeystoreCommonExistsResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.KeystoreCommonExistsResult)
    UnsafeMergeFrom(*source);
  }
}

void KeystoreCommonExistsResult::MergeFrom(const KeystoreCommonExistsResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.KeystoreCommonExistsResult)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KeystoreCommonExistsResult::UnsafeMergeFrom(const KeystoreCommonExistsResult& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.isexists() != 0) {
    set_isexists(from.isexists());
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void KeystoreCommonExistsResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.KeystoreCommonExistsResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeystoreCommonExistsResult::CopyFrom(const KeystoreCommonExistsResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.KeystoreCommonExistsResult)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KeystoreCommonExistsResult::IsInitialized() const {

  return true;
}

void KeystoreCommonExistsResult::Swap(KeystoreCommonExistsResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeystoreCommonExistsResult::InternalSwap(KeystoreCommonExistsResult* other) {
  std::swap(isexists_, other->isexists_);
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeystoreCommonExistsResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeystoreCommonExistsResult_descriptor_;
  metadata.reflection = KeystoreCommonExistsResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeystoreCommonExistsResult

// optional bool isExists = 1;
void KeystoreCommonExistsResult::clear_isexists() {
  isexists_ = false;
}
bool KeystoreCommonExistsResult::isexists() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExistsResult.isExists)
  return isexists_;
}
void KeystoreCommonExistsResult::set_isexists(bool value) {
  
  isexists_ = value;
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExistsResult.isExists)
}

// optional string id = 2;
void KeystoreCommonExistsResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KeystoreCommonExistsResult::id() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExistsResult.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonExistsResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExistsResult.id)
}
void KeystoreCommonExistsResult::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonExistsResult.id)
}
void KeystoreCommonExistsResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonExistsResult.id)
}
::std::string* KeystoreCommonExistsResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonExistsResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeystoreCommonExistsResult::release_id() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonExistsResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonExistsResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonExistsResult.id)
}

inline const KeystoreCommonExistsResult* KeystoreCommonExistsResult::internal_default_instance() {
  return &KeystoreCommonExistsResult_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeystoreCommonAccountsParam::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeystoreCommonAccountsParam::KeystoreCommonAccountsParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.KeystoreCommonAccountsParam)
}

void KeystoreCommonAccountsParam::InitAsDefaultInstance() {
}

KeystoreCommonAccountsParam::KeystoreCommonAccountsParam(const KeystoreCommonAccountsParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.KeystoreCommonAccountsParam)
}

void KeystoreCommonAccountsParam::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

KeystoreCommonAccountsParam::~KeystoreCommonAccountsParam() {
  // @@protoc_insertion_point(destructor:api.KeystoreCommonAccountsParam)
  SharedDtor();
}

void KeystoreCommonAccountsParam::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeystoreCommonAccountsParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeystoreCommonAccountsParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeystoreCommonAccountsParam_descriptor_;
}

const KeystoreCommonAccountsParam& KeystoreCommonAccountsParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KeystoreCommonAccountsParam> KeystoreCommonAccountsParam_default_instance_;

KeystoreCommonAccountsParam* KeystoreCommonAccountsParam::New(::google::protobuf::Arena* arena) const {
  KeystoreCommonAccountsParam* n = new KeystoreCommonAccountsParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeystoreCommonAccountsParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.KeystoreCommonAccountsParam)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KeystoreCommonAccountsParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.KeystoreCommonAccountsParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.KeystoreCommonAccountsParam.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.KeystoreCommonAccountsParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.KeystoreCommonAccountsParam)
  return false;
#undef DO_
}

void KeystoreCommonAccountsParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.KeystoreCommonAccountsParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonAccountsParam.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.KeystoreCommonAccountsParam)
}

::google::protobuf::uint8* KeystoreCommonAccountsParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.KeystoreCommonAccountsParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.KeystoreCommonAccountsParam.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.KeystoreCommonAccountsParam)
  return target;
}

size_t KeystoreCommonAccountsParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.KeystoreCommonAccountsParam)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeystoreCommonAccountsParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.KeystoreCommonAccountsParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KeystoreCommonAccountsParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeystoreCommonAccountsParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.KeystoreCommonAccountsParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.KeystoreCommonAccountsParam)
    UnsafeMergeFrom(*source);
  }
}

void KeystoreCommonAccountsParam::MergeFrom(const KeystoreCommonAccountsParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.KeystoreCommonAccountsParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KeystoreCommonAccountsParam::UnsafeMergeFrom(const KeystoreCommonAccountsParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void KeystoreCommonAccountsParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.KeystoreCommonAccountsParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeystoreCommonAccountsParam::CopyFrom(const KeystoreCommonAccountsParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.KeystoreCommonAccountsParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KeystoreCommonAccountsParam::IsInitialized() const {

  return true;
}

void KeystoreCommonAccountsParam::Swap(KeystoreCommonAccountsParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeystoreCommonAccountsParam::InternalSwap(KeystoreCommonAccountsParam* other) {
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeystoreCommonAccountsParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeystoreCommonAccountsParam_descriptor_;
  metadata.reflection = KeystoreCommonAccountsParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeystoreCommonAccountsParam

// optional string id = 1;
void KeystoreCommonAccountsParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KeystoreCommonAccountsParam::id() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonAccountsParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonAccountsParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonAccountsParam.id)
}
void KeystoreCommonAccountsParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonAccountsParam.id)
}
void KeystoreCommonAccountsParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonAccountsParam.id)
}
::std::string* KeystoreCommonAccountsParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonAccountsParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeystoreCommonAccountsParam::release_id() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonAccountsParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeystoreCommonAccountsParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonAccountsParam.id)
}

inline const KeystoreCommonAccountsParam* KeystoreCommonAccountsParam::internal_default_instance() {
  return &KeystoreCommonAccountsParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignParam::kIdFieldNumber;
const int SignParam::kPasswordFieldNumber;
const int SignParam::kChainTypeFieldNumber;
const int SignParam::kAddressFieldNumber;
const int SignParam::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignParam::SignParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SignParam)
}

void SignParam::InitAsDefaultInstance() {
  input_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

SignParam::SignParam(const SignParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.SignParam)
}

void SignParam::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_ = NULL;
  _cached_size_ = 0;
}

SignParam::~SignParam() {
  // @@protoc_insertion_point(destructor:api.SignParam)
  SharedDtor();
}

void SignParam::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &SignParam_default_instance_.get()) {
    delete input_;
  }
}

void SignParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SignParam_descriptor_;
}

const SignParam& SignParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SignParam> SignParam_default_instance_;

SignParam* SignParam::New(::google::protobuf::Arena* arena) const {
  SignParam* n = new SignParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SignParam)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && input_ != NULL) delete input_;
  input_ = NULL;
}

bool SignParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SignParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SignParam.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SignParam.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chainType;
        break;
      }

      // optional string chainType = 3;
      case 3: {
        if (tag == 26) {
         parse_chainType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SignParam.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_address;
        break;
      }

      // optional string address = 4;
      case 4: {
        if (tag == 34) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SignParam.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_input;
        break;
      }

      // optional .google.protobuf.Any input = 5;
      case 5: {
        if (tag == 42) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SignParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SignParam)
  return false;
#undef DO_
}

void SignParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SignParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignParam.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignParam.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignParam.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chaintype(), output);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignParam.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // optional .google.protobuf.Any input = 5;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->input_, output);
  }

  // @@protoc_insertion_point(serialize_end:api.SignParam)
}

::google::protobuf::uint8* SignParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SignParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignParam.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignParam.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignParam.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chaintype(), target);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignParam.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // optional .google.protobuf.Any input = 5;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->input_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.SignParam)
  return target;
}

size_t SignParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SignParam)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional .google.protobuf.Any input = 5;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->input_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SignParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SignParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SignParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SignParam)
    UnsafeMergeFrom(*source);
  }
}

void SignParam::MergeFrom(const SignParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SignParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SignParam::UnsafeMergeFrom(const SignParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_input()) {
    mutable_input()->::google::protobuf::Any::MergeFrom(from.input());
  }
}

void SignParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SignParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignParam::CopyFrom(const SignParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SignParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SignParam::IsInitialized() const {

  return true;
}

void SignParam::Swap(SignParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignParam::InternalSwap(SignParam* other) {
  id_.Swap(&other->id_);
  password_.Swap(&other->password_);
  chaintype_.Swap(&other->chaintype_);
  address_.Swap(&other->address_);
  std::swap(input_, other->input_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SignParam_descriptor_;
  metadata.reflection = SignParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignParam

// optional string id = 1;
void SignParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::id() const {
  // @@protoc_insertion_point(field_get:api.SignParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.SignParam.id)
}
void SignParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.SignParam.id)
}
void SignParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.SignParam.id)
}
::std::string* SignParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.SignParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_id() {
  // @@protoc_insertion_point(field_release:api.SignParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.id)
}

// optional string password = 2;
void SignParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::password() const {
  // @@protoc_insertion_point(field_get:api.SignParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.SignParam.password)
}
void SignParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.SignParam.password)
}
void SignParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.SignParam.password)
}
::std::string* SignParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.SignParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_password() {
  // @@protoc_insertion_point(field_release:api.SignParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.password)
}

// optional string chainType = 3;
void SignParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.SignParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.SignParam.chainType)
}
void SignParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.SignParam.chainType)
}
void SignParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.SignParam.chainType)
}
::std::string* SignParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.SignParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.SignParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.chainType)
}

// optional string address = 4;
void SignParam::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SignParam::address() const {
  // @@protoc_insertion_point(field_get:api.SignParam.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.SignParam.address)
}
void SignParam::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.SignParam.address)
}
void SignParam::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.SignParam.address)
}
::std::string* SignParam::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.SignParam.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignParam::release_address() {
  // @@protoc_insertion_point(field_release:api.SignParam.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignParam::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.address)
}

// optional .google.protobuf.Any input = 5;
bool SignParam::has_input() const {
  return this != internal_default_instance() && input_ != NULL;
}
void SignParam::clear_input() {
  if (GetArenaNoVirtual() == NULL && input_ != NULL) delete input_;
  input_ = NULL;
}
const ::google::protobuf::Any& SignParam::input() const {
  // @@protoc_insertion_point(field_get:api.SignParam.input)
  return input_ != NULL ? *input_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* SignParam::mutable_input() {
  
  if (input_ == NULL) {
    input_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:api.SignParam.input)
  return input_;
}
::google::protobuf::Any* SignParam::release_input() {
  // @@protoc_insertion_point(field_release:api.SignParam.input)
  
  ::google::protobuf::Any* temp = input_;
  input_ = NULL;
  return temp;
}
void SignParam::set_allocated_input(::google::protobuf::Any* input) {
  delete input_;
  input_ = input;
  if (input) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.input)
}

inline const SignParam* SignParam::internal_default_instance() {
  return &SignParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternalAddressParam::kIdFieldNumber;
const int ExternalAddressParam::kChainTypeFieldNumber;
const int ExternalAddressParam::kExternalIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternalAddressParam::ExternalAddressParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ExternalAddressParam)
}

void ExternalAddressParam::InitAsDefaultInstance() {
}

ExternalAddressParam::ExternalAddressParam(const ExternalAddressParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.ExternalAddressParam)
}

void ExternalAddressParam::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externalidx_ = 0u;
  _cached_size_ = 0;
}

ExternalAddressParam::~ExternalAddressParam() {
  // @@protoc_insertion_point(destructor:api.ExternalAddressParam)
  SharedDtor();
}

void ExternalAddressParam::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExternalAddressParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternalAddressParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternalAddressParam_descriptor_;
}

const ExternalAddressParam& ExternalAddressParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ExternalAddressParam> ExternalAddressParam_default_instance_;

ExternalAddressParam* ExternalAddressParam::New(::google::protobuf::Arena* arena) const {
  ExternalAddressParam* n = new ExternalAddressParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExternalAddressParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ExternalAddressParam)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externalidx_ = 0u;
}

bool ExternalAddressParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ExternalAddressParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressParam.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_chainType;
        break;
      }

      // optional string chainType = 2;
      case 2: {
        if (tag == 18) {
         parse_chainType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressParam.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_externalIdx;
        break;
      }

      // optional uint32 externalIdx = 3;
      case 3: {
        if (tag == 24) {
         parse_externalIdx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &externalidx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ExternalAddressParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ExternalAddressParam)
  return false;
#undef DO_
}

void ExternalAddressParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ExternalAddressParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressParam.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string chainType = 2;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressParam.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chaintype(), output);
  }

  // optional uint32 externalIdx = 3;
  if (this->externalidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->externalidx(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.ExternalAddressParam)
}

::google::protobuf::uint8* ExternalAddressParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ExternalAddressParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressParam.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string chainType = 2;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressParam.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chaintype(), target);
  }

  // optional uint32 externalIdx = 3;
  if (this->externalidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->externalidx(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.ExternalAddressParam)
  return target;
}

size_t ExternalAddressParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ExternalAddressParam)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string chainType = 2;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional uint32 externalIdx = 3;
  if (this->externalidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->externalidx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternalAddressParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ExternalAddressParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExternalAddressParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternalAddressParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ExternalAddressParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ExternalAddressParam)
    UnsafeMergeFrom(*source);
  }
}

void ExternalAddressParam::MergeFrom(const ExternalAddressParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ExternalAddressParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ExternalAddressParam::UnsafeMergeFrom(const ExternalAddressParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.externalidx() != 0) {
    set_externalidx(from.externalidx());
  }
}

void ExternalAddressParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ExternalAddressParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalAddressParam::CopyFrom(const ExternalAddressParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ExternalAddressParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ExternalAddressParam::IsInitialized() const {

  return true;
}

void ExternalAddressParam::Swap(ExternalAddressParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternalAddressParam::InternalSwap(ExternalAddressParam* other) {
  id_.Swap(&other->id_);
  chaintype_.Swap(&other->chaintype_);
  std::swap(externalidx_, other->externalidx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExternalAddressParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternalAddressParam_descriptor_;
  metadata.reflection = ExternalAddressParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExternalAddressParam

// optional string id = 1;
void ExternalAddressParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressParam::id() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressParam.id)
}
void ExternalAddressParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressParam.id)
}
void ExternalAddressParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressParam.id)
}
::std::string* ExternalAddressParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressParam::release_id() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressParam.id)
}

// optional string chainType = 2;
void ExternalAddressParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressParam.chainType)
}
void ExternalAddressParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressParam.chainType)
}
void ExternalAddressParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressParam.chainType)
}
::std::string* ExternalAddressParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressParam.chainType)
}

// optional uint32 externalIdx = 3;
void ExternalAddressParam::clear_externalidx() {
  externalidx_ = 0u;
}
::google::protobuf::uint32 ExternalAddressParam::externalidx() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressParam.externalIdx)
  return externalidx_;
}
void ExternalAddressParam::set_externalidx(::google::protobuf::uint32 value) {
  
  externalidx_ = value;
  // @@protoc_insertion_point(field_set:api.ExternalAddressParam.externalIdx)
}

inline const ExternalAddressParam* ExternalAddressParam::internal_default_instance() {
  return &ExternalAddressParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternalAddressResult::kAddressFieldNumber;
const int ExternalAddressResult::kDerivedPathFieldNumber;
const int ExternalAddressResult::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternalAddressResult::ExternalAddressResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ExternalAddressResult)
}

void ExternalAddressResult::InitAsDefaultInstance() {
}

ExternalAddressResult::ExternalAddressResult(const ExternalAddressResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.ExternalAddressResult)
}

void ExternalAddressResult::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ExternalAddressResult::~ExternalAddressResult() {
  // @@protoc_insertion_point(destructor:api.ExternalAddressResult)
  SharedDtor();
}

void ExternalAddressResult::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExternalAddressResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternalAddressResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternalAddressResult_descriptor_;
}

const ExternalAddressResult& ExternalAddressResult::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ExternalAddressResult> ExternalAddressResult_default_instance_;

ExternalAddressResult* ExternalAddressResult::New(::google::protobuf::Arena* arena) const {
  ExternalAddressResult* n = new ExternalAddressResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExternalAddressResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ExternalAddressResult)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ExternalAddressResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ExternalAddressResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressResult.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_derivedPath;
        break;
      }

      // optional string derivedPath = 2;
      case 2: {
        if (tag == 18) {
         parse_derivedPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_derivedpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->derivedpath().data(), this->derivedpath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressResult.derivedPath"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressResult.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ExternalAddressResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ExternalAddressResult)
  return false;
#undef DO_
}

void ExternalAddressResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ExternalAddressResult)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressResult.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // optional string derivedPath = 2;
  if (this->derivedpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->derivedpath().data(), this->derivedpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressResult.derivedPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->derivedpath(), output);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressResult.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.ExternalAddressResult)
}

::google::protobuf::uint8* ExternalAddressResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ExternalAddressResult)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressResult.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // optional string derivedPath = 2;
  if (this->derivedpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->derivedpath().data(), this->derivedpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressResult.derivedPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->derivedpath(), target);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressResult.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.ExternalAddressResult)
  return target;
}

size_t ExternalAddressResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ExternalAddressResult)
  size_t total_size = 0;

  // optional string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional string derivedPath = 2;
  if (this->derivedpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->derivedpath());
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternalAddressResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ExternalAddressResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExternalAddressResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternalAddressResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ExternalAddressResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ExternalAddressResult)
    UnsafeMergeFrom(*source);
  }
}

void ExternalAddressResult::MergeFrom(const ExternalAddressResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ExternalAddressResult)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ExternalAddressResult::UnsafeMergeFrom(const ExternalAddressResult& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.derivedpath().size() > 0) {

    derivedpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.derivedpath_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void ExternalAddressResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ExternalAddressResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalAddressResult::CopyFrom(const ExternalAddressResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ExternalAddressResult)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ExternalAddressResult::IsInitialized() const {

  return true;
}

void ExternalAddressResult::Swap(ExternalAddressResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternalAddressResult::InternalSwap(ExternalAddressResult* other) {
  address_.Swap(&other->address_);
  derivedpath_.Swap(&other->derivedpath_);
  type_.Swap(&other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExternalAddressResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternalAddressResult_descriptor_;
  metadata.reflection = ExternalAddressResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExternalAddressResult

// optional string address = 1;
void ExternalAddressResult::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressResult::address() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressResult.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressResult::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressResult.address)
}
void ExternalAddressResult::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressResult.address)
}
void ExternalAddressResult::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressResult.address)
}
::std::string* ExternalAddressResult::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressResult.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressResult::release_address() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressResult.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressResult::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressResult.address)
}

// optional string derivedPath = 2;
void ExternalAddressResult::clear_derivedpath() {
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressResult::derivedpath() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressResult.derivedPath)
  return derivedpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressResult::set_derivedpath(const ::std::string& value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressResult.derivedPath)
}
void ExternalAddressResult::set_derivedpath(const char* value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressResult.derivedPath)
}
void ExternalAddressResult::set_derivedpath(const char* value, size_t size) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressResult.derivedPath)
}
::std::string* ExternalAddressResult::mutable_derivedpath() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressResult.derivedPath)
  return derivedpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressResult::release_derivedpath() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressResult.derivedPath)
  
  return derivedpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressResult::set_allocated_derivedpath(::std::string* derivedpath) {
  if (derivedpath != NULL) {
    
  } else {
    
  }
  derivedpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), derivedpath);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressResult.derivedPath)
}

// optional string type = 3;
void ExternalAddressResult::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressResult::type() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressResult.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressResult::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressResult.type)
}
void ExternalAddressResult::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressResult.type)
}
void ExternalAddressResult::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressResult.type)
}
::std::string* ExternalAddressResult::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressResult.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressResult::release_type() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressResult.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressResult::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressResult.type)
}

inline const ExternalAddressResult* ExternalAddressResult::internal_default_instance() {
  return &ExternalAddressResult_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternalAddressExtra_ExternalAddress::kAddressFieldNumber;
const int ExternalAddressExtra_ExternalAddress::kDerivedPathFieldNumber;
const int ExternalAddressExtra_ExternalAddress::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternalAddressExtra_ExternalAddress::ExternalAddressExtra_ExternalAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ExternalAddressExtra.ExternalAddress)
}

void ExternalAddressExtra_ExternalAddress::InitAsDefaultInstance() {
}

ExternalAddressExtra_ExternalAddress::ExternalAddressExtra_ExternalAddress(const ExternalAddressExtra_ExternalAddress& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.ExternalAddressExtra.ExternalAddress)
}

void ExternalAddressExtra_ExternalAddress::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ExternalAddressExtra_ExternalAddress::~ExternalAddressExtra_ExternalAddress() {
  // @@protoc_insertion_point(destructor:api.ExternalAddressExtra.ExternalAddress)
  SharedDtor();
}

void ExternalAddressExtra_ExternalAddress::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExternalAddressExtra_ExternalAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternalAddressExtra_ExternalAddress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternalAddressExtra_ExternalAddress_descriptor_;
}

const ExternalAddressExtra_ExternalAddress& ExternalAddressExtra_ExternalAddress::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ExternalAddressExtra_ExternalAddress> ExternalAddressExtra_ExternalAddress_default_instance_;

ExternalAddressExtra_ExternalAddress* ExternalAddressExtra_ExternalAddress::New(::google::protobuf::Arena* arena) const {
  ExternalAddressExtra_ExternalAddress* n = new ExternalAddressExtra_ExternalAddress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExternalAddressExtra_ExternalAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ExternalAddressExtra.ExternalAddress)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ExternalAddressExtra_ExternalAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ExternalAddressExtra.ExternalAddress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressExtra.ExternalAddress.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_derivedPath;
        break;
      }

      // optional string derivedPath = 2;
      case 2: {
        if (tag == 18) {
         parse_derivedPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_derivedpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->derivedpath().data(), this->derivedpath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressExtra.ExternalAddress.derivedPath"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressExtra.ExternalAddress.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ExternalAddressExtra.ExternalAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ExternalAddressExtra.ExternalAddress)
  return false;
#undef DO_
}

void ExternalAddressExtra_ExternalAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ExternalAddressExtra.ExternalAddress)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressExtra.ExternalAddress.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // optional string derivedPath = 2;
  if (this->derivedpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->derivedpath().data(), this->derivedpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressExtra.ExternalAddress.derivedPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->derivedpath(), output);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressExtra.ExternalAddress.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.ExternalAddressExtra.ExternalAddress)
}

::google::protobuf::uint8* ExternalAddressExtra_ExternalAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ExternalAddressExtra.ExternalAddress)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressExtra.ExternalAddress.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // optional string derivedPath = 2;
  if (this->derivedpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->derivedpath().data(), this->derivedpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressExtra.ExternalAddress.derivedPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->derivedpath(), target);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressExtra.ExternalAddress.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.ExternalAddressExtra.ExternalAddress)
  return target;
}

size_t ExternalAddressExtra_ExternalAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ExternalAddressExtra.ExternalAddress)
  size_t total_size = 0;

  // optional string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional string derivedPath = 2;
  if (this->derivedpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->derivedpath());
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternalAddressExtra_ExternalAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ExternalAddressExtra.ExternalAddress)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExternalAddressExtra_ExternalAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternalAddressExtra_ExternalAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ExternalAddressExtra.ExternalAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ExternalAddressExtra.ExternalAddress)
    UnsafeMergeFrom(*source);
  }
}

void ExternalAddressExtra_ExternalAddress::MergeFrom(const ExternalAddressExtra_ExternalAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ExternalAddressExtra.ExternalAddress)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ExternalAddressExtra_ExternalAddress::UnsafeMergeFrom(const ExternalAddressExtra_ExternalAddress& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.derivedpath().size() > 0) {

    derivedpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.derivedpath_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void ExternalAddressExtra_ExternalAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ExternalAddressExtra.ExternalAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalAddressExtra_ExternalAddress::CopyFrom(const ExternalAddressExtra_ExternalAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ExternalAddressExtra.ExternalAddress)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ExternalAddressExtra_ExternalAddress::IsInitialized() const {

  return true;
}

void ExternalAddressExtra_ExternalAddress::Swap(ExternalAddressExtra_ExternalAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternalAddressExtra_ExternalAddress::InternalSwap(ExternalAddressExtra_ExternalAddress* other) {
  address_.Swap(&other->address_);
  derivedpath_.Swap(&other->derivedpath_);
  type_.Swap(&other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExternalAddressExtra_ExternalAddress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternalAddressExtra_ExternalAddress_descriptor_;
  metadata.reflection = ExternalAddressExtra_ExternalAddress_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternalAddressExtra::kEncXpubFieldNumber;
const int ExternalAddressExtra::kExternalAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternalAddressExtra::ExternalAddressExtra()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ExternalAddressExtra)
}

void ExternalAddressExtra::InitAsDefaultInstance() {
  externaladdress_ = const_cast< ::api::ExternalAddressExtra_ExternalAddress*>(
      ::api::ExternalAddressExtra_ExternalAddress::internal_default_instance());
}

ExternalAddressExtra::ExternalAddressExtra(const ExternalAddressExtra& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.ExternalAddressExtra)
}

void ExternalAddressExtra::SharedCtor() {
  encxpub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externaladdress_ = NULL;
  _cached_size_ = 0;
}

ExternalAddressExtra::~ExternalAddressExtra() {
  // @@protoc_insertion_point(destructor:api.ExternalAddressExtra)
  SharedDtor();
}

void ExternalAddressExtra::SharedDtor() {
  encxpub_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ExternalAddressExtra_default_instance_.get()) {
    delete externaladdress_;
  }
}

void ExternalAddressExtra::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternalAddressExtra::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternalAddressExtra_descriptor_;
}

const ExternalAddressExtra& ExternalAddressExtra::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ExternalAddressExtra> ExternalAddressExtra_default_instance_;

ExternalAddressExtra* ExternalAddressExtra::New(::google::protobuf::Arena* arena) const {
  ExternalAddressExtra* n = new ExternalAddressExtra;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExternalAddressExtra::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ExternalAddressExtra)
  encxpub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && externaladdress_ != NULL) delete externaladdress_;
  externaladdress_ = NULL;
}

bool ExternalAddressExtra::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ExternalAddressExtra)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string encXpub = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encxpub()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->encxpub().data(), this->encxpub().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ExternalAddressExtra.encXpub"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_externalAddress;
        break;
      }

      // optional .api.ExternalAddressExtra.ExternalAddress externalAddress = 2;
      case 2: {
        if (tag == 18) {
         parse_externalAddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_externaladdress()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ExternalAddressExtra)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ExternalAddressExtra)
  return false;
#undef DO_
}

void ExternalAddressExtra::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ExternalAddressExtra)
  // optional string encXpub = 1;
  if (this->encxpub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->encxpub().data(), this->encxpub().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressExtra.encXpub");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->encxpub(), output);
  }

  // optional .api.ExternalAddressExtra.ExternalAddress externalAddress = 2;
  if (this->has_externaladdress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->externaladdress_, output);
  }

  // @@protoc_insertion_point(serialize_end:api.ExternalAddressExtra)
}

::google::protobuf::uint8* ExternalAddressExtra::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ExternalAddressExtra)
  // optional string encXpub = 1;
  if (this->encxpub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->encxpub().data(), this->encxpub().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ExternalAddressExtra.encXpub");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->encxpub(), target);
  }

  // optional .api.ExternalAddressExtra.ExternalAddress externalAddress = 2;
  if (this->has_externaladdress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->externaladdress_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.ExternalAddressExtra)
  return target;
}

size_t ExternalAddressExtra::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ExternalAddressExtra)
  size_t total_size = 0;

  // optional string encXpub = 1;
  if (this->encxpub().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->encxpub());
  }

  // optional .api.ExternalAddressExtra.ExternalAddress externalAddress = 2;
  if (this->has_externaladdress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->externaladdress_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternalAddressExtra::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ExternalAddressExtra)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExternalAddressExtra* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternalAddressExtra>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ExternalAddressExtra)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ExternalAddressExtra)
    UnsafeMergeFrom(*source);
  }
}

void ExternalAddressExtra::MergeFrom(const ExternalAddressExtra& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ExternalAddressExtra)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ExternalAddressExtra::UnsafeMergeFrom(const ExternalAddressExtra& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.encxpub().size() > 0) {

    encxpub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encxpub_);
  }
  if (from.has_externaladdress()) {
    mutable_externaladdress()->::api::ExternalAddressExtra_ExternalAddress::MergeFrom(from.externaladdress());
  }
}

void ExternalAddressExtra::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ExternalAddressExtra)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalAddressExtra::CopyFrom(const ExternalAddressExtra& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ExternalAddressExtra)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ExternalAddressExtra::IsInitialized() const {

  return true;
}

void ExternalAddressExtra::Swap(ExternalAddressExtra* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternalAddressExtra::InternalSwap(ExternalAddressExtra* other) {
  encxpub_.Swap(&other->encxpub_);
  std::swap(externaladdress_, other->externaladdress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExternalAddressExtra::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternalAddressExtra_descriptor_;
  metadata.reflection = ExternalAddressExtra_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExternalAddressExtra_ExternalAddress

// optional string address = 1;
void ExternalAddressExtra_ExternalAddress::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressExtra_ExternalAddress::address() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.ExternalAddress.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressExtra_ExternalAddress::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressExtra.ExternalAddress.address)
}
void ExternalAddressExtra_ExternalAddress::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressExtra.ExternalAddress.address)
}
void ExternalAddressExtra_ExternalAddress::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressExtra.ExternalAddress.address)
}
::std::string* ExternalAddressExtra_ExternalAddress::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.ExternalAddress.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressExtra_ExternalAddress::release_address() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.ExternalAddress.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressExtra_ExternalAddress::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.ExternalAddress.address)
}

// optional string derivedPath = 2;
void ExternalAddressExtra_ExternalAddress::clear_derivedpath() {
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressExtra_ExternalAddress::derivedpath() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.ExternalAddress.derivedPath)
  return derivedpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressExtra_ExternalAddress::set_derivedpath(const ::std::string& value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressExtra.ExternalAddress.derivedPath)
}
void ExternalAddressExtra_ExternalAddress::set_derivedpath(const char* value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressExtra.ExternalAddress.derivedPath)
}
void ExternalAddressExtra_ExternalAddress::set_derivedpath(const char* value, size_t size) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressExtra.ExternalAddress.derivedPath)
}
::std::string* ExternalAddressExtra_ExternalAddress::mutable_derivedpath() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.ExternalAddress.derivedPath)
  return derivedpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressExtra_ExternalAddress::release_derivedpath() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.ExternalAddress.derivedPath)
  
  return derivedpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressExtra_ExternalAddress::set_allocated_derivedpath(::std::string* derivedpath) {
  if (derivedpath != NULL) {
    
  } else {
    
  }
  derivedpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), derivedpath);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.ExternalAddress.derivedPath)
}

// optional string type = 3;
void ExternalAddressExtra_ExternalAddress::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressExtra_ExternalAddress::type() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.ExternalAddress.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressExtra_ExternalAddress::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressExtra.ExternalAddress.type)
}
void ExternalAddressExtra_ExternalAddress::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressExtra.ExternalAddress.type)
}
void ExternalAddressExtra_ExternalAddress::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressExtra.ExternalAddress.type)
}
::std::string* ExternalAddressExtra_ExternalAddress::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.ExternalAddress.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressExtra_ExternalAddress::release_type() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.ExternalAddress.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressExtra_ExternalAddress::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.ExternalAddress.type)
}

inline const ExternalAddressExtra_ExternalAddress* ExternalAddressExtra_ExternalAddress::internal_default_instance() {
  return &ExternalAddressExtra_ExternalAddress_default_instance_.get();
}
// -------------------------------------------------------------------

// ExternalAddressExtra

// optional string encXpub = 1;
void ExternalAddressExtra::clear_encxpub() {
  encxpub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternalAddressExtra::encxpub() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.encXpub)
  return encxpub_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressExtra::set_encxpub(const ::std::string& value) {
  
  encxpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressExtra.encXpub)
}
void ExternalAddressExtra::set_encxpub(const char* value) {
  
  encxpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressExtra.encXpub)
}
void ExternalAddressExtra::set_encxpub(const char* value, size_t size) {
  
  encxpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressExtra.encXpub)
}
::std::string* ExternalAddressExtra::mutable_encxpub() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.encXpub)
  return encxpub_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternalAddressExtra::release_encxpub() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.encXpub)
  
  return encxpub_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternalAddressExtra::set_allocated_encxpub(::std::string* encxpub) {
  if (encxpub != NULL) {
    
  } else {
    
  }
  encxpub_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encxpub);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.encXpub)
}

// optional .api.ExternalAddressExtra.ExternalAddress externalAddress = 2;
bool ExternalAddressExtra::has_externaladdress() const {
  return this != internal_default_instance() && externaladdress_ != NULL;
}
void ExternalAddressExtra::clear_externaladdress() {
  if (GetArenaNoVirtual() == NULL && externaladdress_ != NULL) delete externaladdress_;
  externaladdress_ = NULL;
}
const ::api::ExternalAddressExtra_ExternalAddress& ExternalAddressExtra::externaladdress() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.externalAddress)
  return externaladdress_ != NULL ? *externaladdress_
                         : *::api::ExternalAddressExtra_ExternalAddress::internal_default_instance();
}
::api::ExternalAddressExtra_ExternalAddress* ExternalAddressExtra::mutable_externaladdress() {
  
  if (externaladdress_ == NULL) {
    externaladdress_ = new ::api::ExternalAddressExtra_ExternalAddress;
  }
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.externalAddress)
  return externaladdress_;
}
::api::ExternalAddressExtra_ExternalAddress* ExternalAddressExtra::release_externaladdress() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.externalAddress)
  
  ::api::ExternalAddressExtra_ExternalAddress* temp = externaladdress_;
  externaladdress_ = NULL;
  return temp;
}
void ExternalAddressExtra::set_allocated_externaladdress(::api::ExternalAddressExtra_ExternalAddress* externaladdress) {
  delete externaladdress_;
  externaladdress_ = externaladdress;
  if (externaladdress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.externalAddress)
}

inline const ExternalAddressExtra* ExternalAddressExtra::internal_default_instance() {
  return &ExternalAddressExtra_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BtcForkDeriveExtraParam::kNetworkFieldNumber;
const int BtcForkDeriveExtraParam::kSegWitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BtcForkDeriveExtraParam::BtcForkDeriveExtraParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.BtcForkDeriveExtraParam)
}

void BtcForkDeriveExtraParam::InitAsDefaultInstance() {
}

BtcForkDeriveExtraParam::BtcForkDeriveExtraParam(const BtcForkDeriveExtraParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.BtcForkDeriveExtraParam)
}

void BtcForkDeriveExtraParam::SharedCtor() {
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BtcForkDeriveExtraParam::~BtcForkDeriveExtraParam() {
  // @@protoc_insertion_point(destructor:api.BtcForkDeriveExtraParam)
  SharedDtor();
}

void BtcForkDeriveExtraParam::SharedDtor() {
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BtcForkDeriveExtraParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BtcForkDeriveExtraParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BtcForkDeriveExtraParam_descriptor_;
}

const BtcForkDeriveExtraParam& BtcForkDeriveExtraParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BtcForkDeriveExtraParam> BtcForkDeriveExtraParam_default_instance_;

BtcForkDeriveExtraParam* BtcForkDeriveExtraParam::New(::google::protobuf::Arena* arena) const {
  BtcForkDeriveExtraParam* n = new BtcForkDeriveExtraParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BtcForkDeriveExtraParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.BtcForkDeriveExtraParam)
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BtcForkDeriveExtraParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.BtcForkDeriveExtraParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string network = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.BtcForkDeriveExtraParam.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_segWit;
        break;
      }

      // optional string segWit = 2;
      case 2: {
        if (tag == 18) {
         parse_segWit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segwit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segwit().data(), this->segwit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.BtcForkDeriveExtraParam.segWit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.BtcForkDeriveExtraParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.BtcForkDeriveExtraParam)
  return false;
#undef DO_
}

void BtcForkDeriveExtraParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.BtcForkDeriveExtraParam)
  // optional string network = 1;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.BtcForkDeriveExtraParam.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->network(), output);
  }

  // optional string segWit = 2;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.BtcForkDeriveExtraParam.segWit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->segwit(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.BtcForkDeriveExtraParam)
}

::google::protobuf::uint8* BtcForkDeriveExtraParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.BtcForkDeriveExtraParam)
  // optional string network = 1;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.BtcForkDeriveExtraParam.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->network(), target);
  }

  // optional string segWit = 2;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.BtcForkDeriveExtraParam.segWit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->segwit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.BtcForkDeriveExtraParam)
  return target;
}

size_t BtcForkDeriveExtraParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.BtcForkDeriveExtraParam)
  size_t total_size = 0;

  // optional string network = 1;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // optional string segWit = 2;
  if (this->segwit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segwit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BtcForkDeriveExtraParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.BtcForkDeriveExtraParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BtcForkDeriveExtraParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BtcForkDeriveExtraParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.BtcForkDeriveExtraParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.BtcForkDeriveExtraParam)
    UnsafeMergeFrom(*source);
  }
}

void BtcForkDeriveExtraParam::MergeFrom(const BtcForkDeriveExtraParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.BtcForkDeriveExtraParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BtcForkDeriveExtraParam::UnsafeMergeFrom(const BtcForkDeriveExtraParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.segwit().size() > 0) {

    segwit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segwit_);
  }
}

void BtcForkDeriveExtraParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.BtcForkDeriveExtraParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BtcForkDeriveExtraParam::CopyFrom(const BtcForkDeriveExtraParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.BtcForkDeriveExtraParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BtcForkDeriveExtraParam::IsInitialized() const {

  return true;
}

void BtcForkDeriveExtraParam::Swap(BtcForkDeriveExtraParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BtcForkDeriveExtraParam::InternalSwap(BtcForkDeriveExtraParam* other) {
  network_.Swap(&other->network_);
  segwit_.Swap(&other->segwit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BtcForkDeriveExtraParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BtcForkDeriveExtraParam_descriptor_;
  metadata.reflection = BtcForkDeriveExtraParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BtcForkDeriveExtraParam

// optional string network = 1;
void BtcForkDeriveExtraParam::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcForkDeriveExtraParam::network() const {
  // @@protoc_insertion_point(field_get:api.BtcForkDeriveExtraParam.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcForkDeriveExtraParam::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.BtcForkDeriveExtraParam.network)
}
void BtcForkDeriveExtraParam::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.BtcForkDeriveExtraParam.network)
}
void BtcForkDeriveExtraParam::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.BtcForkDeriveExtraParam.network)
}
::std::string* BtcForkDeriveExtraParam::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.BtcForkDeriveExtraParam.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcForkDeriveExtraParam::release_network() {
  // @@protoc_insertion_point(field_release:api.BtcForkDeriveExtraParam.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcForkDeriveExtraParam::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.BtcForkDeriveExtraParam.network)
}

// optional string segWit = 2;
void BtcForkDeriveExtraParam::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcForkDeriveExtraParam::segwit() const {
  // @@protoc_insertion_point(field_get:api.BtcForkDeriveExtraParam.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcForkDeriveExtraParam::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.BtcForkDeriveExtraParam.segWit)
}
void BtcForkDeriveExtraParam::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.BtcForkDeriveExtraParam.segWit)
}
void BtcForkDeriveExtraParam::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.BtcForkDeriveExtraParam.segWit)
}
::std::string* BtcForkDeriveExtraParam::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:api.BtcForkDeriveExtraParam.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcForkDeriveExtraParam::release_segwit() {
  // @@protoc_insertion_point(field_release:api.BtcForkDeriveExtraParam.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcForkDeriveExtraParam::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:api.BtcForkDeriveExtraParam.segWit)
}

inline const BtcForkDeriveExtraParam* BtcForkDeriveExtraParam::internal_default_instance() {
  return &BtcForkDeriveExtraParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HdStoreExtendedPublicKeyParam::kIdFieldNumber;
const int HdStoreExtendedPublicKeyParam::kPasswordFieldNumber;
const int HdStoreExtendedPublicKeyParam::kChainTypeFieldNumber;
const int HdStoreExtendedPublicKeyParam::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HdStoreExtendedPublicKeyParam::HdStoreExtendedPublicKeyParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.HdStoreExtendedPublicKeyParam)
}

void HdStoreExtendedPublicKeyParam::InitAsDefaultInstance() {
}

HdStoreExtendedPublicKeyParam::HdStoreExtendedPublicKeyParam(const HdStoreExtendedPublicKeyParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.HdStoreExtendedPublicKeyParam)
}

void HdStoreExtendedPublicKeyParam::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HdStoreExtendedPublicKeyParam::~HdStoreExtendedPublicKeyParam() {
  // @@protoc_insertion_point(destructor:api.HdStoreExtendedPublicKeyParam)
  SharedDtor();
}

void HdStoreExtendedPublicKeyParam::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HdStoreExtendedPublicKeyParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HdStoreExtendedPublicKeyParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HdStoreExtendedPublicKeyParam_descriptor_;
}

const HdStoreExtendedPublicKeyParam& HdStoreExtendedPublicKeyParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HdStoreExtendedPublicKeyParam> HdStoreExtendedPublicKeyParam_default_instance_;

HdStoreExtendedPublicKeyParam* HdStoreExtendedPublicKeyParam::New(::google::protobuf::Arena* arena) const {
  HdStoreExtendedPublicKeyParam* n = new HdStoreExtendedPublicKeyParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HdStoreExtendedPublicKeyParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.HdStoreExtendedPublicKeyParam)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HdStoreExtendedPublicKeyParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.HdStoreExtendedPublicKeyParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreExtendedPublicKeyParam.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreExtendedPublicKeyParam.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chainType;
        break;
      }

      // optional string chainType = 3;
      case 3: {
        if (tag == 26) {
         parse_chainType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), this->chaintype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreExtendedPublicKeyParam.chainType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_address;
        break;
      }

      // optional string address = 4;
      case 4: {
        if (tag == 34) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreExtendedPublicKeyParam.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.HdStoreExtendedPublicKeyParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.HdStoreExtendedPublicKeyParam)
  return false;
#undef DO_
}

void HdStoreExtendedPublicKeyParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.HdStoreExtendedPublicKeyParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyParam.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyParam.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyParam.chainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chaintype(), output);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyParam.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.HdStoreExtendedPublicKeyParam)
}

::google::protobuf::uint8* HdStoreExtendedPublicKeyParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.HdStoreExtendedPublicKeyParam)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyParam.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyParam.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), this->chaintype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyParam.chainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chaintype(), target);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyParam.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.HdStoreExtendedPublicKeyParam)
  return target;
}

size_t HdStoreExtendedPublicKeyParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.HdStoreExtendedPublicKeyParam)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string chainType = 3;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HdStoreExtendedPublicKeyParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.HdStoreExtendedPublicKeyParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HdStoreExtendedPublicKeyParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HdStoreExtendedPublicKeyParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.HdStoreExtendedPublicKeyParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.HdStoreExtendedPublicKeyParam)
    UnsafeMergeFrom(*source);
  }
}

void HdStoreExtendedPublicKeyParam::MergeFrom(const HdStoreExtendedPublicKeyParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.HdStoreExtendedPublicKeyParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HdStoreExtendedPublicKeyParam::UnsafeMergeFrom(const HdStoreExtendedPublicKeyParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void HdStoreExtendedPublicKeyParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.HdStoreExtendedPublicKeyParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HdStoreExtendedPublicKeyParam::CopyFrom(const HdStoreExtendedPublicKeyParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.HdStoreExtendedPublicKeyParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HdStoreExtendedPublicKeyParam::IsInitialized() const {

  return true;
}

void HdStoreExtendedPublicKeyParam::Swap(HdStoreExtendedPublicKeyParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HdStoreExtendedPublicKeyParam::InternalSwap(HdStoreExtendedPublicKeyParam* other) {
  id_.Swap(&other->id_);
  password_.Swap(&other->password_);
  chaintype_.Swap(&other->chaintype_);
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HdStoreExtendedPublicKeyParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HdStoreExtendedPublicKeyParam_descriptor_;
  metadata.reflection = HdStoreExtendedPublicKeyParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HdStoreExtendedPublicKeyParam

// optional string id = 1;
void HdStoreExtendedPublicKeyParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreExtendedPublicKeyParam::id() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyParam.id)
}
void HdStoreExtendedPublicKeyParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyParam.id)
}
void HdStoreExtendedPublicKeyParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyParam.id)
}
::std::string* HdStoreExtendedPublicKeyParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreExtendedPublicKeyParam::release_id() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyParam.id)
}

// optional string password = 2;
void HdStoreExtendedPublicKeyParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreExtendedPublicKeyParam::password() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyParam.password)
}
void HdStoreExtendedPublicKeyParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyParam.password)
}
void HdStoreExtendedPublicKeyParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyParam.password)
}
::std::string* HdStoreExtendedPublicKeyParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreExtendedPublicKeyParam::release_password() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyParam.password)
}

// optional string chainType = 3;
void HdStoreExtendedPublicKeyParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreExtendedPublicKeyParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyParam.chainType)
}
void HdStoreExtendedPublicKeyParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyParam.chainType)
}
void HdStoreExtendedPublicKeyParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyParam.chainType)
}
::std::string* HdStoreExtendedPublicKeyParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreExtendedPublicKeyParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyParam.chainType)
}

// optional string address = 4;
void HdStoreExtendedPublicKeyParam::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreExtendedPublicKeyParam::address() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyParam.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyParam::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyParam.address)
}
void HdStoreExtendedPublicKeyParam::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyParam.address)
}
void HdStoreExtendedPublicKeyParam::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyParam.address)
}
::std::string* HdStoreExtendedPublicKeyParam::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyParam.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreExtendedPublicKeyParam::release_address() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyParam.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyParam::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyParam.address)
}

inline const HdStoreExtendedPublicKeyParam* HdStoreExtendedPublicKeyParam::internal_default_instance() {
  return &HdStoreExtendedPublicKeyParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HdStoreExtendedPublicKeyResponse::kExtendedPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HdStoreExtendedPublicKeyResponse::HdStoreExtendedPublicKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.HdStoreExtendedPublicKeyResponse)
}

void HdStoreExtendedPublicKeyResponse::InitAsDefaultInstance() {
}

HdStoreExtendedPublicKeyResponse::HdStoreExtendedPublicKeyResponse(const HdStoreExtendedPublicKeyResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.HdStoreExtendedPublicKeyResponse)
}

void HdStoreExtendedPublicKeyResponse::SharedCtor() {
  extendedpublickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HdStoreExtendedPublicKeyResponse::~HdStoreExtendedPublicKeyResponse() {
  // @@protoc_insertion_point(destructor:api.HdStoreExtendedPublicKeyResponse)
  SharedDtor();
}

void HdStoreExtendedPublicKeyResponse::SharedDtor() {
  extendedpublickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HdStoreExtendedPublicKeyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HdStoreExtendedPublicKeyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HdStoreExtendedPublicKeyResponse_descriptor_;
}

const HdStoreExtendedPublicKeyResponse& HdStoreExtendedPublicKeyResponse::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HdStoreExtendedPublicKeyResponse> HdStoreExtendedPublicKeyResponse_default_instance_;

HdStoreExtendedPublicKeyResponse* HdStoreExtendedPublicKeyResponse::New(::google::protobuf::Arena* arena) const {
  HdStoreExtendedPublicKeyResponse* n = new HdStoreExtendedPublicKeyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HdStoreExtendedPublicKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.HdStoreExtendedPublicKeyResponse)
  extendedpublickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HdStoreExtendedPublicKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.HdStoreExtendedPublicKeyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string extendedPublicKey = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extendedpublickey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extendedpublickey().data(), this->extendedpublickey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HdStoreExtendedPublicKeyResponse.extendedPublicKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.HdStoreExtendedPublicKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.HdStoreExtendedPublicKeyResponse)
  return false;
#undef DO_
}

void HdStoreExtendedPublicKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.HdStoreExtendedPublicKeyResponse)
  // optional string extendedPublicKey = 1;
  if (this->extendedpublickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extendedpublickey().data(), this->extendedpublickey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyResponse.extendedPublicKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->extendedpublickey(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.HdStoreExtendedPublicKeyResponse)
}

::google::protobuf::uint8* HdStoreExtendedPublicKeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.HdStoreExtendedPublicKeyResponse)
  // optional string extendedPublicKey = 1;
  if (this->extendedpublickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extendedpublickey().data(), this->extendedpublickey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HdStoreExtendedPublicKeyResponse.extendedPublicKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->extendedpublickey(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.HdStoreExtendedPublicKeyResponse)
  return target;
}

size_t HdStoreExtendedPublicKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.HdStoreExtendedPublicKeyResponse)
  size_t total_size = 0;

  // optional string extendedPublicKey = 1;
  if (this->extendedpublickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extendedpublickey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HdStoreExtendedPublicKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.HdStoreExtendedPublicKeyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HdStoreExtendedPublicKeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HdStoreExtendedPublicKeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.HdStoreExtendedPublicKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.HdStoreExtendedPublicKeyResponse)
    UnsafeMergeFrom(*source);
  }
}

void HdStoreExtendedPublicKeyResponse::MergeFrom(const HdStoreExtendedPublicKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.HdStoreExtendedPublicKeyResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HdStoreExtendedPublicKeyResponse::UnsafeMergeFrom(const HdStoreExtendedPublicKeyResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.extendedpublickey().size() > 0) {

    extendedpublickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extendedpublickey_);
  }
}

void HdStoreExtendedPublicKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.HdStoreExtendedPublicKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HdStoreExtendedPublicKeyResponse::CopyFrom(const HdStoreExtendedPublicKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.HdStoreExtendedPublicKeyResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HdStoreExtendedPublicKeyResponse::IsInitialized() const {

  return true;
}

void HdStoreExtendedPublicKeyResponse::Swap(HdStoreExtendedPublicKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HdStoreExtendedPublicKeyResponse::InternalSwap(HdStoreExtendedPublicKeyResponse* other) {
  extendedpublickey_.Swap(&other->extendedpublickey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HdStoreExtendedPublicKeyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HdStoreExtendedPublicKeyResponse_descriptor_;
  metadata.reflection = HdStoreExtendedPublicKeyResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HdStoreExtendedPublicKeyResponse

// optional string extendedPublicKey = 1;
void HdStoreExtendedPublicKeyResponse::clear_extendedpublickey() {
  extendedpublickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HdStoreExtendedPublicKeyResponse::extendedpublickey() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
  return extendedpublickey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyResponse::set_extendedpublickey(const ::std::string& value) {
  
  extendedpublickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
}
void HdStoreExtendedPublicKeyResponse::set_extendedpublickey(const char* value) {
  
  extendedpublickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
}
void HdStoreExtendedPublicKeyResponse::set_extendedpublickey(const char* value, size_t size) {
  
  extendedpublickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
}
::std::string* HdStoreExtendedPublicKeyResponse::mutable_extendedpublickey() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
  return extendedpublickey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HdStoreExtendedPublicKeyResponse::release_extendedpublickey() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
  
  return extendedpublickey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HdStoreExtendedPublicKeyResponse::set_allocated_extendedpublickey(::std::string* extendedpublickey) {
  if (extendedpublickey != NULL) {
    
  } else {
    
  }
  extendedpublickey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extendedpublickey);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
}

inline const HdStoreExtendedPublicKeyResponse* HdStoreExtendedPublicKeyResponse::internal_default_instance() {
  return &HdStoreExtendedPublicKeyResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceParam::kActionFieldNumber;
const int DeviceParam::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceParam::DeviceParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_api_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.DeviceParam)
}

void DeviceParam::InitAsDefaultInstance() {
  param_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

DeviceParam::DeviceParam(const DeviceParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:api.DeviceParam)
}

void DeviceParam::SharedCtor() {
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_ = NULL;
  _cached_size_ = 0;
}

DeviceParam::~DeviceParam() {
  // @@protoc_insertion_point(destructor:api.DeviceParam)
  SharedDtor();
}

void DeviceParam::SharedDtor() {
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &DeviceParam_default_instance_.get()) {
    delete param_;
  }
}

void DeviceParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeviceParam_descriptor_;
}

const DeviceParam& DeviceParam::default_instance() {
  protobuf_InitDefaults_api_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeviceParam> DeviceParam_default_instance_;

DeviceParam* DeviceParam::New(::google::protobuf::Arena* arena) const {
  DeviceParam* n = new DeviceParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceParam::Clear() {
// @@protoc_insertion_point(message_clear_start:api.DeviceParam)
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && param_ != NULL) delete param_;
  param_ = NULL;
}

bool DeviceParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.DeviceParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string action = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), this->action().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.DeviceParam.action"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_param;
        break;
      }

      // optional .google.protobuf.Any param = 2;
      case 2: {
        if (tag == 18) {
         parse_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.DeviceParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.DeviceParam)
  return false;
#undef DO_
}

void DeviceParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.DeviceParam)
  // optional string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.DeviceParam.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->action(), output);
  }

  // optional .google.protobuf.Any param = 2;
  if (this->has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->param_, output);
  }

  // @@protoc_insertion_point(serialize_end:api.DeviceParam)
}

::google::protobuf::uint8* DeviceParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.DeviceParam)
  // optional string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.DeviceParam.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->action(), target);
  }

  // optional .google.protobuf.Any param = 2;
  if (this->has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->param_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.DeviceParam)
  return target;
}

size_t DeviceParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.DeviceParam)
  size_t total_size = 0;

  // optional string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // optional .google.protobuf.Any param = 2;
  if (this->has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.DeviceParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeviceParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.DeviceParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.DeviceParam)
    UnsafeMergeFrom(*source);
  }
}

void DeviceParam::MergeFrom(const DeviceParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.DeviceParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeviceParam::UnsafeMergeFrom(const DeviceParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.has_param()) {
    mutable_param()->::google::protobuf::Any::MergeFrom(from.param());
  }
}

void DeviceParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.DeviceParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceParam::CopyFrom(const DeviceParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.DeviceParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeviceParam::IsInitialized() const {

  return true;
}

void DeviceParam::Swap(DeviceParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceParam::InternalSwap(DeviceParam* other) {
  action_.Swap(&other->action_);
  std::swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeviceParam_descriptor_;
  metadata.reflection = DeviceParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceParam

// optional string action = 1;
void DeviceParam::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeviceParam::action() const {
  // @@protoc_insertion_point(field_get:api.DeviceParam.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceParam::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.DeviceParam.action)
}
void DeviceParam::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.DeviceParam.action)
}
void DeviceParam::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.DeviceParam.action)
}
::std::string* DeviceParam::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:api.DeviceParam.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeviceParam::release_action() {
  // @@protoc_insertion_point(field_release:api.DeviceParam.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeviceParam::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:api.DeviceParam.action)
}

// optional .google.protobuf.Any param = 2;
bool DeviceParam::has_param() const {
  return this != internal_default_instance() && param_ != NULL;
}
void DeviceParam::clear_param() {
  if (GetArenaNoVirtual() == NULL && param_ != NULL) delete param_;
  param_ = NULL;
}
const ::google::protobuf::Any& DeviceParam::param() const {
  // @@protoc_insertion_point(field_get:api.DeviceParam.param)
  return param_ != NULL ? *param_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* DeviceParam::mutable_param() {
  
  if (param_ == NULL) {
    param_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:api.DeviceParam.param)
  return param_;
}
::google::protobuf::Any* DeviceParam::release_param() {
  // @@protoc_insertion_point(field_release:api.DeviceParam.param)
  
  ::google::protobuf::Any* temp = param_;
  param_ = NULL;
  return temp;
}
void DeviceParam::set_allocated_param(::google::protobuf::Any* param) {
  delete param_;
  param_ = param;
  if (param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:api.DeviceParam.param)
}

inline const DeviceParam* DeviceParam::internal_default_instance() {
  return &DeviceParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api

// @@protoc_insertion_point(global_scope)
