// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: btc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "btc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace btcapi {

namespace {

const ::google::protobuf::Descriptor* Utxo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Utxo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BtcTxInput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BtcTxInput_reflection_ = NULL;
const ::google::protobuf::Descriptor* BtcTxOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BtcTxOutput_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_btc_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_btc_2eproto() {
  protobuf_AddDesc_btc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "btc.proto");
  GOOGLE_CHECK(file != NULL);
  Utxo_descriptor_ = file->message_type(0);
  static const int Utxo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, txhash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, vout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, scriptpubkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, derivedpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, sequence_),
  };
  Utxo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Utxo_descriptor_,
      Utxo::internal_default_instance(),
      Utxo_offsets_,
      -1,
      -1,
      -1,
      sizeof(Utxo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Utxo, _internal_metadata_));
  BtcTxInput_descriptor_ = file->message_type(1);
  static const int BtcTxInput_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, unspents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, fee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, changeaddressindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, changeaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, segwit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, payment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, to_dis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, fee_dis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, extra_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, path_prefix_),
  };
  BtcTxInput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BtcTxInput_descriptor_,
      BtcTxInput::internal_default_instance(),
      BtcTxInput_offsets_,
      -1,
      -1,
      -1,
      sizeof(BtcTxInput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxInput, _internal_metadata_));
  BtcTxOutput_descriptor_ = file->message_type(2);
  static const int BtcTxOutput_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxOutput, signature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxOutput, txhash_),
  };
  BtcTxOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BtcTxOutput_descriptor_,
      BtcTxOutput::internal_default_instance(),
      BtcTxOutput_offsets_,
      -1,
      -1,
      -1,
      sizeof(BtcTxOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BtcTxOutput, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_btc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Utxo_descriptor_, Utxo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BtcTxInput_descriptor_, BtcTxInput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BtcTxOutput_descriptor_, BtcTxOutput::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_btc_2eproto() {
  Utxo_default_instance_.Shutdown();
  delete Utxo_reflection_;
  BtcTxInput_default_instance_.Shutdown();
  delete BtcTxInput_reflection_;
  BtcTxOutput_default_instance_.Shutdown();
  delete BtcTxOutput_reflection_;
}

void protobuf_InitDefaults_btc_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  Utxo_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BtcTxInput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BtcTxOutput_default_instance_.DefaultConstruct();
  Utxo_default_instance_.get_mutable()->InitAsDefaultInstance();
  BtcTxInput_default_instance_.get_mutable()->InitAsDefaultInstance();
  BtcTxOutput_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_btc_2eproto_once_);
void protobuf_InitDefaults_btc_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_btc_2eproto_once_,
                 &protobuf_InitDefaults_btc_2eproto_impl);
}
void protobuf_AddDesc_btc_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_btc_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tbtc.proto\022\006btcapi\"\202\001\n\004Utxo\022\016\n\006txHash\030\001"
    " \001(\t\022\014\n\004vout\030\002 \001(\005\022\016\n\006amount\030\003 \001(\003\022\017\n\007ad"
    "dress\030\004 \001(\t\022\024\n\014scriptPubKey\030\005 \001(\t\022\023\n\013der"
    "ivedPath\030\006 \001(\t\022\020\n\010sequence\030\007 \001(\003\"\222\002\n\nBtc"
    "TxInput\022\n\n\002to\030\001 \001(\t\022\016\n\006amount\030\002 \001(\003\022\036\n\010u"
    "nspents\030\003 \003(\0132\014.btcapi.Utxo\022\013\n\003fee\030\004 \001(\003"
    "\022\032\n\022changeAddressIndex\030\005 \001(\r\022\025\n\rchangeAd"
    "dress\030\006 \001(\t\022\017\n\007network\030\007 \001(\t\022\016\n\006segWit\030\010"
    " \001(\t\022\017\n\007payment\030\t \001(\t\022\016\n\006to_dis\030\n \001(\t\022\014\n"
    "\004from\030\013 \001(\t\022\017\n\007fee_dis\030\014 \001(\t\022\022\n\nextra_da"
    "ta\030\r \001(\014\022\023\n\013path_prefix\030\016 \001(\t\"0\n\013BtcTxOu"
    "tput\022\021\n\tsignature\030\001 \001(\t\022\016\n\006txHash\030\002 \001(\tb"
    "\006proto3", 487);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "btc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_btc_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_btc_2eproto_once_);
void protobuf_AddDesc_btc_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_btc_2eproto_once_,
                 &protobuf_AddDesc_btc_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_btc_2eproto {
  StaticDescriptorInitializer_btc_2eproto() {
    protobuf_AddDesc_btc_2eproto();
  }
} static_descriptor_initializer_btc_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Utxo::kTxHashFieldNumber;
const int Utxo::kVoutFieldNumber;
const int Utxo::kAmountFieldNumber;
const int Utxo::kAddressFieldNumber;
const int Utxo::kScriptPubKeyFieldNumber;
const int Utxo::kDerivedPathFieldNumber;
const int Utxo::kSequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Utxo::Utxo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.Utxo)
}

void Utxo::InitAsDefaultInstance() {
}

Utxo::Utxo(const Utxo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.Utxo)
}

void Utxo::SharedCtor() {
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scriptpubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, reinterpret_cast<char*>(&vout_) -
    reinterpret_cast<char*>(&amount_) + sizeof(vout_));
  _cached_size_ = 0;
}

Utxo::~Utxo() {
  // @@protoc_insertion_point(destructor:btcapi.Utxo)
  SharedDtor();
}

void Utxo::SharedDtor() {
  txhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scriptpubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Utxo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Utxo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Utxo_descriptor_;
}

const Utxo& Utxo::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Utxo> Utxo_default_instance_;

Utxo* Utxo::New(::google::protobuf::Arena* arena) const {
  Utxo* n = new Utxo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Utxo::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.Utxo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Utxo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Utxo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(amount_, vout_);
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scriptpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Utxo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.Utxo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string txHash = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txhash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txhash().data(), this->txhash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.Utxo.txHash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vout;
        break;
      }

      // optional int32 vout = 2;
      case 2: {
        if (tag == 16) {
         parse_vout:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vout_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }

      // optional int64 amount = 3;
      case 3: {
        if (tag == 24) {
         parse_amount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_address;
        break;
      }

      // optional string address = 4;
      case 4: {
        if (tag == 34) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.Utxo.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_scriptPubKey;
        break;
      }

      // optional string scriptPubKey = 5;
      case 5: {
        if (tag == 42) {
         parse_scriptPubKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scriptpubkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scriptpubkey().data(), this->scriptpubkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.Utxo.scriptPubKey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_derivedPath;
        break;
      }

      // optional string derivedPath = 6;
      case 6: {
        if (tag == 50) {
         parse_derivedPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_derivedpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->derivedpath().data(), this->derivedpath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.Utxo.derivedPath"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_sequence;
        break;
      }

      // optional int64 sequence = 7;
      case 7: {
        if (tag == 56) {
         parse_sequence:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.Utxo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.Utxo)
  return false;
#undef DO_
}

void Utxo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.Utxo)
  // optional string txHash = 1;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), this->txhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.txHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->txhash(), output);
  }

  // optional int32 vout = 2;
  if (this->vout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vout(), output);
  }

  // optional int64 amount = 3;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->amount(), output);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // optional string scriptPubKey = 5;
  if (this->scriptpubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scriptpubkey().data(), this->scriptpubkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.scriptPubKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->scriptpubkey(), output);
  }

  // optional string derivedPath = 6;
  if (this->derivedpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->derivedpath().data(), this->derivedpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.derivedPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->derivedpath(), output);
  }

  // optional int64 sequence = 7;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->sequence(), output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.Utxo)
}

::google::protobuf::uint8* Utxo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.Utxo)
  // optional string txHash = 1;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), this->txhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.txHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->txhash(), target);
  }

  // optional int32 vout = 2;
  if (this->vout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vout(), target);
  }

  // optional int64 amount = 3;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->amount(), target);
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // optional string scriptPubKey = 5;
  if (this->scriptpubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scriptpubkey().data(), this->scriptpubkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.scriptPubKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->scriptpubkey(), target);
  }

  // optional string derivedPath = 6;
  if (this->derivedpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->derivedpath().data(), this->derivedpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.Utxo.derivedPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->derivedpath(), target);
  }

  // optional int64 sequence = 7;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->sequence(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.Utxo)
  return target;
}

size_t Utxo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.Utxo)
  size_t total_size = 0;

  // optional string txHash = 1;
  if (this->txhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txhash());
  }

  // optional int32 vout = 2;
  if (this->vout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vout());
  }

  // optional int64 amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // optional string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional string scriptPubKey = 5;
  if (this->scriptpubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scriptpubkey());
  }

  // optional string derivedPath = 6;
  if (this->derivedpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->derivedpath());
  }

  // optional int64 sequence = 7;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sequence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Utxo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.Utxo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Utxo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Utxo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.Utxo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.Utxo)
    UnsafeMergeFrom(*source);
  }
}

void Utxo::MergeFrom(const Utxo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.Utxo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Utxo::UnsafeMergeFrom(const Utxo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.txhash().size() > 0) {

    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  if (from.vout() != 0) {
    set_vout(from.vout());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.scriptpubkey().size() > 0) {

    scriptpubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scriptpubkey_);
  }
  if (from.derivedpath().size() > 0) {

    derivedpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.derivedpath_);
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
}

void Utxo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.Utxo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Utxo::CopyFrom(const Utxo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.Utxo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Utxo::IsInitialized() const {

  return true;
}

void Utxo::Swap(Utxo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Utxo::InternalSwap(Utxo* other) {
  txhash_.Swap(&other->txhash_);
  std::swap(vout_, other->vout_);
  std::swap(amount_, other->amount_);
  address_.Swap(&other->address_);
  scriptpubkey_.Swap(&other->scriptpubkey_);
  derivedpath_.Swap(&other->derivedpath_);
  std::swap(sequence_, other->sequence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Utxo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Utxo_descriptor_;
  metadata.reflection = Utxo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Utxo

// optional string txHash = 1;
void Utxo::clear_txhash() {
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Utxo::txhash() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.txHash)
  return txhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_txhash(const ::std::string& value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.txHash)
}
void Utxo::set_txhash(const char* value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.txHash)
}
void Utxo::set_txhash(const char* value, size_t size) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.txHash)
}
::std::string* Utxo::mutable_txhash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.txHash)
  return txhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Utxo::release_txhash() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.txHash)
  
  return txhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_allocated_txhash(::std::string* txhash) {
  if (txhash != NULL) {
    
  } else {
    
  }
  txhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txhash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.txHash)
}

// optional int32 vout = 2;
void Utxo::clear_vout() {
  vout_ = 0;
}
::google::protobuf::int32 Utxo::vout() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.vout)
  return vout_;
}
void Utxo::set_vout(::google::protobuf::int32 value) {
  
  vout_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.vout)
}

// optional int64 amount = 3;
void Utxo::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Utxo::amount() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.amount)
  return amount_;
}
void Utxo::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.amount)
}

// optional string address = 4;
void Utxo::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Utxo::address() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.address)
}
void Utxo::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.address)
}
void Utxo::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.address)
}
::std::string* Utxo::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Utxo::release_address() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.address)
}

// optional string scriptPubKey = 5;
void Utxo::clear_scriptpubkey() {
  scriptpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Utxo::scriptpubkey() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.scriptPubKey)
  return scriptpubkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_scriptpubkey(const ::std::string& value) {
  
  scriptpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.scriptPubKey)
}
void Utxo::set_scriptpubkey(const char* value) {
  
  scriptpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.scriptPubKey)
}
void Utxo::set_scriptpubkey(const char* value, size_t size) {
  
  scriptpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.scriptPubKey)
}
::std::string* Utxo::mutable_scriptpubkey() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.scriptPubKey)
  return scriptpubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Utxo::release_scriptpubkey() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.scriptPubKey)
  
  return scriptpubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_allocated_scriptpubkey(::std::string* scriptpubkey) {
  if (scriptpubkey != NULL) {
    
  } else {
    
  }
  scriptpubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scriptpubkey);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.scriptPubKey)
}

// optional string derivedPath = 6;
void Utxo::clear_derivedpath() {
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Utxo::derivedpath() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.derivedPath)
  return derivedpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_derivedpath(const ::std::string& value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.derivedPath)
}
void Utxo::set_derivedpath(const char* value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.derivedPath)
}
void Utxo::set_derivedpath(const char* value, size_t size) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.derivedPath)
}
::std::string* Utxo::mutable_derivedpath() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.derivedPath)
  return derivedpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Utxo::release_derivedpath() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.derivedPath)
  
  return derivedpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Utxo::set_allocated_derivedpath(::std::string* derivedpath) {
  if (derivedpath != NULL) {
    
  } else {
    
  }
  derivedpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), derivedpath);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.derivedPath)
}

// optional int64 sequence = 7;
void Utxo::clear_sequence() {
  sequence_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Utxo::sequence() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.sequence)
  return sequence_;
}
void Utxo::set_sequence(::google::protobuf::int64 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.sequence)
}

inline const Utxo* Utxo::internal_default_instance() {
  return &Utxo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BtcTxInput::kToFieldNumber;
const int BtcTxInput::kAmountFieldNumber;
const int BtcTxInput::kUnspentsFieldNumber;
const int BtcTxInput::kFeeFieldNumber;
const int BtcTxInput::kChangeAddressIndexFieldNumber;
const int BtcTxInput::kChangeAddressFieldNumber;
const int BtcTxInput::kNetworkFieldNumber;
const int BtcTxInput::kSegWitFieldNumber;
const int BtcTxInput::kPaymentFieldNumber;
const int BtcTxInput::kToDisFieldNumber;
const int BtcTxInput::kFromFieldNumber;
const int BtcTxInput::kFeeDisFieldNumber;
const int BtcTxInput::kExtraDataFieldNumber;
const int BtcTxInput::kPathPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BtcTxInput::BtcTxInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.BtcTxInput)
}

void BtcTxInput::InitAsDefaultInstance() {
}

BtcTxInput::BtcTxInput(const BtcTxInput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.BtcTxInput)
}

void BtcTxInput::SharedCtor() {
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  changeaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_dis_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_dis_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, reinterpret_cast<char*>(&changeaddressindex_) -
    reinterpret_cast<char*>(&amount_) + sizeof(changeaddressindex_));
  _cached_size_ = 0;
}

BtcTxInput::~BtcTxInput() {
  // @@protoc_insertion_point(destructor:btcapi.BtcTxInput)
  SharedDtor();
}

void BtcTxInput::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  changeaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_dis_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_dis_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BtcTxInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BtcTxInput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BtcTxInput_descriptor_;
}

const BtcTxInput& BtcTxInput::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BtcTxInput> BtcTxInput_default_instance_;

BtcTxInput* BtcTxInput::New(::google::protobuf::Arena* arena) const {
  BtcTxInput* n = new BtcTxInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BtcTxInput::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.BtcTxInput)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BtcTxInput, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BtcTxInput*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(amount_, changeaddressindex_);
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  changeaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  unspents_.Clear();
}

bool BtcTxInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.BtcTxInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string to = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), this->to().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.to"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }

      // optional int64 amount = 2;
      case 2: {
        if (tag == 16) {
         parse_amount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_unspents;
        break;
      }

      // repeated .btcapi.Utxo unspents = 3;
      case 3: {
        if (tag == 26) {
         parse_unspents:
          DO_(input->IncrementRecursionDepth());
         parse_loop_unspents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_unspents()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_unspents;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_fee;
        break;
      }

      // optional int64 fee = 4;
      case 4: {
        if (tag == 32) {
         parse_fee:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_changeAddressIndex;
        break;
      }

      // optional uint32 changeAddressIndex = 5;
      case 5: {
        if (tag == 40) {
         parse_changeAddressIndex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &changeaddressindex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_changeAddress;
        break;
      }

      // optional string changeAddress = 6;
      case 6: {
        if (tag == 50) {
         parse_changeAddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_changeaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->changeaddress().data(), this->changeaddress().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.changeAddress"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_network;
        break;
      }

      // optional string network = 7;
      case 7: {
        if (tag == 58) {
         parse_network:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_segWit;
        break;
      }

      // optional string segWit = 8;
      case 8: {
        if (tag == 66) {
         parse_segWit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_segwit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->segwit().data(), this->segwit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.segWit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_payment;
        break;
      }

      // optional string payment = 9;
      case 9: {
        if (tag == 74) {
         parse_payment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payment().data(), this->payment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.payment"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_to_dis;
        break;
      }

      // optional string to_dis = 10;
      case 10: {
        if (tag == 82) {
         parse_to_dis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_dis()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_dis().data(), this->to_dis().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.to_dis"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_from;
        break;
      }

      // optional string from = 11;
      case 11: {
        if (tag == 90) {
         parse_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), this->from().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.from"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_fee_dis;
        break;
      }

      // optional string fee_dis = 12;
      case 12: {
        if (tag == 98) {
         parse_fee_dis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fee_dis()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fee_dis().data(), this->fee_dis().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.fee_dis"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_extra_data;
        break;
      }

      // optional bytes extra_data = 13;
      case 13: {
        if (tag == 106) {
         parse_extra_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_path_prefix;
        break;
      }

      // optional string path_prefix = 14;
      case 14: {
        if (tag == 114) {
         parse_path_prefix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path_prefix().data(), this->path_prefix().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxInput.path_prefix"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.BtcTxInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.BtcTxInput)
  return false;
#undef DO_
}

void BtcTxInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.BtcTxInput)
  // optional string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  // optional int64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amount(), output);
  }

  // repeated .btcapi.Utxo unspents = 3;
  for (unsigned int i = 0, n = this->unspents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->unspents(i), output);
  }

  // optional int64 fee = 4;
  if (this->fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->fee(), output);
  }

  // optional uint32 changeAddressIndex = 5;
  if (this->changeaddressindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->changeaddressindex(), output);
  }

  // optional string changeAddress = 6;
  if (this->changeaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->changeaddress().data(), this->changeaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.changeAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->changeaddress(), output);
  }

  // optional string network = 7;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->network(), output);
  }

  // optional string segWit = 8;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.segWit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->segwit(), output);
  }

  // optional string payment = 9;
  if (this->payment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment().data(), this->payment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.payment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->payment(), output);
  }

  // optional string to_dis = 10;
  if (this->to_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_dis().data(), this->to_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.to_dis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->to_dis(), output);
  }

  // optional string from = 11;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), this->from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->from(), output);
  }

  // optional string fee_dis = 12;
  if (this->fee_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fee_dis().data(), this->fee_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.fee_dis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->fee_dis(), output);
  }

  // optional bytes extra_data = 13;
  if (this->extra_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->extra_data(), output);
  }

  // optional string path_prefix = 14;
  if (this->path_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path_prefix().data(), this->path_prefix().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.path_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->path_prefix(), output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.BtcTxInput)
}

::google::protobuf::uint8* BtcTxInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.BtcTxInput)
  // optional string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  // optional int64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amount(), target);
  }

  // repeated .btcapi.Utxo unspents = 3;
  for (unsigned int i = 0, n = this->unspents_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->unspents(i), false, target);
  }

  // optional int64 fee = 4;
  if (this->fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->fee(), target);
  }

  // optional uint32 changeAddressIndex = 5;
  if (this->changeaddressindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->changeaddressindex(), target);
  }

  // optional string changeAddress = 6;
  if (this->changeaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->changeaddress().data(), this->changeaddress().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.changeAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->changeaddress(), target);
  }

  // optional string network = 7;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->network(), target);
  }

  // optional string segWit = 8;
  if (this->segwit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->segwit().data(), this->segwit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.segWit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->segwit(), target);
  }

  // optional string payment = 9;
  if (this->payment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment().data(), this->payment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.payment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->payment(), target);
  }

  // optional string to_dis = 10;
  if (this->to_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_dis().data(), this->to_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.to_dis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->to_dis(), target);
  }

  // optional string from = 11;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), this->from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->from(), target);
  }

  // optional string fee_dis = 12;
  if (this->fee_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fee_dis().data(), this->fee_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.fee_dis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->fee_dis(), target);
  }

  // optional bytes extra_data = 13;
  if (this->extra_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->extra_data(), target);
  }

  // optional string path_prefix = 14;
  if (this->path_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path_prefix().data(), this->path_prefix().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxInput.path_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->path_prefix(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.BtcTxInput)
  return target;
}

size_t BtcTxInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.BtcTxInput)
  size_t total_size = 0;

  // optional string to = 1;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // optional int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // optional int64 fee = 4;
  if (this->fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fee());
  }

  // optional uint32 changeAddressIndex = 5;
  if (this->changeaddressindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->changeaddressindex());
  }

  // optional string changeAddress = 6;
  if (this->changeaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->changeaddress());
  }

  // optional string network = 7;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // optional string segWit = 8;
  if (this->segwit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->segwit());
  }

  // optional string payment = 9;
  if (this->payment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payment());
  }

  // optional string to_dis = 10;
  if (this->to_dis().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_dis());
  }

  // optional string from = 11;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // optional string fee_dis = 12;
  if (this->fee_dis().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fee_dis());
  }

  // optional bytes extra_data = 13;
  if (this->extra_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra_data());
  }

  // optional string path_prefix = 14;
  if (this->path_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path_prefix());
  }

  // repeated .btcapi.Utxo unspents = 3;
  {
    unsigned int count = this->unspents_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unspents(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BtcTxInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.BtcTxInput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BtcTxInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BtcTxInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.BtcTxInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.BtcTxInput)
    UnsafeMergeFrom(*source);
  }
}

void BtcTxInput::MergeFrom(const BtcTxInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.BtcTxInput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BtcTxInput::UnsafeMergeFrom(const BtcTxInput& from) {
  GOOGLE_DCHECK(&from != this);
  unspents_.MergeFrom(from.unspents_);
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.fee() != 0) {
    set_fee(from.fee());
  }
  if (from.changeaddressindex() != 0) {
    set_changeaddressindex(from.changeaddressindex());
  }
  if (from.changeaddress().size() > 0) {

    changeaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.changeaddress_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.segwit().size() > 0) {

    segwit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.segwit_);
  }
  if (from.payment().size() > 0) {

    payment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_);
  }
  if (from.to_dis().size() > 0) {

    to_dis_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_dis_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.fee_dis().size() > 0) {

    fee_dis_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fee_dis_);
  }
  if (from.extra_data().size() > 0) {

    extra_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_data_);
  }
  if (from.path_prefix().size() > 0) {

    path_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_prefix_);
  }
}

void BtcTxInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.BtcTxInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BtcTxInput::CopyFrom(const BtcTxInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.BtcTxInput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BtcTxInput::IsInitialized() const {

  return true;
}

void BtcTxInput::Swap(BtcTxInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BtcTxInput::InternalSwap(BtcTxInput* other) {
  to_.Swap(&other->to_);
  std::swap(amount_, other->amount_);
  unspents_.UnsafeArenaSwap(&other->unspents_);
  std::swap(fee_, other->fee_);
  std::swap(changeaddressindex_, other->changeaddressindex_);
  changeaddress_.Swap(&other->changeaddress_);
  network_.Swap(&other->network_);
  segwit_.Swap(&other->segwit_);
  payment_.Swap(&other->payment_);
  to_dis_.Swap(&other->to_dis_);
  from_.Swap(&other->from_);
  fee_dis_.Swap(&other->fee_dis_);
  extra_data_.Swap(&other->extra_data_);
  path_prefix_.Swap(&other->path_prefix_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BtcTxInput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BtcTxInput_descriptor_;
  metadata.reflection = BtcTxInput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BtcTxInput

// optional string to = 1;
void BtcTxInput::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::to() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.to)
}
void BtcTxInput::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.to)
}
void BtcTxInput::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.to)
}
::std::string* BtcTxInput::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_to() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.to)
}

// optional int64 amount = 2;
void BtcTxInput::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BtcTxInput::amount() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.amount)
  return amount_;
}
void BtcTxInput::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.amount)
}

// repeated .btcapi.Utxo unspents = 3;
int BtcTxInput::unspents_size() const {
  return unspents_.size();
}
void BtcTxInput::clear_unspents() {
  unspents_.Clear();
}
const ::btcapi::Utxo& BtcTxInput::unspents(int index) const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.unspents)
  return unspents_.Get(index);
}
::btcapi::Utxo* BtcTxInput::mutable_unspents(int index) {
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.unspents)
  return unspents_.Mutable(index);
}
::btcapi::Utxo* BtcTxInput::add_unspents() {
  // @@protoc_insertion_point(field_add:btcapi.BtcTxInput.unspents)
  return unspents_.Add();
}
::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >*
BtcTxInput::mutable_unspents() {
  // @@protoc_insertion_point(field_mutable_list:btcapi.BtcTxInput.unspents)
  return &unspents_;
}
const ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >&
BtcTxInput::unspents() const {
  // @@protoc_insertion_point(field_list:btcapi.BtcTxInput.unspents)
  return unspents_;
}

// optional int64 fee = 4;
void BtcTxInput::clear_fee() {
  fee_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BtcTxInput::fee() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.fee)
  return fee_;
}
void BtcTxInput::set_fee(::google::protobuf::int64 value) {
  
  fee_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.fee)
}

// optional uint32 changeAddressIndex = 5;
void BtcTxInput::clear_changeaddressindex() {
  changeaddressindex_ = 0u;
}
::google::protobuf::uint32 BtcTxInput::changeaddressindex() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.changeAddressIndex)
  return changeaddressindex_;
}
void BtcTxInput::set_changeaddressindex(::google::protobuf::uint32 value) {
  
  changeaddressindex_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.changeAddressIndex)
}

// optional string changeAddress = 6;
void BtcTxInput::clear_changeaddress() {
  changeaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::changeaddress() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.changeAddress)
  return changeaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_changeaddress(const ::std::string& value) {
  
  changeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.changeAddress)
}
void BtcTxInput::set_changeaddress(const char* value) {
  
  changeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.changeAddress)
}
void BtcTxInput::set_changeaddress(const char* value, size_t size) {
  
  changeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.changeAddress)
}
::std::string* BtcTxInput::mutable_changeaddress() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.changeAddress)
  return changeaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_changeaddress() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.changeAddress)
  
  return changeaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_changeaddress(::std::string* changeaddress) {
  if (changeaddress != NULL) {
    
  } else {
    
  }
  changeaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), changeaddress);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.changeAddress)
}

// optional string network = 7;
void BtcTxInput::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::network() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.network)
}
void BtcTxInput::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.network)
}
void BtcTxInput::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.network)
}
::std::string* BtcTxInput::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_network() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.network)
}

// optional string segWit = 8;
void BtcTxInput::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::segwit() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.segWit)
}
void BtcTxInput::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.segWit)
}
void BtcTxInput::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.segWit)
}
::std::string* BtcTxInput::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_segwit() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.segWit)
}

// optional string payment = 9;
void BtcTxInput::clear_payment() {
  payment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::payment() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.payment)
  return payment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_payment(const ::std::string& value) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.payment)
}
void BtcTxInput::set_payment(const char* value) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.payment)
}
void BtcTxInput::set_payment(const char* value, size_t size) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.payment)
}
::std::string* BtcTxInput::mutable_payment() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.payment)
  return payment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_payment() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.payment)
  
  return payment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_payment(::std::string* payment) {
  if (payment != NULL) {
    
  } else {
    
  }
  payment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payment);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.payment)
}

// optional string to_dis = 10;
void BtcTxInput::clear_to_dis() {
  to_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::to_dis() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.to_dis)
  return to_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_to_dis(const ::std::string& value) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.to_dis)
}
void BtcTxInput::set_to_dis(const char* value) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.to_dis)
}
void BtcTxInput::set_to_dis(const char* value, size_t size) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.to_dis)
}
::std::string* BtcTxInput::mutable_to_dis() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.to_dis)
  return to_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_to_dis() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.to_dis)
  
  return to_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_to_dis(::std::string* to_dis) {
  if (to_dis != NULL) {
    
  } else {
    
  }
  to_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_dis);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.to_dis)
}

// optional string from = 11;
void BtcTxInput::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::from() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.from)
  return from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.from)
}
void BtcTxInput::set_from(const char* value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.from)
}
void BtcTxInput::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.from)
}
::std::string* BtcTxInput::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_from() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.from)
}

// optional string fee_dis = 12;
void BtcTxInput::clear_fee_dis() {
  fee_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::fee_dis() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.fee_dis)
  return fee_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_fee_dis(const ::std::string& value) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.fee_dis)
}
void BtcTxInput::set_fee_dis(const char* value) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.fee_dis)
}
void BtcTxInput::set_fee_dis(const char* value, size_t size) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.fee_dis)
}
::std::string* BtcTxInput::mutable_fee_dis() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.fee_dis)
  return fee_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_fee_dis() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.fee_dis)
  
  return fee_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_fee_dis(::std::string* fee_dis) {
  if (fee_dis != NULL) {
    
  } else {
    
  }
  fee_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fee_dis);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.fee_dis)
}

// optional bytes extra_data = 13;
void BtcTxInput::clear_extra_data() {
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::extra_data() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.extra_data)
  return extra_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_extra_data(const ::std::string& value) {
  
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.extra_data)
}
void BtcTxInput::set_extra_data(const char* value) {
  
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.extra_data)
}
void BtcTxInput::set_extra_data(const void* value, size_t size) {
  
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.extra_data)
}
::std::string* BtcTxInput::mutable_extra_data() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.extra_data)
  return extra_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_extra_data() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.extra_data)
  
  return extra_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_extra_data(::std::string* extra_data) {
  if (extra_data != NULL) {
    
  } else {
    
  }
  extra_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_data);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.extra_data)
}

// optional string path_prefix = 14;
void BtcTxInput::clear_path_prefix() {
  path_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxInput::path_prefix() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.path_prefix)
  return path_prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_path_prefix(const ::std::string& value) {
  
  path_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.path_prefix)
}
void BtcTxInput::set_path_prefix(const char* value) {
  
  path_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.path_prefix)
}
void BtcTxInput::set_path_prefix(const char* value, size_t size) {
  
  path_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.path_prefix)
}
::std::string* BtcTxInput::mutable_path_prefix() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.path_prefix)
  return path_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxInput::release_path_prefix() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.path_prefix)
  
  return path_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxInput::set_allocated_path_prefix(::std::string* path_prefix) {
  if (path_prefix != NULL) {
    
  } else {
    
  }
  path_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path_prefix);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.path_prefix)
}

inline const BtcTxInput* BtcTxInput::internal_default_instance() {
  return &BtcTxInput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BtcTxOutput::kSignatureFieldNumber;
const int BtcTxOutput::kTxHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BtcTxOutput::BtcTxOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_btc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:btcapi.BtcTxOutput)
}

void BtcTxOutput::InitAsDefaultInstance() {
}

BtcTxOutput::BtcTxOutput(const BtcTxOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:btcapi.BtcTxOutput)
}

void BtcTxOutput::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BtcTxOutput::~BtcTxOutput() {
  // @@protoc_insertion_point(destructor:btcapi.BtcTxOutput)
  SharedDtor();
}

void BtcTxOutput::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BtcTxOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BtcTxOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BtcTxOutput_descriptor_;
}

const BtcTxOutput& BtcTxOutput::default_instance() {
  protobuf_InitDefaults_btc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BtcTxOutput> BtcTxOutput_default_instance_;

BtcTxOutput* BtcTxOutput::New(::google::protobuf::Arena* arena) const {
  BtcTxOutput* n = new BtcTxOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BtcTxOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:btcapi.BtcTxOutput)
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BtcTxOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:btcapi.BtcTxOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string signature = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxOutput.signature"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_txHash;
        break;
      }

      // optional string txHash = 2;
      case 2: {
        if (tag == 18) {
         parse_txHash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txhash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txhash().data(), this->txhash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "btcapi.BtcTxOutput.txHash"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:btcapi.BtcTxOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:btcapi.BtcTxOutput)
  return false;
#undef DO_
}

void BtcTxOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:btcapi.BtcTxOutput)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), this->txhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.txHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->txhash(), output);
  }

  // @@protoc_insertion_point(serialize_end:btcapi.BtcTxOutput)
}

::google::protobuf::uint8* BtcTxOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:btcapi.BtcTxOutput)
  // optional string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txhash().data(), this->txhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "btcapi.BtcTxOutput.txHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->txhash(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:btcapi.BtcTxOutput)
  return target;
}

size_t BtcTxOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:btcapi.BtcTxOutput)
  size_t total_size = 0;

  // optional string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // optional string txHash = 2;
  if (this->txhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txhash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BtcTxOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:btcapi.BtcTxOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BtcTxOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BtcTxOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:btcapi.BtcTxOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:btcapi.BtcTxOutput)
    UnsafeMergeFrom(*source);
  }
}

void BtcTxOutput::MergeFrom(const BtcTxOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:btcapi.BtcTxOutput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BtcTxOutput::UnsafeMergeFrom(const BtcTxOutput& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.txhash().size() > 0) {

    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
}

void BtcTxOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:btcapi.BtcTxOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BtcTxOutput::CopyFrom(const BtcTxOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:btcapi.BtcTxOutput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BtcTxOutput::IsInitialized() const {

  return true;
}

void BtcTxOutput::Swap(BtcTxOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BtcTxOutput::InternalSwap(BtcTxOutput* other) {
  signature_.Swap(&other->signature_);
  txhash_.Swap(&other->txhash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BtcTxOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BtcTxOutput_descriptor_;
  metadata.reflection = BtcTxOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BtcTxOutput

// optional string signature = 1;
void BtcTxOutput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxOutput::signature() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.signature)
}
void BtcTxOutput::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.signature)
}
void BtcTxOutput::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.signature)
}
::std::string* BtcTxOutput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxOutput::release_signature() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.signature)
}

// optional string txHash = 2;
void BtcTxOutput::clear_txhash() {
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BtcTxOutput::txhash() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.txHash)
  return txhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_txhash(const ::std::string& value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.txHash)
}
void BtcTxOutput::set_txhash(const char* value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.txHash)
}
void BtcTxOutput::set_txhash(const char* value, size_t size) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.txHash)
}
::std::string* BtcTxOutput::mutable_txhash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.txHash)
  return txhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BtcTxOutput::release_txhash() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.txHash)
  
  return txhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BtcTxOutput::set_allocated_txhash(::std::string* txhash) {
  if (txhash != NULL) {
    
  } else {
    
  }
  txhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txhash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.txHash)
}

inline const BtcTxOutput* BtcTxOutput::internal_default_instance() {
  return &BtcTxOutput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace btcapi

// @@protoc_insertion_point(global_scope)
