// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#ifndef PROTOBUF_api_2eproto__INCLUDED
#define PROTOBUF_api_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace api {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_api_2eproto();
void protobuf_InitDefaults_api_2eproto();
void protobuf_AssignDesc_api_2eproto();
void protobuf_ShutdownFile_api_2eproto();

class AccountResponse;
class AccountsResponse;
class AddressParam;
class AddressResponse;
class BtcForkDeriveExtraParam;
class DeviceParam;
class ExternalAddressExtra;
class ExternalAddressExtra_ExternalAddress;
class ExternalAddressParam;
class ExternalAddressResult;
class HdStoreCreateParam;
class HdStoreDeriveParam;
class HdStoreDeriveParam_Derivation;
class HdStoreExtendedPublicKeyParam;
class HdStoreExtendedPublicKeyResponse;
class HdStoreImportParam;
class InitTokenCoreXParam;
class KeystoreCommonAccountsParam;
class KeystoreCommonExistsParam;
class KeystoreCommonExistsResult;
class KeystoreCommonExportResult;
class PrivateKeyStoreExportParam;
class PrivateKeyStoreImportParam;
class Response;
class SignParam;
class TcxAction;
class WalletKeyParam;
class WalletResult;

enum KeyType {
  MNEMONIC = 0,
  PRIVATE_KEY = 1,
  KeyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  KeyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool KeyType_IsValid(int value);
const KeyType KeyType_MIN = MNEMONIC;
const KeyType KeyType_MAX = PRIVATE_KEY;
const int KeyType_ARRAYSIZE = KeyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* KeyType_descriptor();
inline const ::std::string& KeyType_Name(KeyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    KeyType_descriptor(), value);
}
inline bool KeyType_Parse(
    const ::std::string& name, KeyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KeyType>(
    KeyType_descriptor(), name, value);
}
// ===================================================================

class TcxAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.TcxAction) */ {
 public:
  TcxAction();
  virtual ~TcxAction();

  TcxAction(const TcxAction& from);

  inline TcxAction& operator=(const TcxAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TcxAction& default_instance();

  static const TcxAction* internal_default_instance();

  void Swap(TcxAction* other);

  // implements Message ----------------------------------------------

  inline TcxAction* New() const { return New(NULL); }

  TcxAction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TcxAction& from);
  void MergeFrom(const TcxAction& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TcxAction* other);
  void UnsafeMergeFrom(const TcxAction& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string method = 1;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional .google.protobuf.Any param = 2;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::google::protobuf::Any& param() const;
  ::google::protobuf::Any* mutable_param();
  ::google::protobuf::Any* release_param();
  void set_allocated_param(::google::protobuf::Any* param);

  // @@protoc_insertion_point(class_scope:api.TcxAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::Any* param_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TcxAction> TcxAction_default_instance_;

// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static const Response* internal_default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  void UnsafeMergeFrom(const Response& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isSuccess = 1;
  void clear_issuccess();
  static const int kIsSuccessFieldNumber = 1;
  bool issuccess() const;
  void set_issuccess(bool value);

  // optional string error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:api.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  bool issuccess_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

// -------------------------------------------------------------------

class InitTokenCoreXParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.InitTokenCoreXParam) */ {
 public:
  InitTokenCoreXParam();
  virtual ~InitTokenCoreXParam();

  InitTokenCoreXParam(const InitTokenCoreXParam& from);

  inline InitTokenCoreXParam& operator=(const InitTokenCoreXParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitTokenCoreXParam& default_instance();

  static const InitTokenCoreXParam* internal_default_instance();

  void Swap(InitTokenCoreXParam* other);

  // implements Message ----------------------------------------------

  inline InitTokenCoreXParam* New() const { return New(NULL); }

  InitTokenCoreXParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitTokenCoreXParam& from);
  void MergeFrom(const InitTokenCoreXParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitTokenCoreXParam* other);
  void UnsafeMergeFrom(const InitTokenCoreXParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fileDir = 1;
  void clear_filedir();
  static const int kFileDirFieldNumber = 1;
  const ::std::string& filedir() const;
  void set_filedir(const ::std::string& value);
  void set_filedir(const char* value);
  void set_filedir(const char* value, size_t size);
  ::std::string* mutable_filedir();
  ::std::string* release_filedir();
  void set_allocated_filedir(::std::string* filedir);

  // optional string xpubCommonKey = 2;
  void clear_xpubcommonkey();
  static const int kXpubCommonKeyFieldNumber = 2;
  const ::std::string& xpubcommonkey() const;
  void set_xpubcommonkey(const ::std::string& value);
  void set_xpubcommonkey(const char* value);
  void set_xpubcommonkey(const char* value, size_t size);
  ::std::string* mutable_xpubcommonkey();
  ::std::string* release_xpubcommonkey();
  void set_allocated_xpubcommonkey(::std::string* xpubcommonkey);

  // optional string xpubCommonIv = 3;
  void clear_xpubcommoniv();
  static const int kXpubCommonIvFieldNumber = 3;
  const ::std::string& xpubcommoniv() const;
  void set_xpubcommoniv(const ::std::string& value);
  void set_xpubcommoniv(const char* value);
  void set_xpubcommoniv(const char* value, size_t size);
  ::std::string* mutable_xpubcommoniv();
  ::std::string* release_xpubcommoniv();
  void set_allocated_xpubcommoniv(::std::string* xpubcommoniv);

  // @@protoc_insertion_point(class_scope:api.InitTokenCoreXParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filedir_;
  ::google::protobuf::internal::ArenaStringPtr xpubcommonkey_;
  ::google::protobuf::internal::ArenaStringPtr xpubcommoniv_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<InitTokenCoreXParam> InitTokenCoreXParam_default_instance_;

// -------------------------------------------------------------------

class HdStoreCreateParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.HdStoreCreateParam) */ {
 public:
  HdStoreCreateParam();
  virtual ~HdStoreCreateParam();

  HdStoreCreateParam(const HdStoreCreateParam& from);

  inline HdStoreCreateParam& operator=(const HdStoreCreateParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HdStoreCreateParam& default_instance();

  static const HdStoreCreateParam* internal_default_instance();

  void Swap(HdStoreCreateParam* other);

  // implements Message ----------------------------------------------

  inline HdStoreCreateParam* New() const { return New(NULL); }

  HdStoreCreateParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HdStoreCreateParam& from);
  void MergeFrom(const HdStoreCreateParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HdStoreCreateParam* other);
  void UnsafeMergeFrom(const HdStoreCreateParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string password = 1;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string passwordHint = 2;
  void clear_passwordhint();
  static const int kPasswordHintFieldNumber = 2;
  const ::std::string& passwordhint() const;
  void set_passwordhint(const ::std::string& value);
  void set_passwordhint(const char* value);
  void set_passwordhint(const char* value, size_t size);
  ::std::string* mutable_passwordhint();
  ::std::string* release_passwordhint();
  void set_allocated_passwordhint(::std::string* passwordhint);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:api.HdStoreCreateParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr passwordhint_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HdStoreCreateParam> HdStoreCreateParam_default_instance_;

// -------------------------------------------------------------------

class WalletResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.WalletResult) */ {
 public:
  WalletResult();
  virtual ~WalletResult();

  WalletResult(const WalletResult& from);

  inline WalletResult& operator=(const WalletResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WalletResult& default_instance();

  static const WalletResult* internal_default_instance();

  void Swap(WalletResult* other);

  // implements Message ----------------------------------------------

  inline WalletResult* New() const { return New(NULL); }

  WalletResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WalletResult& from);
  void MergeFrom(const WalletResult& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WalletResult* other);
  void UnsafeMergeFrom(const WalletResult& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string source = 3;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // repeated .api.AccountResponse accounts = 4;
  int accounts_size() const;
  void clear_accounts();
  static const int kAccountsFieldNumber = 4;
  const ::api::AccountResponse& accounts(int index) const;
  ::api::AccountResponse* mutable_accounts(int index);
  ::api::AccountResponse* add_accounts();
  ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >*
      mutable_accounts();
  const ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >&
      accounts() const;

  // optional int64 createdAt = 5;
  void clear_createdat();
  static const int kCreatedAtFieldNumber = 5;
  ::google::protobuf::int64 createdat() const;
  void set_createdat(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:api.WalletResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::api::AccountResponse > accounts_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::int64 createdat_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WalletResult> WalletResult_default_instance_;

// -------------------------------------------------------------------

class HdStoreImportParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.HdStoreImportParam) */ {
 public:
  HdStoreImportParam();
  virtual ~HdStoreImportParam();

  HdStoreImportParam(const HdStoreImportParam& from);

  inline HdStoreImportParam& operator=(const HdStoreImportParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HdStoreImportParam& default_instance();

  static const HdStoreImportParam* internal_default_instance();

  void Swap(HdStoreImportParam* other);

  // implements Message ----------------------------------------------

  inline HdStoreImportParam* New() const { return New(NULL); }

  HdStoreImportParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HdStoreImportParam& from);
  void MergeFrom(const HdStoreImportParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HdStoreImportParam* other);
  void UnsafeMergeFrom(const HdStoreImportParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string mnemonic = 1;
  void clear_mnemonic();
  static const int kMnemonicFieldNumber = 1;
  const ::std::string& mnemonic() const;
  void set_mnemonic(const ::std::string& value);
  void set_mnemonic(const char* value);
  void set_mnemonic(const char* value, size_t size);
  ::std::string* mutable_mnemonic();
  ::std::string* release_mnemonic();
  void set_allocated_mnemonic(::std::string* mnemonic);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string source = 3;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string passwordHint = 5;
  void clear_passwordhint();
  static const int kPasswordHintFieldNumber = 5;
  const ::std::string& passwordhint() const;
  void set_passwordhint(const ::std::string& value);
  void set_passwordhint(const char* value);
  void set_passwordhint(const char* value, size_t size);
  ::std::string* mutable_passwordhint();
  ::std::string* release_passwordhint();
  void set_allocated_passwordhint(::std::string* passwordhint);

  // optional bool overwrite = 6;
  void clear_overwrite();
  static const int kOverwriteFieldNumber = 6;
  bool overwrite() const;
  void set_overwrite(bool value);

  // @@protoc_insertion_point(class_scope:api.HdStoreImportParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mnemonic_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr passwordhint_;
  bool overwrite_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HdStoreImportParam> HdStoreImportParam_default_instance_;

// -------------------------------------------------------------------

class HdStoreDeriveParam_Derivation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.HdStoreDeriveParam.Derivation) */ {
 public:
  HdStoreDeriveParam_Derivation();
  virtual ~HdStoreDeriveParam_Derivation();

  HdStoreDeriveParam_Derivation(const HdStoreDeriveParam_Derivation& from);

  inline HdStoreDeriveParam_Derivation& operator=(const HdStoreDeriveParam_Derivation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HdStoreDeriveParam_Derivation& default_instance();

  static const HdStoreDeriveParam_Derivation* internal_default_instance();

  void Swap(HdStoreDeriveParam_Derivation* other);

  // implements Message ----------------------------------------------

  inline HdStoreDeriveParam_Derivation* New() const { return New(NULL); }

  HdStoreDeriveParam_Derivation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HdStoreDeriveParam_Derivation& from);
  void MergeFrom(const HdStoreDeriveParam_Derivation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HdStoreDeriveParam_Derivation* other);
  void UnsafeMergeFrom(const HdStoreDeriveParam_Derivation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string chainType = 1;
  void clear_chaintype();
  static const int kChainTypeFieldNumber = 1;
  const ::std::string& chaintype() const;
  void set_chaintype(const ::std::string& value);
  void set_chaintype(const char* value);
  void set_chaintype(const char* value, size_t size);
  ::std::string* mutable_chaintype();
  ::std::string* release_chaintype();
  void set_allocated_chaintype(::std::string* chaintype);

  // optional string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string network = 3;
  void clear_network();
  static const int kNetworkFieldNumber = 3;
  const ::std::string& network() const;
  void set_network(const ::std::string& value);
  void set_network(const char* value);
  void set_network(const char* value, size_t size);
  ::std::string* mutable_network();
  ::std::string* release_network();
  void set_allocated_network(::std::string* network);

  // optional string segWit = 4;
  void clear_segwit();
  static const int kSegWitFieldNumber = 4;
  const ::std::string& segwit() const;
  void set_segwit(const ::std::string& value);
  void set_segwit(const char* value);
  void set_segwit(const char* value, size_t size);
  ::std::string* mutable_segwit();
  ::std::string* release_segwit();
  void set_allocated_segwit(::std::string* segwit);

  // optional string chainId = 5;
  void clear_chainid();
  static const int kChainIdFieldNumber = 5;
  const ::std::string& chainid() const;
  void set_chainid(const ::std::string& value);
  void set_chainid(const char* value);
  void set_chainid(const char* value, size_t size);
  ::std::string* mutable_chainid();
  ::std::string* release_chainid();
  void set_allocated_chainid(::std::string* chainid);

  // @@protoc_insertion_point(class_scope:api.HdStoreDeriveParam.Derivation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chaintype_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr network_;
  ::google::protobuf::internal::ArenaStringPtr segwit_;
  ::google::protobuf::internal::ArenaStringPtr chainid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HdStoreDeriveParam_Derivation> HdStoreDeriveParam_Derivation_default_instance_;

// -------------------------------------------------------------------

class HdStoreDeriveParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.HdStoreDeriveParam) */ {
 public:
  HdStoreDeriveParam();
  virtual ~HdStoreDeriveParam();

  HdStoreDeriveParam(const HdStoreDeriveParam& from);

  inline HdStoreDeriveParam& operator=(const HdStoreDeriveParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HdStoreDeriveParam& default_instance();

  static const HdStoreDeriveParam* internal_default_instance();

  void Swap(HdStoreDeriveParam* other);

  // implements Message ----------------------------------------------

  inline HdStoreDeriveParam* New() const { return New(NULL); }

  HdStoreDeriveParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HdStoreDeriveParam& from);
  void MergeFrom(const HdStoreDeriveParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HdStoreDeriveParam* other);
  void UnsafeMergeFrom(const HdStoreDeriveParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef HdStoreDeriveParam_Derivation Derivation;

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // repeated .api.HdStoreDeriveParam.Derivation derivations = 3;
  int derivations_size() const;
  void clear_derivations();
  static const int kDerivationsFieldNumber = 3;
  const ::api::HdStoreDeriveParam_Derivation& derivations(int index) const;
  ::api::HdStoreDeriveParam_Derivation* mutable_derivations(int index);
  ::api::HdStoreDeriveParam_Derivation* add_derivations();
  ::google::protobuf::RepeatedPtrField< ::api::HdStoreDeriveParam_Derivation >*
      mutable_derivations();
  const ::google::protobuf::RepeatedPtrField< ::api::HdStoreDeriveParam_Derivation >&
      derivations() const;

  // @@protoc_insertion_point(class_scope:api.HdStoreDeriveParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::api::HdStoreDeriveParam_Derivation > derivations_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HdStoreDeriveParam> HdStoreDeriveParam_default_instance_;

// -------------------------------------------------------------------

class AccountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.AccountResponse) */ {
 public:
  AccountResponse();
  virtual ~AccountResponse();

  AccountResponse(const AccountResponse& from);

  inline AccountResponse& operator=(const AccountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountResponse& default_instance();

  static const AccountResponse* internal_default_instance();

  void Swap(AccountResponse* other);

  // implements Message ----------------------------------------------

  inline AccountResponse* New() const { return New(NULL); }

  AccountResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountResponse& from);
  void MergeFrom(const AccountResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccountResponse* other);
  void UnsafeMergeFrom(const AccountResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string chainType = 1;
  void clear_chaintype();
  static const int kChainTypeFieldNumber = 1;
  const ::std::string& chaintype() const;
  void set_chaintype(const ::std::string& value);
  void set_chaintype(const char* value);
  void set_chaintype(const char* value, size_t size);
  ::std::string* mutable_chaintype();
  ::std::string* release_chaintype();
  void set_allocated_chaintype(::std::string* chaintype);

  // optional string address = 2;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional string path = 3;
  void clear_path();
  static const int kPathFieldNumber = 3;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string extendedXpubKey = 4;
  void clear_extendedxpubkey();
  static const int kExtendedXpubKeyFieldNumber = 4;
  const ::std::string& extendedxpubkey() const;
  void set_extendedxpubkey(const ::std::string& value);
  void set_extendedxpubkey(const char* value);
  void set_extendedxpubkey(const char* value, size_t size);
  ::std::string* mutable_extendedxpubkey();
  ::std::string* release_extendedxpubkey();
  void set_allocated_extendedxpubkey(::std::string* extendedxpubkey);

  // @@protoc_insertion_point(class_scope:api.AccountResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chaintype_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr extendedxpubkey_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AccountResponse> AccountResponse_default_instance_;

// -------------------------------------------------------------------

class AccountsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.AccountsResponse) */ {
 public:
  AccountsResponse();
  virtual ~AccountsResponse();

  AccountsResponse(const AccountsResponse& from);

  inline AccountsResponse& operator=(const AccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountsResponse& default_instance();

  static const AccountsResponse* internal_default_instance();

  void Swap(AccountsResponse* other);

  // implements Message ----------------------------------------------

  inline AccountsResponse* New() const { return New(NULL); }

  AccountsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountsResponse& from);
  void MergeFrom(const AccountsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccountsResponse* other);
  void UnsafeMergeFrom(const AccountsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .api.AccountResponse accounts = 1;
  int accounts_size() const;
  void clear_accounts();
  static const int kAccountsFieldNumber = 1;
  const ::api::AccountResponse& accounts(int index) const;
  ::api::AccountResponse* mutable_accounts(int index);
  ::api::AccountResponse* add_accounts();
  ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >*
      mutable_accounts();
  const ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >&
      accounts() const;

  // @@protoc_insertion_point(class_scope:api.AccountsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::api::AccountResponse > accounts_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AccountsResponse> AccountsResponse_default_instance_;

// -------------------------------------------------------------------

class AddressResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.AddressResponse) */ {
 public:
  AddressResponse();
  virtual ~AddressResponse();

  AddressResponse(const AddressResponse& from);

  inline AddressResponse& operator=(const AddressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressResponse& default_instance();

  static const AddressResponse* internal_default_instance();

  void Swap(AddressResponse* other);

  // implements Message ----------------------------------------------

  inline AddressResponse* New() const { return New(NULL); }

  AddressResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddressResponse& from);
  void MergeFrom(const AddressResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddressResponse* other);
  void UnsafeMergeFrom(const AddressResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:api.AddressResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AddressResponse> AddressResponse_default_instance_;

// -------------------------------------------------------------------

class AddressParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.AddressParam) */ {
 public:
  AddressParam();
  virtual ~AddressParam();

  AddressParam(const AddressParam& from);

  inline AddressParam& operator=(const AddressParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressParam& default_instance();

  static const AddressParam* internal_default_instance();

  void Swap(AddressParam* other);

  // implements Message ----------------------------------------------

  inline AddressParam* New() const { return New(NULL); }

  AddressParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddressParam& from);
  void MergeFrom(const AddressParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddressParam* other);
  void UnsafeMergeFrom(const AddressParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string chainType = 1;
  void clear_chaintype();
  static const int kChainTypeFieldNumber = 1;
  const ::std::string& chaintype() const;
  void set_chaintype(const ::std::string& value);
  void set_chaintype(const char* value);
  void set_chaintype(const char* value, size_t size);
  ::std::string* mutable_chaintype();
  ::std::string* release_chaintype();
  void set_allocated_chaintype(::std::string* chaintype);

  // optional string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:api.AddressParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chaintype_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AddressParam> AddressParam_default_instance_;

// -------------------------------------------------------------------

class KeystoreCommonExportResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.KeystoreCommonExportResult) */ {
 public:
  KeystoreCommonExportResult();
  virtual ~KeystoreCommonExportResult();

  KeystoreCommonExportResult(const KeystoreCommonExportResult& from);

  inline KeystoreCommonExportResult& operator=(const KeystoreCommonExportResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeystoreCommonExportResult& default_instance();

  static const KeystoreCommonExportResult* internal_default_instance();

  void Swap(KeystoreCommonExportResult* other);

  // implements Message ----------------------------------------------

  inline KeystoreCommonExportResult* New() const { return New(NULL); }

  KeystoreCommonExportResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeystoreCommonExportResult& from);
  void MergeFrom(const KeystoreCommonExportResult& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeystoreCommonExportResult* other);
  void UnsafeMergeFrom(const KeystoreCommonExportResult& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .api.KeyType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::api::KeyType type() const;
  void set_type(::api::KeyType value);

  // optional string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:api.KeystoreCommonExportResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<KeystoreCommonExportResult> KeystoreCommonExportResult_default_instance_;

// -------------------------------------------------------------------

class PrivateKeyStoreImportParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.PrivateKeyStoreImportParam) */ {
 public:
  PrivateKeyStoreImportParam();
  virtual ~PrivateKeyStoreImportParam();

  PrivateKeyStoreImportParam(const PrivateKeyStoreImportParam& from);

  inline PrivateKeyStoreImportParam& operator=(const PrivateKeyStoreImportParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrivateKeyStoreImportParam& default_instance();

  static const PrivateKeyStoreImportParam* internal_default_instance();

  void Swap(PrivateKeyStoreImportParam* other);

  // implements Message ----------------------------------------------

  inline PrivateKeyStoreImportParam* New() const { return New(NULL); }

  PrivateKeyStoreImportParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrivateKeyStoreImportParam& from);
  void MergeFrom(const PrivateKeyStoreImportParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrivateKeyStoreImportParam* other);
  void UnsafeMergeFrom(const PrivateKeyStoreImportParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string privateKey = 1;
  void clear_privatekey();
  static const int kPrivateKeyFieldNumber = 1;
  const ::std::string& privatekey() const;
  void set_privatekey(const ::std::string& value);
  void set_privatekey(const char* value);
  void set_privatekey(const char* value, size_t size);
  ::std::string* mutable_privatekey();
  ::std::string* release_privatekey();
  void set_allocated_privatekey(::std::string* privatekey);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string chainType = 3;
  void clear_chaintype();
  static const int kChainTypeFieldNumber = 3;
  const ::std::string& chaintype() const;
  void set_chaintype(const ::std::string& value);
  void set_chaintype(const char* value);
  void set_chaintype(const char* value, size_t size);
  ::std::string* mutable_chaintype();
  ::std::string* release_chaintype();
  void set_allocated_chaintype(::std::string* chaintype);

  // optional string network = 4;
  void clear_network();
  static const int kNetworkFieldNumber = 4;
  const ::std::string& network() const;
  void set_network(const ::std::string& value);
  void set_network(const char* value);
  void set_network(const char* value, size_t size);
  ::std::string* mutable_network();
  ::std::string* release_network();
  void set_allocated_network(::std::string* network);

  // optional string segWit = 5;
  void clear_segwit();
  static const int kSegWitFieldNumber = 5;
  const ::std::string& segwit() const;
  void set_segwit(const ::std::string& value);
  void set_segwit(const char* value);
  void set_segwit(const char* value, size_t size);
  ::std::string* mutable_segwit();
  ::std::string* release_segwit();
  void set_allocated_segwit(::std::string* segwit);

  // optional bool overwrite = 10;
  void clear_overwrite();
  static const int kOverwriteFieldNumber = 10;
  bool overwrite() const;
  void set_overwrite(bool value);

  // @@protoc_insertion_point(class_scope:api.PrivateKeyStoreImportParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr privatekey_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr chaintype_;
  ::google::protobuf::internal::ArenaStringPtr network_;
  ::google::protobuf::internal::ArenaStringPtr segwit_;
  bool overwrite_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PrivateKeyStoreImportParam> PrivateKeyStoreImportParam_default_instance_;

// -------------------------------------------------------------------

class PrivateKeyStoreExportParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.PrivateKeyStoreExportParam) */ {
 public:
  PrivateKeyStoreExportParam();
  virtual ~PrivateKeyStoreExportParam();

  PrivateKeyStoreExportParam(const PrivateKeyStoreExportParam& from);

  inline PrivateKeyStoreExportParam& operator=(const PrivateKeyStoreExportParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrivateKeyStoreExportParam& default_instance();

  static const PrivateKeyStoreExportParam* internal_default_instance();

  void Swap(PrivateKeyStoreExportParam* other);

  // implements Message ----------------------------------------------

  inline PrivateKeyStoreExportParam* New() const { return New(NULL); }

  PrivateKeyStoreExportParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrivateKeyStoreExportParam& from);
  void MergeFrom(const PrivateKeyStoreExportParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrivateKeyStoreExportParam* other);
  void UnsafeMergeFrom(const PrivateKeyStoreExportParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string chainType = 3;
  void clear_chaintype();
  static const int kChainTypeFieldNumber = 3;
  const ::std::string& chaintype() const;
  void set_chaintype(const ::std::string& value);
  void set_chaintype(const char* value);
  void set_chaintype(const char* value, size_t size);
  ::std::string* mutable_chaintype();
  ::std::string* release_chaintype();
  void set_allocated_chaintype(::std::string* chaintype);

  // optional string network = 4;
  void clear_network();
  static const int kNetworkFieldNumber = 4;
  const ::std::string& network() const;
  void set_network(const ::std::string& value);
  void set_network(const char* value);
  void set_network(const char* value, size_t size);
  ::std::string* mutable_network();
  ::std::string* release_network();
  void set_allocated_network(::std::string* network);

  // @@protoc_insertion_point(class_scope:api.PrivateKeyStoreExportParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr chaintype_;
  ::google::protobuf::internal::ArenaStringPtr network_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PrivateKeyStoreExportParam> PrivateKeyStoreExportParam_default_instance_;

// -------------------------------------------------------------------

class WalletKeyParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.WalletKeyParam) */ {
 public:
  WalletKeyParam();
  virtual ~WalletKeyParam();

  WalletKeyParam(const WalletKeyParam& from);

  inline WalletKeyParam& operator=(const WalletKeyParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WalletKeyParam& default_instance();

  static const WalletKeyParam* internal_default_instance();

  void Swap(WalletKeyParam* other);

  // implements Message ----------------------------------------------

  inline WalletKeyParam* New() const { return New(NULL); }

  WalletKeyParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WalletKeyParam& from);
  void MergeFrom(const WalletKeyParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WalletKeyParam* other);
  void UnsafeMergeFrom(const WalletKeyParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:api.WalletKeyParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WalletKeyParam> WalletKeyParam_default_instance_;

// -------------------------------------------------------------------

class KeystoreCommonExistsParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.KeystoreCommonExistsParam) */ {
 public:
  KeystoreCommonExistsParam();
  virtual ~KeystoreCommonExistsParam();

  KeystoreCommonExistsParam(const KeystoreCommonExistsParam& from);

  inline KeystoreCommonExistsParam& operator=(const KeystoreCommonExistsParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeystoreCommonExistsParam& default_instance();

  static const KeystoreCommonExistsParam* internal_default_instance();

  void Swap(KeystoreCommonExistsParam* other);

  // implements Message ----------------------------------------------

  inline KeystoreCommonExistsParam* New() const { return New(NULL); }

  KeystoreCommonExistsParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeystoreCommonExistsParam& from);
  void MergeFrom(const KeystoreCommonExistsParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeystoreCommonExistsParam* other);
  void UnsafeMergeFrom(const KeystoreCommonExistsParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .api.KeyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::api::KeyType type() const;
  void set_type(::api::KeyType value);

  // optional string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:api.KeystoreCommonExistsParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<KeystoreCommonExistsParam> KeystoreCommonExistsParam_default_instance_;

// -------------------------------------------------------------------

class KeystoreCommonExistsResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.KeystoreCommonExistsResult) */ {
 public:
  KeystoreCommonExistsResult();
  virtual ~KeystoreCommonExistsResult();

  KeystoreCommonExistsResult(const KeystoreCommonExistsResult& from);

  inline KeystoreCommonExistsResult& operator=(const KeystoreCommonExistsResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeystoreCommonExistsResult& default_instance();

  static const KeystoreCommonExistsResult* internal_default_instance();

  void Swap(KeystoreCommonExistsResult* other);

  // implements Message ----------------------------------------------

  inline KeystoreCommonExistsResult* New() const { return New(NULL); }

  KeystoreCommonExistsResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeystoreCommonExistsResult& from);
  void MergeFrom(const KeystoreCommonExistsResult& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeystoreCommonExistsResult* other);
  void UnsafeMergeFrom(const KeystoreCommonExistsResult& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isExists = 1;
  void clear_isexists();
  static const int kIsExistsFieldNumber = 1;
  bool isexists() const;
  void set_isexists(bool value);

  // optional string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:api.KeystoreCommonExistsResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  bool isexists_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<KeystoreCommonExistsResult> KeystoreCommonExistsResult_default_instance_;

// -------------------------------------------------------------------

class KeystoreCommonAccountsParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.KeystoreCommonAccountsParam) */ {
 public:
  KeystoreCommonAccountsParam();
  virtual ~KeystoreCommonAccountsParam();

  KeystoreCommonAccountsParam(const KeystoreCommonAccountsParam& from);

  inline KeystoreCommonAccountsParam& operator=(const KeystoreCommonAccountsParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeystoreCommonAccountsParam& default_instance();

  static const KeystoreCommonAccountsParam* internal_default_instance();

  void Swap(KeystoreCommonAccountsParam* other);

  // implements Message ----------------------------------------------

  inline KeystoreCommonAccountsParam* New() const { return New(NULL); }

  KeystoreCommonAccountsParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeystoreCommonAccountsParam& from);
  void MergeFrom(const KeystoreCommonAccountsParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeystoreCommonAccountsParam* other);
  void UnsafeMergeFrom(const KeystoreCommonAccountsParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:api.KeystoreCommonAccountsParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<KeystoreCommonAccountsParam> KeystoreCommonAccountsParam_default_instance_;

// -------------------------------------------------------------------

class SignParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.SignParam) */ {
 public:
  SignParam();
  virtual ~SignParam();

  SignParam(const SignParam& from);

  inline SignParam& operator=(const SignParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignParam& default_instance();

  static const SignParam* internal_default_instance();

  void Swap(SignParam* other);

  // implements Message ----------------------------------------------

  inline SignParam* New() const { return New(NULL); }

  SignParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignParam& from);
  void MergeFrom(const SignParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SignParam* other);
  void UnsafeMergeFrom(const SignParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string chainType = 3;
  void clear_chaintype();
  static const int kChainTypeFieldNumber = 3;
  const ::std::string& chaintype() const;
  void set_chaintype(const ::std::string& value);
  void set_chaintype(const char* value);
  void set_chaintype(const char* value, size_t size);
  ::std::string* mutable_chaintype();
  ::std::string* release_chaintype();
  void set_allocated_chaintype(::std::string* chaintype);

  // optional string address = 4;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional .google.protobuf.Any input = 5;
  bool has_input() const;
  void clear_input();
  static const int kInputFieldNumber = 5;
  const ::google::protobuf::Any& input() const;
  ::google::protobuf::Any* mutable_input();
  ::google::protobuf::Any* release_input();
  void set_allocated_input(::google::protobuf::Any* input);

  // @@protoc_insertion_point(class_scope:api.SignParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr chaintype_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::Any* input_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SignParam> SignParam_default_instance_;

// -------------------------------------------------------------------

class ExternalAddressParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.ExternalAddressParam) */ {
 public:
  ExternalAddressParam();
  virtual ~ExternalAddressParam();

  ExternalAddressParam(const ExternalAddressParam& from);

  inline ExternalAddressParam& operator=(const ExternalAddressParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternalAddressParam& default_instance();

  static const ExternalAddressParam* internal_default_instance();

  void Swap(ExternalAddressParam* other);

  // implements Message ----------------------------------------------

  inline ExternalAddressParam* New() const { return New(NULL); }

  ExternalAddressParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternalAddressParam& from);
  void MergeFrom(const ExternalAddressParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternalAddressParam* other);
  void UnsafeMergeFrom(const ExternalAddressParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string chainType = 2;
  void clear_chaintype();
  static const int kChainTypeFieldNumber = 2;
  const ::std::string& chaintype() const;
  void set_chaintype(const ::std::string& value);
  void set_chaintype(const char* value);
  void set_chaintype(const char* value, size_t size);
  ::std::string* mutable_chaintype();
  ::std::string* release_chaintype();
  void set_allocated_chaintype(::std::string* chaintype);

  // optional uint32 externalIdx = 3;
  void clear_externalidx();
  static const int kExternalIdxFieldNumber = 3;
  ::google::protobuf::uint32 externalidx() const;
  void set_externalidx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:api.ExternalAddressParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr chaintype_;
  ::google::protobuf::uint32 externalidx_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ExternalAddressParam> ExternalAddressParam_default_instance_;

// -------------------------------------------------------------------

class ExternalAddressResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.ExternalAddressResult) */ {
 public:
  ExternalAddressResult();
  virtual ~ExternalAddressResult();

  ExternalAddressResult(const ExternalAddressResult& from);

  inline ExternalAddressResult& operator=(const ExternalAddressResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternalAddressResult& default_instance();

  static const ExternalAddressResult* internal_default_instance();

  void Swap(ExternalAddressResult* other);

  // implements Message ----------------------------------------------

  inline ExternalAddressResult* New() const { return New(NULL); }

  ExternalAddressResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternalAddressResult& from);
  void MergeFrom(const ExternalAddressResult& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternalAddressResult* other);
  void UnsafeMergeFrom(const ExternalAddressResult& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional string derivedPath = 2;
  void clear_derivedpath();
  static const int kDerivedPathFieldNumber = 2;
  const ::std::string& derivedpath() const;
  void set_derivedpath(const ::std::string& value);
  void set_derivedpath(const char* value);
  void set_derivedpath(const char* value, size_t size);
  ::std::string* mutable_derivedpath();
  ::std::string* release_derivedpath();
  void set_allocated_derivedpath(::std::string* derivedpath);

  // optional string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:api.ExternalAddressResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr derivedpath_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ExternalAddressResult> ExternalAddressResult_default_instance_;

// -------------------------------------------------------------------

class ExternalAddressExtra_ExternalAddress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.ExternalAddressExtra.ExternalAddress) */ {
 public:
  ExternalAddressExtra_ExternalAddress();
  virtual ~ExternalAddressExtra_ExternalAddress();

  ExternalAddressExtra_ExternalAddress(const ExternalAddressExtra_ExternalAddress& from);

  inline ExternalAddressExtra_ExternalAddress& operator=(const ExternalAddressExtra_ExternalAddress& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternalAddressExtra_ExternalAddress& default_instance();

  static const ExternalAddressExtra_ExternalAddress* internal_default_instance();

  void Swap(ExternalAddressExtra_ExternalAddress* other);

  // implements Message ----------------------------------------------

  inline ExternalAddressExtra_ExternalAddress* New() const { return New(NULL); }

  ExternalAddressExtra_ExternalAddress* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternalAddressExtra_ExternalAddress& from);
  void MergeFrom(const ExternalAddressExtra_ExternalAddress& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternalAddressExtra_ExternalAddress* other);
  void UnsafeMergeFrom(const ExternalAddressExtra_ExternalAddress& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional string derivedPath = 2;
  void clear_derivedpath();
  static const int kDerivedPathFieldNumber = 2;
  const ::std::string& derivedpath() const;
  void set_derivedpath(const ::std::string& value);
  void set_derivedpath(const char* value);
  void set_derivedpath(const char* value, size_t size);
  ::std::string* mutable_derivedpath();
  ::std::string* release_derivedpath();
  void set_allocated_derivedpath(::std::string* derivedpath);

  // optional string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:api.ExternalAddressExtra.ExternalAddress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr derivedpath_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ExternalAddressExtra_ExternalAddress> ExternalAddressExtra_ExternalAddress_default_instance_;

// -------------------------------------------------------------------

class ExternalAddressExtra : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.ExternalAddressExtra) */ {
 public:
  ExternalAddressExtra();
  virtual ~ExternalAddressExtra();

  ExternalAddressExtra(const ExternalAddressExtra& from);

  inline ExternalAddressExtra& operator=(const ExternalAddressExtra& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternalAddressExtra& default_instance();

  static const ExternalAddressExtra* internal_default_instance();

  void Swap(ExternalAddressExtra* other);

  // implements Message ----------------------------------------------

  inline ExternalAddressExtra* New() const { return New(NULL); }

  ExternalAddressExtra* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExternalAddressExtra& from);
  void MergeFrom(const ExternalAddressExtra& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExternalAddressExtra* other);
  void UnsafeMergeFrom(const ExternalAddressExtra& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ExternalAddressExtra_ExternalAddress ExternalAddress;

  // accessors -------------------------------------------------------

  // optional string encXpub = 1;
  void clear_encxpub();
  static const int kEncXpubFieldNumber = 1;
  const ::std::string& encxpub() const;
  void set_encxpub(const ::std::string& value);
  void set_encxpub(const char* value);
  void set_encxpub(const char* value, size_t size);
  ::std::string* mutable_encxpub();
  ::std::string* release_encxpub();
  void set_allocated_encxpub(::std::string* encxpub);

  // optional .api.ExternalAddressExtra.ExternalAddress externalAddress = 2;
  bool has_externaladdress() const;
  void clear_externaladdress();
  static const int kExternalAddressFieldNumber = 2;
  const ::api::ExternalAddressExtra_ExternalAddress& externaladdress() const;
  ::api::ExternalAddressExtra_ExternalAddress* mutable_externaladdress();
  ::api::ExternalAddressExtra_ExternalAddress* release_externaladdress();
  void set_allocated_externaladdress(::api::ExternalAddressExtra_ExternalAddress* externaladdress);

  // @@protoc_insertion_point(class_scope:api.ExternalAddressExtra)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr encxpub_;
  ::api::ExternalAddressExtra_ExternalAddress* externaladdress_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ExternalAddressExtra> ExternalAddressExtra_default_instance_;

// -------------------------------------------------------------------

class BtcForkDeriveExtraParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.BtcForkDeriveExtraParam) */ {
 public:
  BtcForkDeriveExtraParam();
  virtual ~BtcForkDeriveExtraParam();

  BtcForkDeriveExtraParam(const BtcForkDeriveExtraParam& from);

  inline BtcForkDeriveExtraParam& operator=(const BtcForkDeriveExtraParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcForkDeriveExtraParam& default_instance();

  static const BtcForkDeriveExtraParam* internal_default_instance();

  void Swap(BtcForkDeriveExtraParam* other);

  // implements Message ----------------------------------------------

  inline BtcForkDeriveExtraParam* New() const { return New(NULL); }

  BtcForkDeriveExtraParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcForkDeriveExtraParam& from);
  void MergeFrom(const BtcForkDeriveExtraParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcForkDeriveExtraParam* other);
  void UnsafeMergeFrom(const BtcForkDeriveExtraParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string network = 1;
  void clear_network();
  static const int kNetworkFieldNumber = 1;
  const ::std::string& network() const;
  void set_network(const ::std::string& value);
  void set_network(const char* value);
  void set_network(const char* value, size_t size);
  ::std::string* mutable_network();
  ::std::string* release_network();
  void set_allocated_network(::std::string* network);

  // optional string segWit = 2;
  void clear_segwit();
  static const int kSegWitFieldNumber = 2;
  const ::std::string& segwit() const;
  void set_segwit(const ::std::string& value);
  void set_segwit(const char* value);
  void set_segwit(const char* value, size_t size);
  ::std::string* mutable_segwit();
  ::std::string* release_segwit();
  void set_allocated_segwit(::std::string* segwit);

  // @@protoc_insertion_point(class_scope:api.BtcForkDeriveExtraParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr network_;
  ::google::protobuf::internal::ArenaStringPtr segwit_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcForkDeriveExtraParam> BtcForkDeriveExtraParam_default_instance_;

// -------------------------------------------------------------------

class HdStoreExtendedPublicKeyParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.HdStoreExtendedPublicKeyParam) */ {
 public:
  HdStoreExtendedPublicKeyParam();
  virtual ~HdStoreExtendedPublicKeyParam();

  HdStoreExtendedPublicKeyParam(const HdStoreExtendedPublicKeyParam& from);

  inline HdStoreExtendedPublicKeyParam& operator=(const HdStoreExtendedPublicKeyParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HdStoreExtendedPublicKeyParam& default_instance();

  static const HdStoreExtendedPublicKeyParam* internal_default_instance();

  void Swap(HdStoreExtendedPublicKeyParam* other);

  // implements Message ----------------------------------------------

  inline HdStoreExtendedPublicKeyParam* New() const { return New(NULL); }

  HdStoreExtendedPublicKeyParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HdStoreExtendedPublicKeyParam& from);
  void MergeFrom(const HdStoreExtendedPublicKeyParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HdStoreExtendedPublicKeyParam* other);
  void UnsafeMergeFrom(const HdStoreExtendedPublicKeyParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string chainType = 3;
  void clear_chaintype();
  static const int kChainTypeFieldNumber = 3;
  const ::std::string& chaintype() const;
  void set_chaintype(const ::std::string& value);
  void set_chaintype(const char* value);
  void set_chaintype(const char* value, size_t size);
  ::std::string* mutable_chaintype();
  ::std::string* release_chaintype();
  void set_allocated_chaintype(::std::string* chaintype);

  // optional string address = 4;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:api.HdStoreExtendedPublicKeyParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr chaintype_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HdStoreExtendedPublicKeyParam> HdStoreExtendedPublicKeyParam_default_instance_;

// -------------------------------------------------------------------

class HdStoreExtendedPublicKeyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.HdStoreExtendedPublicKeyResponse) */ {
 public:
  HdStoreExtendedPublicKeyResponse();
  virtual ~HdStoreExtendedPublicKeyResponse();

  HdStoreExtendedPublicKeyResponse(const HdStoreExtendedPublicKeyResponse& from);

  inline HdStoreExtendedPublicKeyResponse& operator=(const HdStoreExtendedPublicKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HdStoreExtendedPublicKeyResponse& default_instance();

  static const HdStoreExtendedPublicKeyResponse* internal_default_instance();

  void Swap(HdStoreExtendedPublicKeyResponse* other);

  // implements Message ----------------------------------------------

  inline HdStoreExtendedPublicKeyResponse* New() const { return New(NULL); }

  HdStoreExtendedPublicKeyResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HdStoreExtendedPublicKeyResponse& from);
  void MergeFrom(const HdStoreExtendedPublicKeyResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HdStoreExtendedPublicKeyResponse* other);
  void UnsafeMergeFrom(const HdStoreExtendedPublicKeyResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string extendedPublicKey = 1;
  void clear_extendedpublickey();
  static const int kExtendedPublicKeyFieldNumber = 1;
  const ::std::string& extendedpublickey() const;
  void set_extendedpublickey(const ::std::string& value);
  void set_extendedpublickey(const char* value);
  void set_extendedpublickey(const char* value, size_t size);
  ::std::string* mutable_extendedpublickey();
  ::std::string* release_extendedpublickey();
  void set_allocated_extendedpublickey(::std::string* extendedpublickey);

  // @@protoc_insertion_point(class_scope:api.HdStoreExtendedPublicKeyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr extendedpublickey_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HdStoreExtendedPublicKeyResponse> HdStoreExtendedPublicKeyResponse_default_instance_;

// -------------------------------------------------------------------

class DeviceParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.DeviceParam) */ {
 public:
  DeviceParam();
  virtual ~DeviceParam();

  DeviceParam(const DeviceParam& from);

  inline DeviceParam& operator=(const DeviceParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceParam& default_instance();

  static const DeviceParam* internal_default_instance();

  void Swap(DeviceParam* other);

  // implements Message ----------------------------------------------

  inline DeviceParam* New() const { return New(NULL); }

  DeviceParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceParam& from);
  void MergeFrom(const DeviceParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeviceParam* other);
  void UnsafeMergeFrom(const DeviceParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);

  // optional .google.protobuf.Any param = 2;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::google::protobuf::Any& param() const;
  ::google::protobuf::Any* mutable_param();
  ::google::protobuf::Any* release_param();
  void set_allocated_param(::google::protobuf::Any* param);

  // @@protoc_insertion_point(class_scope:api.DeviceParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr action_;
  ::google::protobuf::Any* param_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_api_2eproto_impl();
  friend void  protobuf_AddDesc_api_2eproto_impl();
  friend void protobuf_AssignDesc_api_2eproto();
  friend void protobuf_ShutdownFile_api_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeviceParam> DeviceParam_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TcxAction

// optional string method = 1;
inline void TcxAction::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TcxAction::method() const {
  // @@protoc_insertion_point(field_get:api.TcxAction.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TcxAction::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.TcxAction.method)
}
inline void TcxAction::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.TcxAction.method)
}
inline void TcxAction::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.TcxAction.method)
}
inline ::std::string* TcxAction::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:api.TcxAction.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TcxAction::release_method() {
  // @@protoc_insertion_point(field_release:api.TcxAction.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TcxAction::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:api.TcxAction.method)
}

// optional .google.protobuf.Any param = 2;
inline bool TcxAction::has_param() const {
  return this != internal_default_instance() && param_ != NULL;
}
inline void TcxAction::clear_param() {
  if (GetArenaNoVirtual() == NULL && param_ != NULL) delete param_;
  param_ = NULL;
}
inline const ::google::protobuf::Any& TcxAction::param() const {
  // @@protoc_insertion_point(field_get:api.TcxAction.param)
  return param_ != NULL ? *param_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* TcxAction::mutable_param() {
  
  if (param_ == NULL) {
    param_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:api.TcxAction.param)
  return param_;
}
inline ::google::protobuf::Any* TcxAction::release_param() {
  // @@protoc_insertion_point(field_release:api.TcxAction.param)
  
  ::google::protobuf::Any* temp = param_;
  param_ = NULL;
  return temp;
}
inline void TcxAction::set_allocated_param(::google::protobuf::Any* param) {
  delete param_;
  param_ = param;
  if (param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:api.TcxAction.param)
}

inline const TcxAction* TcxAction::internal_default_instance() {
  return &TcxAction_default_instance_.get();
}
// -------------------------------------------------------------------

// Response

// optional bool isSuccess = 1;
inline void Response::clear_issuccess() {
  issuccess_ = false;
}
inline bool Response::issuccess() const {
  // @@protoc_insertion_point(field_get:api.Response.isSuccess)
  return issuccess_;
}
inline void Response::set_issuccess(bool value) {
  
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:api.Response.isSuccess)
}

// optional string error = 2;
inline void Response::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::error() const {
  // @@protoc_insertion_point(field_get:api.Response.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.Response.error)
}
inline void Response::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.Response.error)
}
inline void Response::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.Response.error)
}
inline ::std::string* Response::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:api.Response.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_error() {
  // @@protoc_insertion_point(field_release:api.Response.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:api.Response.error)
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
// -------------------------------------------------------------------

// InitTokenCoreXParam

// optional string fileDir = 1;
inline void InitTokenCoreXParam::clear_filedir() {
  filedir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitTokenCoreXParam::filedir() const {
  // @@protoc_insertion_point(field_get:api.InitTokenCoreXParam.fileDir)
  return filedir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitTokenCoreXParam::set_filedir(const ::std::string& value) {
  
  filedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.InitTokenCoreXParam.fileDir)
}
inline void InitTokenCoreXParam::set_filedir(const char* value) {
  
  filedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.InitTokenCoreXParam.fileDir)
}
inline void InitTokenCoreXParam::set_filedir(const char* value, size_t size) {
  
  filedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.InitTokenCoreXParam.fileDir)
}
inline ::std::string* InitTokenCoreXParam::mutable_filedir() {
  
  // @@protoc_insertion_point(field_mutable:api.InitTokenCoreXParam.fileDir)
  return filedir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitTokenCoreXParam::release_filedir() {
  // @@protoc_insertion_point(field_release:api.InitTokenCoreXParam.fileDir)
  
  return filedir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitTokenCoreXParam::set_allocated_filedir(::std::string* filedir) {
  if (filedir != NULL) {
    
  } else {
    
  }
  filedir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filedir);
  // @@protoc_insertion_point(field_set_allocated:api.InitTokenCoreXParam.fileDir)
}

// optional string xpubCommonKey = 2;
inline void InitTokenCoreXParam::clear_xpubcommonkey() {
  xpubcommonkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitTokenCoreXParam::xpubcommonkey() const {
  // @@protoc_insertion_point(field_get:api.InitTokenCoreXParam.xpubCommonKey)
  return xpubcommonkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitTokenCoreXParam::set_xpubcommonkey(const ::std::string& value) {
  
  xpubcommonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.InitTokenCoreXParam.xpubCommonKey)
}
inline void InitTokenCoreXParam::set_xpubcommonkey(const char* value) {
  
  xpubcommonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.InitTokenCoreXParam.xpubCommonKey)
}
inline void InitTokenCoreXParam::set_xpubcommonkey(const char* value, size_t size) {
  
  xpubcommonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.InitTokenCoreXParam.xpubCommonKey)
}
inline ::std::string* InitTokenCoreXParam::mutable_xpubcommonkey() {
  
  // @@protoc_insertion_point(field_mutable:api.InitTokenCoreXParam.xpubCommonKey)
  return xpubcommonkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitTokenCoreXParam::release_xpubcommonkey() {
  // @@protoc_insertion_point(field_release:api.InitTokenCoreXParam.xpubCommonKey)
  
  return xpubcommonkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitTokenCoreXParam::set_allocated_xpubcommonkey(::std::string* xpubcommonkey) {
  if (xpubcommonkey != NULL) {
    
  } else {
    
  }
  xpubcommonkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xpubcommonkey);
  // @@protoc_insertion_point(field_set_allocated:api.InitTokenCoreXParam.xpubCommonKey)
}

// optional string xpubCommonIv = 3;
inline void InitTokenCoreXParam::clear_xpubcommoniv() {
  xpubcommoniv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitTokenCoreXParam::xpubcommoniv() const {
  // @@protoc_insertion_point(field_get:api.InitTokenCoreXParam.xpubCommonIv)
  return xpubcommoniv_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitTokenCoreXParam::set_xpubcommoniv(const ::std::string& value) {
  
  xpubcommoniv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.InitTokenCoreXParam.xpubCommonIv)
}
inline void InitTokenCoreXParam::set_xpubcommoniv(const char* value) {
  
  xpubcommoniv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.InitTokenCoreXParam.xpubCommonIv)
}
inline void InitTokenCoreXParam::set_xpubcommoniv(const char* value, size_t size) {
  
  xpubcommoniv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.InitTokenCoreXParam.xpubCommonIv)
}
inline ::std::string* InitTokenCoreXParam::mutable_xpubcommoniv() {
  
  // @@protoc_insertion_point(field_mutable:api.InitTokenCoreXParam.xpubCommonIv)
  return xpubcommoniv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitTokenCoreXParam::release_xpubcommoniv() {
  // @@protoc_insertion_point(field_release:api.InitTokenCoreXParam.xpubCommonIv)
  
  return xpubcommoniv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitTokenCoreXParam::set_allocated_xpubcommoniv(::std::string* xpubcommoniv) {
  if (xpubcommoniv != NULL) {
    
  } else {
    
  }
  xpubcommoniv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xpubcommoniv);
  // @@protoc_insertion_point(field_set_allocated:api.InitTokenCoreXParam.xpubCommonIv)
}

inline const InitTokenCoreXParam* InitTokenCoreXParam::internal_default_instance() {
  return &InitTokenCoreXParam_default_instance_.get();
}
// -------------------------------------------------------------------

// HdStoreCreateParam

// optional string password = 1;
inline void HdStoreCreateParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreCreateParam::password() const {
  // @@protoc_insertion_point(field_get:api.HdStoreCreateParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreCreateParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreCreateParam.password)
}
inline void HdStoreCreateParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreCreateParam.password)
}
inline void HdStoreCreateParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreCreateParam.password)
}
inline ::std::string* HdStoreCreateParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreCreateParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreCreateParam::release_password() {
  // @@protoc_insertion_point(field_release:api.HdStoreCreateParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreCreateParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreCreateParam.password)
}

// optional string passwordHint = 2;
inline void HdStoreCreateParam::clear_passwordhint() {
  passwordhint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreCreateParam::passwordhint() const {
  // @@protoc_insertion_point(field_get:api.HdStoreCreateParam.passwordHint)
  return passwordhint_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreCreateParam::set_passwordhint(const ::std::string& value) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreCreateParam.passwordHint)
}
inline void HdStoreCreateParam::set_passwordhint(const char* value) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreCreateParam.passwordHint)
}
inline void HdStoreCreateParam::set_passwordhint(const char* value, size_t size) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreCreateParam.passwordHint)
}
inline ::std::string* HdStoreCreateParam::mutable_passwordhint() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreCreateParam.passwordHint)
  return passwordhint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreCreateParam::release_passwordhint() {
  // @@protoc_insertion_point(field_release:api.HdStoreCreateParam.passwordHint)
  
  return passwordhint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreCreateParam::set_allocated_passwordhint(::std::string* passwordhint) {
  if (passwordhint != NULL) {
    
  } else {
    
  }
  passwordhint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwordhint);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreCreateParam.passwordHint)
}

// optional string name = 3;
inline void HdStoreCreateParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreCreateParam::name() const {
  // @@protoc_insertion_point(field_get:api.HdStoreCreateParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreCreateParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreCreateParam.name)
}
inline void HdStoreCreateParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreCreateParam.name)
}
inline void HdStoreCreateParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreCreateParam.name)
}
inline ::std::string* HdStoreCreateParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreCreateParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreCreateParam::release_name() {
  // @@protoc_insertion_point(field_release:api.HdStoreCreateParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreCreateParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreCreateParam.name)
}

inline const HdStoreCreateParam* HdStoreCreateParam::internal_default_instance() {
  return &HdStoreCreateParam_default_instance_.get();
}
// -------------------------------------------------------------------

// WalletResult

// optional string id = 1;
inline void WalletResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WalletResult::id() const {
  // @@protoc_insertion_point(field_get:api.WalletResult.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletResult.id)
}
inline void WalletResult::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletResult.id)
}
inline void WalletResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletResult.id)
}
inline ::std::string* WalletResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletResult::release_id() {
  // @@protoc_insertion_point(field_release:api.WalletResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.WalletResult.id)
}

// optional string name = 2;
inline void WalletResult::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WalletResult::name() const {
  // @@protoc_insertion_point(field_get:api.WalletResult.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletResult::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletResult.name)
}
inline void WalletResult::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletResult.name)
}
inline void WalletResult::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletResult.name)
}
inline ::std::string* WalletResult::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletResult.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletResult::release_name() {
  // @@protoc_insertion_point(field_release:api.WalletResult.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletResult::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:api.WalletResult.name)
}

// optional string source = 3;
inline void WalletResult::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WalletResult::source() const {
  // @@protoc_insertion_point(field_get:api.WalletResult.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletResult::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletResult.source)
}
inline void WalletResult::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletResult.source)
}
inline void WalletResult::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletResult.source)
}
inline ::std::string* WalletResult::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletResult.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletResult::release_source() {
  // @@protoc_insertion_point(field_release:api.WalletResult.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletResult::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:api.WalletResult.source)
}

// repeated .api.AccountResponse accounts = 4;
inline int WalletResult::accounts_size() const {
  return accounts_.size();
}
inline void WalletResult::clear_accounts() {
  accounts_.Clear();
}
inline const ::api::AccountResponse& WalletResult::accounts(int index) const {
  // @@protoc_insertion_point(field_get:api.WalletResult.accounts)
  return accounts_.Get(index);
}
inline ::api::AccountResponse* WalletResult::mutable_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:api.WalletResult.accounts)
  return accounts_.Mutable(index);
}
inline ::api::AccountResponse* WalletResult::add_accounts() {
  // @@protoc_insertion_point(field_add:api.WalletResult.accounts)
  return accounts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >*
WalletResult::mutable_accounts() {
  // @@protoc_insertion_point(field_mutable_list:api.WalletResult.accounts)
  return &accounts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >&
WalletResult::accounts() const {
  // @@protoc_insertion_point(field_list:api.WalletResult.accounts)
  return accounts_;
}

// optional int64 createdAt = 5;
inline void WalletResult::clear_createdat() {
  createdat_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WalletResult::createdat() const {
  // @@protoc_insertion_point(field_get:api.WalletResult.createdAt)
  return createdat_;
}
inline void WalletResult::set_createdat(::google::protobuf::int64 value) {
  
  createdat_ = value;
  // @@protoc_insertion_point(field_set:api.WalletResult.createdAt)
}

inline const WalletResult* WalletResult::internal_default_instance() {
  return &WalletResult_default_instance_.get();
}
// -------------------------------------------------------------------

// HdStoreImportParam

// optional string mnemonic = 1;
inline void HdStoreImportParam::clear_mnemonic() {
  mnemonic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreImportParam::mnemonic() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.mnemonic)
  return mnemonic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_mnemonic(const ::std::string& value) {
  
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.mnemonic)
}
inline void HdStoreImportParam::set_mnemonic(const char* value) {
  
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.mnemonic)
}
inline void HdStoreImportParam::set_mnemonic(const char* value, size_t size) {
  
  mnemonic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.mnemonic)
}
inline ::std::string* HdStoreImportParam::mutable_mnemonic() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.mnemonic)
  return mnemonic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreImportParam::release_mnemonic() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.mnemonic)
  
  return mnemonic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_allocated_mnemonic(::std::string* mnemonic) {
  if (mnemonic != NULL) {
    
  } else {
    
  }
  mnemonic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mnemonic);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.mnemonic)
}

// optional string password = 2;
inline void HdStoreImportParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreImportParam::password() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.password)
}
inline void HdStoreImportParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.password)
}
inline void HdStoreImportParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.password)
}
inline ::std::string* HdStoreImportParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreImportParam::release_password() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.password)
}

// optional string source = 3;
inline void HdStoreImportParam::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreImportParam::source() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.source)
}
inline void HdStoreImportParam::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.source)
}
inline void HdStoreImportParam::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.source)
}
inline ::std::string* HdStoreImportParam::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreImportParam::release_source() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.source)
}

// optional string name = 4;
inline void HdStoreImportParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreImportParam::name() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.name)
}
inline void HdStoreImportParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.name)
}
inline void HdStoreImportParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.name)
}
inline ::std::string* HdStoreImportParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreImportParam::release_name() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.name)
}

// optional string passwordHint = 5;
inline void HdStoreImportParam::clear_passwordhint() {
  passwordhint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreImportParam::passwordhint() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.passwordHint)
  return passwordhint_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_passwordhint(const ::std::string& value) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.passwordHint)
}
inline void HdStoreImportParam::set_passwordhint(const char* value) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreImportParam.passwordHint)
}
inline void HdStoreImportParam::set_passwordhint(const char* value, size_t size) {
  
  passwordhint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreImportParam.passwordHint)
}
inline ::std::string* HdStoreImportParam::mutable_passwordhint() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreImportParam.passwordHint)
  return passwordhint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreImportParam::release_passwordhint() {
  // @@protoc_insertion_point(field_release:api.HdStoreImportParam.passwordHint)
  
  return passwordhint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreImportParam::set_allocated_passwordhint(::std::string* passwordhint) {
  if (passwordhint != NULL) {
    
  } else {
    
  }
  passwordhint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwordhint);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreImportParam.passwordHint)
}

// optional bool overwrite = 6;
inline void HdStoreImportParam::clear_overwrite() {
  overwrite_ = false;
}
inline bool HdStoreImportParam::overwrite() const {
  // @@protoc_insertion_point(field_get:api.HdStoreImportParam.overwrite)
  return overwrite_;
}
inline void HdStoreImportParam::set_overwrite(bool value) {
  
  overwrite_ = value;
  // @@protoc_insertion_point(field_set:api.HdStoreImportParam.overwrite)
}

inline const HdStoreImportParam* HdStoreImportParam::internal_default_instance() {
  return &HdStoreImportParam_default_instance_.get();
}
// -------------------------------------------------------------------

// HdStoreDeriveParam_Derivation

// optional string chainType = 1;
inline void HdStoreDeriveParam_Derivation::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreDeriveParam_Derivation::chaintype() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.chainType)
}
inline void HdStoreDeriveParam_Derivation::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.chainType)
}
inline void HdStoreDeriveParam_Derivation::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.chainType)
}
inline ::std::string* HdStoreDeriveParam_Derivation::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreDeriveParam_Derivation::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.chainType)
}

// optional string path = 2;
inline void HdStoreDeriveParam_Derivation::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreDeriveParam_Derivation::path() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.path)
}
inline void HdStoreDeriveParam_Derivation::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.path)
}
inline void HdStoreDeriveParam_Derivation::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.path)
}
inline ::std::string* HdStoreDeriveParam_Derivation::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreDeriveParam_Derivation::release_path() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.path)
}

// optional string network = 3;
inline void HdStoreDeriveParam_Derivation::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreDeriveParam_Derivation::network() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.network)
}
inline void HdStoreDeriveParam_Derivation::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.network)
}
inline void HdStoreDeriveParam_Derivation::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.network)
}
inline ::std::string* HdStoreDeriveParam_Derivation::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreDeriveParam_Derivation::release_network() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.network)
}

// optional string segWit = 4;
inline void HdStoreDeriveParam_Derivation::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreDeriveParam_Derivation::segwit() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.segWit)
}
inline void HdStoreDeriveParam_Derivation::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.segWit)
}
inline void HdStoreDeriveParam_Derivation::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.segWit)
}
inline ::std::string* HdStoreDeriveParam_Derivation::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreDeriveParam_Derivation::release_segwit() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.segWit)
}

// optional string chainId = 5;
inline void HdStoreDeriveParam_Derivation::clear_chainid() {
  chainid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreDeriveParam_Derivation::chainid() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.Derivation.chainId)
  return chainid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_chainid(const ::std::string& value) {
  
  chainid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.Derivation.chainId)
}
inline void HdStoreDeriveParam_Derivation::set_chainid(const char* value) {
  
  chainid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.Derivation.chainId)
}
inline void HdStoreDeriveParam_Derivation::set_chainid(const char* value, size_t size) {
  
  chainid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.Derivation.chainId)
}
inline ::std::string* HdStoreDeriveParam_Derivation::mutable_chainid() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.Derivation.chainId)
  return chainid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreDeriveParam_Derivation::release_chainid() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.Derivation.chainId)
  
  return chainid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam_Derivation::set_allocated_chainid(::std::string* chainid) {
  if (chainid != NULL) {
    
  } else {
    
  }
  chainid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chainid);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.Derivation.chainId)
}

inline const HdStoreDeriveParam_Derivation* HdStoreDeriveParam_Derivation::internal_default_instance() {
  return &HdStoreDeriveParam_Derivation_default_instance_.get();
}
// -------------------------------------------------------------------

// HdStoreDeriveParam

// optional string id = 1;
inline void HdStoreDeriveParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreDeriveParam::id() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.id)
}
inline void HdStoreDeriveParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.id)
}
inline void HdStoreDeriveParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.id)
}
inline ::std::string* HdStoreDeriveParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreDeriveParam::release_id() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.id)
}

// optional string password = 2;
inline void HdStoreDeriveParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreDeriveParam::password() const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreDeriveParam.password)
}
inline void HdStoreDeriveParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreDeriveParam.password)
}
inline void HdStoreDeriveParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreDeriveParam.password)
}
inline ::std::string* HdStoreDeriveParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreDeriveParam::release_password() {
  // @@protoc_insertion_point(field_release:api.HdStoreDeriveParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreDeriveParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreDeriveParam.password)
}

// repeated .api.HdStoreDeriveParam.Derivation derivations = 3;
inline int HdStoreDeriveParam::derivations_size() const {
  return derivations_.size();
}
inline void HdStoreDeriveParam::clear_derivations() {
  derivations_.Clear();
}
inline const ::api::HdStoreDeriveParam_Derivation& HdStoreDeriveParam::derivations(int index) const {
  // @@protoc_insertion_point(field_get:api.HdStoreDeriveParam.derivations)
  return derivations_.Get(index);
}
inline ::api::HdStoreDeriveParam_Derivation* HdStoreDeriveParam::mutable_derivations(int index) {
  // @@protoc_insertion_point(field_mutable:api.HdStoreDeriveParam.derivations)
  return derivations_.Mutable(index);
}
inline ::api::HdStoreDeriveParam_Derivation* HdStoreDeriveParam::add_derivations() {
  // @@protoc_insertion_point(field_add:api.HdStoreDeriveParam.derivations)
  return derivations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::api::HdStoreDeriveParam_Derivation >*
HdStoreDeriveParam::mutable_derivations() {
  // @@protoc_insertion_point(field_mutable_list:api.HdStoreDeriveParam.derivations)
  return &derivations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::api::HdStoreDeriveParam_Derivation >&
HdStoreDeriveParam::derivations() const {
  // @@protoc_insertion_point(field_list:api.HdStoreDeriveParam.derivations)
  return derivations_;
}

inline const HdStoreDeriveParam* HdStoreDeriveParam::internal_default_instance() {
  return &HdStoreDeriveParam_default_instance_.get();
}
// -------------------------------------------------------------------

// AccountResponse

// optional string chainType = 1;
inline void AccountResponse::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountResponse::chaintype() const {
  // @@protoc_insertion_point(field_get:api.AccountResponse.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountResponse::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AccountResponse.chainType)
}
inline void AccountResponse::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AccountResponse.chainType)
}
inline void AccountResponse::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AccountResponse.chainType)
}
inline ::std::string* AccountResponse::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.AccountResponse.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountResponse::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.AccountResponse.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountResponse::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.AccountResponse.chainType)
}

// optional string address = 2;
inline void AccountResponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountResponse::address() const {
  // @@protoc_insertion_point(field_get:api.AccountResponse.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountResponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AccountResponse.address)
}
inline void AccountResponse::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AccountResponse.address)
}
inline void AccountResponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AccountResponse.address)
}
inline ::std::string* AccountResponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.AccountResponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountResponse::release_address() {
  // @@protoc_insertion_point(field_release:api.AccountResponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountResponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.AccountResponse.address)
}

// optional string path = 3;
inline void AccountResponse::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountResponse::path() const {
  // @@protoc_insertion_point(field_get:api.AccountResponse.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountResponse::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AccountResponse.path)
}
inline void AccountResponse::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AccountResponse.path)
}
inline void AccountResponse::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AccountResponse.path)
}
inline ::std::string* AccountResponse::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:api.AccountResponse.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountResponse::release_path() {
  // @@protoc_insertion_point(field_release:api.AccountResponse.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountResponse::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:api.AccountResponse.path)
}

// optional string extendedXpubKey = 4;
inline void AccountResponse::clear_extendedxpubkey() {
  extendedxpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountResponse::extendedxpubkey() const {
  // @@protoc_insertion_point(field_get:api.AccountResponse.extendedXpubKey)
  return extendedxpubkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountResponse::set_extendedxpubkey(const ::std::string& value) {
  
  extendedxpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AccountResponse.extendedXpubKey)
}
inline void AccountResponse::set_extendedxpubkey(const char* value) {
  
  extendedxpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AccountResponse.extendedXpubKey)
}
inline void AccountResponse::set_extendedxpubkey(const char* value, size_t size) {
  
  extendedxpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AccountResponse.extendedXpubKey)
}
inline ::std::string* AccountResponse::mutable_extendedxpubkey() {
  
  // @@protoc_insertion_point(field_mutable:api.AccountResponse.extendedXpubKey)
  return extendedxpubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountResponse::release_extendedxpubkey() {
  // @@protoc_insertion_point(field_release:api.AccountResponse.extendedXpubKey)
  
  return extendedxpubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountResponse::set_allocated_extendedxpubkey(::std::string* extendedxpubkey) {
  if (extendedxpubkey != NULL) {
    
  } else {
    
  }
  extendedxpubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extendedxpubkey);
  // @@protoc_insertion_point(field_set_allocated:api.AccountResponse.extendedXpubKey)
}

inline const AccountResponse* AccountResponse::internal_default_instance() {
  return &AccountResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// AccountsResponse

// repeated .api.AccountResponse accounts = 1;
inline int AccountsResponse::accounts_size() const {
  return accounts_.size();
}
inline void AccountsResponse::clear_accounts() {
  accounts_.Clear();
}
inline const ::api::AccountResponse& AccountsResponse::accounts(int index) const {
  // @@protoc_insertion_point(field_get:api.AccountsResponse.accounts)
  return accounts_.Get(index);
}
inline ::api::AccountResponse* AccountsResponse::mutable_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:api.AccountsResponse.accounts)
  return accounts_.Mutable(index);
}
inline ::api::AccountResponse* AccountsResponse::add_accounts() {
  // @@protoc_insertion_point(field_add:api.AccountsResponse.accounts)
  return accounts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >*
AccountsResponse::mutable_accounts() {
  // @@protoc_insertion_point(field_mutable_list:api.AccountsResponse.accounts)
  return &accounts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::api::AccountResponse >&
AccountsResponse::accounts() const {
  // @@protoc_insertion_point(field_list:api.AccountsResponse.accounts)
  return accounts_;
}

inline const AccountsResponse* AccountsResponse::internal_default_instance() {
  return &AccountsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// AddressResponse

// optional string address = 1;
inline void AddressResponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddressResponse::address() const {
  // @@protoc_insertion_point(field_get:api.AddressResponse.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressResponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AddressResponse.address)
}
inline void AddressResponse::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AddressResponse.address)
}
inline void AddressResponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AddressResponse.address)
}
inline ::std::string* AddressResponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.AddressResponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressResponse::release_address() {
  // @@protoc_insertion_point(field_release:api.AddressResponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressResponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.AddressResponse.address)
}

inline const AddressResponse* AddressResponse::internal_default_instance() {
  return &AddressResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// AddressParam

// optional string chainType = 1;
inline void AddressParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddressParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.AddressParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AddressParam.chainType)
}
inline void AddressParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AddressParam.chainType)
}
inline void AddressParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AddressParam.chainType)
}
inline ::std::string* AddressParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.AddressParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.AddressParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.AddressParam.chainType)
}

// optional string path = 2;
inline void AddressParam::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddressParam::path() const {
  // @@protoc_insertion_point(field_get:api.AddressParam.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressParam::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.AddressParam.path)
}
inline void AddressParam::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.AddressParam.path)
}
inline void AddressParam::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.AddressParam.path)
}
inline ::std::string* AddressParam::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:api.AddressParam.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressParam::release_path() {
  // @@protoc_insertion_point(field_release:api.AddressParam.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressParam::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:api.AddressParam.path)
}

inline const AddressParam* AddressParam::internal_default_instance() {
  return &AddressParam_default_instance_.get();
}
// -------------------------------------------------------------------

// KeystoreCommonExportResult

// optional string id = 1;
inline void KeystoreCommonExportResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeystoreCommonExportResult::id() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExportResult.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonExportResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExportResult.id)
}
inline void KeystoreCommonExportResult::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonExportResult.id)
}
inline void KeystoreCommonExportResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonExportResult.id)
}
inline ::std::string* KeystoreCommonExportResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonExportResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeystoreCommonExportResult::release_id() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonExportResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonExportResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonExportResult.id)
}

// optional .api.KeyType type = 2;
inline void KeystoreCommonExportResult::clear_type() {
  type_ = 0;
}
inline ::api::KeyType KeystoreCommonExportResult::type() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExportResult.type)
  return static_cast< ::api::KeyType >(type_);
}
inline void KeystoreCommonExportResult::set_type(::api::KeyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExportResult.type)
}

// optional string value = 3;
inline void KeystoreCommonExportResult::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeystoreCommonExportResult::value() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExportResult.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonExportResult::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExportResult.value)
}
inline void KeystoreCommonExportResult::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonExportResult.value)
}
inline void KeystoreCommonExportResult::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonExportResult.value)
}
inline ::std::string* KeystoreCommonExportResult::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonExportResult.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeystoreCommonExportResult::release_value() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonExportResult.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonExportResult::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonExportResult.value)
}

inline const KeystoreCommonExportResult* KeystoreCommonExportResult::internal_default_instance() {
  return &KeystoreCommonExportResult_default_instance_.get();
}
// -------------------------------------------------------------------

// PrivateKeyStoreImportParam

// optional string privateKey = 1;
inline void PrivateKeyStoreImportParam::clear_privatekey() {
  privatekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreImportParam::privatekey() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.privateKey)
  return privatekey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_privatekey(const ::std::string& value) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.privateKey)
}
inline void PrivateKeyStoreImportParam::set_privatekey(const char* value) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.privateKey)
}
inline void PrivateKeyStoreImportParam::set_privatekey(const char* value, size_t size) {
  
  privatekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.privateKey)
}
inline ::std::string* PrivateKeyStoreImportParam::mutable_privatekey() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.privateKey)
  return privatekey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreImportParam::release_privatekey() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.privateKey)
  
  return privatekey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_allocated_privatekey(::std::string* privatekey) {
  if (privatekey != NULL) {
    
  } else {
    
  }
  privatekey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), privatekey);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.privateKey)
}

// optional string password = 2;
inline void PrivateKeyStoreImportParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreImportParam::password() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.password)
}
inline void PrivateKeyStoreImportParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.password)
}
inline void PrivateKeyStoreImportParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.password)
}
inline ::std::string* PrivateKeyStoreImportParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreImportParam::release_password() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.password)
}

// optional string chainType = 3;
inline void PrivateKeyStoreImportParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreImportParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.chainType)
}
inline void PrivateKeyStoreImportParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.chainType)
}
inline void PrivateKeyStoreImportParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.chainType)
}
inline ::std::string* PrivateKeyStoreImportParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreImportParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.chainType)
}

// optional string network = 4;
inline void PrivateKeyStoreImportParam::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreImportParam::network() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.network)
}
inline void PrivateKeyStoreImportParam::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.network)
}
inline void PrivateKeyStoreImportParam::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.network)
}
inline ::std::string* PrivateKeyStoreImportParam::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreImportParam::release_network() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.network)
}

// optional string segWit = 5;
inline void PrivateKeyStoreImportParam::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreImportParam::segwit() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.segWit)
}
inline void PrivateKeyStoreImportParam::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreImportParam.segWit)
}
inline void PrivateKeyStoreImportParam::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreImportParam.segWit)
}
inline ::std::string* PrivateKeyStoreImportParam::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreImportParam.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreImportParam::release_segwit() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreImportParam.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreImportParam::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreImportParam.segWit)
}

// optional bool overwrite = 10;
inline void PrivateKeyStoreImportParam::clear_overwrite() {
  overwrite_ = false;
}
inline bool PrivateKeyStoreImportParam::overwrite() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreImportParam.overwrite)
  return overwrite_;
}
inline void PrivateKeyStoreImportParam::set_overwrite(bool value) {
  
  overwrite_ = value;
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreImportParam.overwrite)
}

inline const PrivateKeyStoreImportParam* PrivateKeyStoreImportParam::internal_default_instance() {
  return &PrivateKeyStoreImportParam_default_instance_.get();
}
// -------------------------------------------------------------------

// PrivateKeyStoreExportParam

// optional string id = 1;
inline void PrivateKeyStoreExportParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreExportParam::id() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreExportParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreExportParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreExportParam.id)
}
inline void PrivateKeyStoreExportParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreExportParam.id)
}
inline void PrivateKeyStoreExportParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreExportParam.id)
}
inline ::std::string* PrivateKeyStoreExportParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreExportParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreExportParam::release_id() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreExportParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreExportParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreExportParam.id)
}

// optional string password = 2;
inline void PrivateKeyStoreExportParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreExportParam::password() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreExportParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreExportParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreExportParam.password)
}
inline void PrivateKeyStoreExportParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreExportParam.password)
}
inline void PrivateKeyStoreExportParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreExportParam.password)
}
inline ::std::string* PrivateKeyStoreExportParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreExportParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreExportParam::release_password() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreExportParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreExportParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreExportParam.password)
}

// optional string chainType = 3;
inline void PrivateKeyStoreExportParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreExportParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreExportParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreExportParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreExportParam.chainType)
}
inline void PrivateKeyStoreExportParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreExportParam.chainType)
}
inline void PrivateKeyStoreExportParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreExportParam.chainType)
}
inline ::std::string* PrivateKeyStoreExportParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreExportParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreExportParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreExportParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreExportParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreExportParam.chainType)
}

// optional string network = 4;
inline void PrivateKeyStoreExportParam::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrivateKeyStoreExportParam::network() const {
  // @@protoc_insertion_point(field_get:api.PrivateKeyStoreExportParam.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreExportParam::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.PrivateKeyStoreExportParam.network)
}
inline void PrivateKeyStoreExportParam::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.PrivateKeyStoreExportParam.network)
}
inline void PrivateKeyStoreExportParam::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.PrivateKeyStoreExportParam.network)
}
inline ::std::string* PrivateKeyStoreExportParam::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.PrivateKeyStoreExportParam.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrivateKeyStoreExportParam::release_network() {
  // @@protoc_insertion_point(field_release:api.PrivateKeyStoreExportParam.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrivateKeyStoreExportParam::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.PrivateKeyStoreExportParam.network)
}

inline const PrivateKeyStoreExportParam* PrivateKeyStoreExportParam::internal_default_instance() {
  return &PrivateKeyStoreExportParam_default_instance_.get();
}
// -------------------------------------------------------------------

// WalletKeyParam

// optional string id = 1;
inline void WalletKeyParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WalletKeyParam::id() const {
  // @@protoc_insertion_point(field_get:api.WalletKeyParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletKeyParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletKeyParam.id)
}
inline void WalletKeyParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletKeyParam.id)
}
inline void WalletKeyParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletKeyParam.id)
}
inline ::std::string* WalletKeyParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletKeyParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletKeyParam::release_id() {
  // @@protoc_insertion_point(field_release:api.WalletKeyParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletKeyParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.WalletKeyParam.id)
}

// optional string password = 2;
inline void WalletKeyParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WalletKeyParam::password() const {
  // @@protoc_insertion_point(field_get:api.WalletKeyParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletKeyParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.WalletKeyParam.password)
}
inline void WalletKeyParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.WalletKeyParam.password)
}
inline void WalletKeyParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.WalletKeyParam.password)
}
inline ::std::string* WalletKeyParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.WalletKeyParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WalletKeyParam::release_password() {
  // @@protoc_insertion_point(field_release:api.WalletKeyParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WalletKeyParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.WalletKeyParam.password)
}

inline const WalletKeyParam* WalletKeyParam::internal_default_instance() {
  return &WalletKeyParam_default_instance_.get();
}
// -------------------------------------------------------------------

// KeystoreCommonExistsParam

// optional .api.KeyType type = 1;
inline void KeystoreCommonExistsParam::clear_type() {
  type_ = 0;
}
inline ::api::KeyType KeystoreCommonExistsParam::type() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExistsParam.type)
  return static_cast< ::api::KeyType >(type_);
}
inline void KeystoreCommonExistsParam::set_type(::api::KeyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExistsParam.type)
}

// optional string value = 2;
inline void KeystoreCommonExistsParam::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeystoreCommonExistsParam::value() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExistsParam.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonExistsParam::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExistsParam.value)
}
inline void KeystoreCommonExistsParam::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonExistsParam.value)
}
inline void KeystoreCommonExistsParam::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonExistsParam.value)
}
inline ::std::string* KeystoreCommonExistsParam::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonExistsParam.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeystoreCommonExistsParam::release_value() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonExistsParam.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonExistsParam::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonExistsParam.value)
}

inline const KeystoreCommonExistsParam* KeystoreCommonExistsParam::internal_default_instance() {
  return &KeystoreCommonExistsParam_default_instance_.get();
}
// -------------------------------------------------------------------

// KeystoreCommonExistsResult

// optional bool isExists = 1;
inline void KeystoreCommonExistsResult::clear_isexists() {
  isexists_ = false;
}
inline bool KeystoreCommonExistsResult::isexists() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExistsResult.isExists)
  return isexists_;
}
inline void KeystoreCommonExistsResult::set_isexists(bool value) {
  
  isexists_ = value;
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExistsResult.isExists)
}

// optional string id = 2;
inline void KeystoreCommonExistsResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeystoreCommonExistsResult::id() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonExistsResult.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonExistsResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonExistsResult.id)
}
inline void KeystoreCommonExistsResult::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonExistsResult.id)
}
inline void KeystoreCommonExistsResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonExistsResult.id)
}
inline ::std::string* KeystoreCommonExistsResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonExistsResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeystoreCommonExistsResult::release_id() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonExistsResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonExistsResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonExistsResult.id)
}

inline const KeystoreCommonExistsResult* KeystoreCommonExistsResult::internal_default_instance() {
  return &KeystoreCommonExistsResult_default_instance_.get();
}
// -------------------------------------------------------------------

// KeystoreCommonAccountsParam

// optional string id = 1;
inline void KeystoreCommonAccountsParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeystoreCommonAccountsParam::id() const {
  // @@protoc_insertion_point(field_get:api.KeystoreCommonAccountsParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonAccountsParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.KeystoreCommonAccountsParam.id)
}
inline void KeystoreCommonAccountsParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.KeystoreCommonAccountsParam.id)
}
inline void KeystoreCommonAccountsParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.KeystoreCommonAccountsParam.id)
}
inline ::std::string* KeystoreCommonAccountsParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.KeystoreCommonAccountsParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeystoreCommonAccountsParam::release_id() {
  // @@protoc_insertion_point(field_release:api.KeystoreCommonAccountsParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeystoreCommonAccountsParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.KeystoreCommonAccountsParam.id)
}

inline const KeystoreCommonAccountsParam* KeystoreCommonAccountsParam::internal_default_instance() {
  return &KeystoreCommonAccountsParam_default_instance_.get();
}
// -------------------------------------------------------------------

// SignParam

// optional string id = 1;
inline void SignParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignParam::id() const {
  // @@protoc_insertion_point(field_get:api.SignParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.SignParam.id)
}
inline void SignParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.SignParam.id)
}
inline void SignParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.SignParam.id)
}
inline ::std::string* SignParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.SignParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignParam::release_id() {
  // @@protoc_insertion_point(field_release:api.SignParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.id)
}

// optional string password = 2;
inline void SignParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignParam::password() const {
  // @@protoc_insertion_point(field_get:api.SignParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.SignParam.password)
}
inline void SignParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.SignParam.password)
}
inline void SignParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.SignParam.password)
}
inline ::std::string* SignParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.SignParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignParam::release_password() {
  // @@protoc_insertion_point(field_release:api.SignParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.password)
}

// optional string chainType = 3;
inline void SignParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.SignParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.SignParam.chainType)
}
inline void SignParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.SignParam.chainType)
}
inline void SignParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.SignParam.chainType)
}
inline ::std::string* SignParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.SignParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.SignParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.chainType)
}

// optional string address = 4;
inline void SignParam::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignParam::address() const {
  // @@protoc_insertion_point(field_get:api.SignParam.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignParam::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.SignParam.address)
}
inline void SignParam::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.SignParam.address)
}
inline void SignParam::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.SignParam.address)
}
inline ::std::string* SignParam::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.SignParam.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignParam::release_address() {
  // @@protoc_insertion_point(field_release:api.SignParam.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignParam::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.address)
}

// optional .google.protobuf.Any input = 5;
inline bool SignParam::has_input() const {
  return this != internal_default_instance() && input_ != NULL;
}
inline void SignParam::clear_input() {
  if (GetArenaNoVirtual() == NULL && input_ != NULL) delete input_;
  input_ = NULL;
}
inline const ::google::protobuf::Any& SignParam::input() const {
  // @@protoc_insertion_point(field_get:api.SignParam.input)
  return input_ != NULL ? *input_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* SignParam::mutable_input() {
  
  if (input_ == NULL) {
    input_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:api.SignParam.input)
  return input_;
}
inline ::google::protobuf::Any* SignParam::release_input() {
  // @@protoc_insertion_point(field_release:api.SignParam.input)
  
  ::google::protobuf::Any* temp = input_;
  input_ = NULL;
  return temp;
}
inline void SignParam::set_allocated_input(::google::protobuf::Any* input) {
  delete input_;
  input_ = input;
  if (input) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:api.SignParam.input)
}

inline const SignParam* SignParam::internal_default_instance() {
  return &SignParam_default_instance_.get();
}
// -------------------------------------------------------------------

// ExternalAddressParam

// optional string id = 1;
inline void ExternalAddressParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressParam::id() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressParam.id)
}
inline void ExternalAddressParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressParam.id)
}
inline void ExternalAddressParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressParam.id)
}
inline ::std::string* ExternalAddressParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressParam::release_id() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressParam.id)
}

// optional string chainType = 2;
inline void ExternalAddressParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressParam.chainType)
}
inline void ExternalAddressParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressParam.chainType)
}
inline void ExternalAddressParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressParam.chainType)
}
inline ::std::string* ExternalAddressParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressParam.chainType)
}

// optional uint32 externalIdx = 3;
inline void ExternalAddressParam::clear_externalidx() {
  externalidx_ = 0u;
}
inline ::google::protobuf::uint32 ExternalAddressParam::externalidx() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressParam.externalIdx)
  return externalidx_;
}
inline void ExternalAddressParam::set_externalidx(::google::protobuf::uint32 value) {
  
  externalidx_ = value;
  // @@protoc_insertion_point(field_set:api.ExternalAddressParam.externalIdx)
}

inline const ExternalAddressParam* ExternalAddressParam::internal_default_instance() {
  return &ExternalAddressParam_default_instance_.get();
}
// -------------------------------------------------------------------

// ExternalAddressResult

// optional string address = 1;
inline void ExternalAddressResult::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressResult::address() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressResult.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressResult::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressResult.address)
}
inline void ExternalAddressResult::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressResult.address)
}
inline void ExternalAddressResult::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressResult.address)
}
inline ::std::string* ExternalAddressResult::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressResult.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressResult::release_address() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressResult.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressResult::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressResult.address)
}

// optional string derivedPath = 2;
inline void ExternalAddressResult::clear_derivedpath() {
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressResult::derivedpath() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressResult.derivedPath)
  return derivedpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressResult::set_derivedpath(const ::std::string& value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressResult.derivedPath)
}
inline void ExternalAddressResult::set_derivedpath(const char* value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressResult.derivedPath)
}
inline void ExternalAddressResult::set_derivedpath(const char* value, size_t size) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressResult.derivedPath)
}
inline ::std::string* ExternalAddressResult::mutable_derivedpath() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressResult.derivedPath)
  return derivedpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressResult::release_derivedpath() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressResult.derivedPath)
  
  return derivedpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressResult::set_allocated_derivedpath(::std::string* derivedpath) {
  if (derivedpath != NULL) {
    
  } else {
    
  }
  derivedpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), derivedpath);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressResult.derivedPath)
}

// optional string type = 3;
inline void ExternalAddressResult::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressResult::type() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressResult.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressResult::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressResult.type)
}
inline void ExternalAddressResult::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressResult.type)
}
inline void ExternalAddressResult::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressResult.type)
}
inline ::std::string* ExternalAddressResult::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressResult.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressResult::release_type() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressResult.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressResult::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressResult.type)
}

inline const ExternalAddressResult* ExternalAddressResult::internal_default_instance() {
  return &ExternalAddressResult_default_instance_.get();
}
// -------------------------------------------------------------------

// ExternalAddressExtra_ExternalAddress

// optional string address = 1;
inline void ExternalAddressExtra_ExternalAddress::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressExtra_ExternalAddress::address() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.ExternalAddress.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressExtra_ExternalAddress::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressExtra.ExternalAddress.address)
}
inline void ExternalAddressExtra_ExternalAddress::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressExtra.ExternalAddress.address)
}
inline void ExternalAddressExtra_ExternalAddress::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressExtra.ExternalAddress.address)
}
inline ::std::string* ExternalAddressExtra_ExternalAddress::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.ExternalAddress.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressExtra_ExternalAddress::release_address() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.ExternalAddress.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressExtra_ExternalAddress::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.ExternalAddress.address)
}

// optional string derivedPath = 2;
inline void ExternalAddressExtra_ExternalAddress::clear_derivedpath() {
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressExtra_ExternalAddress::derivedpath() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.ExternalAddress.derivedPath)
  return derivedpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressExtra_ExternalAddress::set_derivedpath(const ::std::string& value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressExtra.ExternalAddress.derivedPath)
}
inline void ExternalAddressExtra_ExternalAddress::set_derivedpath(const char* value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressExtra.ExternalAddress.derivedPath)
}
inline void ExternalAddressExtra_ExternalAddress::set_derivedpath(const char* value, size_t size) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressExtra.ExternalAddress.derivedPath)
}
inline ::std::string* ExternalAddressExtra_ExternalAddress::mutable_derivedpath() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.ExternalAddress.derivedPath)
  return derivedpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressExtra_ExternalAddress::release_derivedpath() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.ExternalAddress.derivedPath)
  
  return derivedpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressExtra_ExternalAddress::set_allocated_derivedpath(::std::string* derivedpath) {
  if (derivedpath != NULL) {
    
  } else {
    
  }
  derivedpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), derivedpath);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.ExternalAddress.derivedPath)
}

// optional string type = 3;
inline void ExternalAddressExtra_ExternalAddress::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressExtra_ExternalAddress::type() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.ExternalAddress.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressExtra_ExternalAddress::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressExtra.ExternalAddress.type)
}
inline void ExternalAddressExtra_ExternalAddress::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressExtra.ExternalAddress.type)
}
inline void ExternalAddressExtra_ExternalAddress::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressExtra.ExternalAddress.type)
}
inline ::std::string* ExternalAddressExtra_ExternalAddress::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.ExternalAddress.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressExtra_ExternalAddress::release_type() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.ExternalAddress.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressExtra_ExternalAddress::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.ExternalAddress.type)
}

inline const ExternalAddressExtra_ExternalAddress* ExternalAddressExtra_ExternalAddress::internal_default_instance() {
  return &ExternalAddressExtra_ExternalAddress_default_instance_.get();
}
// -------------------------------------------------------------------

// ExternalAddressExtra

// optional string encXpub = 1;
inline void ExternalAddressExtra::clear_encxpub() {
  encxpub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalAddressExtra::encxpub() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.encXpub)
  return encxpub_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressExtra::set_encxpub(const ::std::string& value) {
  
  encxpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.ExternalAddressExtra.encXpub)
}
inline void ExternalAddressExtra::set_encxpub(const char* value) {
  
  encxpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.ExternalAddressExtra.encXpub)
}
inline void ExternalAddressExtra::set_encxpub(const char* value, size_t size) {
  
  encxpub_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.ExternalAddressExtra.encXpub)
}
inline ::std::string* ExternalAddressExtra::mutable_encxpub() {
  
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.encXpub)
  return encxpub_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalAddressExtra::release_encxpub() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.encXpub)
  
  return encxpub_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalAddressExtra::set_allocated_encxpub(::std::string* encxpub) {
  if (encxpub != NULL) {
    
  } else {
    
  }
  encxpub_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encxpub);
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.encXpub)
}

// optional .api.ExternalAddressExtra.ExternalAddress externalAddress = 2;
inline bool ExternalAddressExtra::has_externaladdress() const {
  return this != internal_default_instance() && externaladdress_ != NULL;
}
inline void ExternalAddressExtra::clear_externaladdress() {
  if (GetArenaNoVirtual() == NULL && externaladdress_ != NULL) delete externaladdress_;
  externaladdress_ = NULL;
}
inline const ::api::ExternalAddressExtra_ExternalAddress& ExternalAddressExtra::externaladdress() const {
  // @@protoc_insertion_point(field_get:api.ExternalAddressExtra.externalAddress)
  return externaladdress_ != NULL ? *externaladdress_
                         : *::api::ExternalAddressExtra_ExternalAddress::internal_default_instance();
}
inline ::api::ExternalAddressExtra_ExternalAddress* ExternalAddressExtra::mutable_externaladdress() {
  
  if (externaladdress_ == NULL) {
    externaladdress_ = new ::api::ExternalAddressExtra_ExternalAddress;
  }
  // @@protoc_insertion_point(field_mutable:api.ExternalAddressExtra.externalAddress)
  return externaladdress_;
}
inline ::api::ExternalAddressExtra_ExternalAddress* ExternalAddressExtra::release_externaladdress() {
  // @@protoc_insertion_point(field_release:api.ExternalAddressExtra.externalAddress)
  
  ::api::ExternalAddressExtra_ExternalAddress* temp = externaladdress_;
  externaladdress_ = NULL;
  return temp;
}
inline void ExternalAddressExtra::set_allocated_externaladdress(::api::ExternalAddressExtra_ExternalAddress* externaladdress) {
  delete externaladdress_;
  externaladdress_ = externaladdress;
  if (externaladdress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:api.ExternalAddressExtra.externalAddress)
}

inline const ExternalAddressExtra* ExternalAddressExtra::internal_default_instance() {
  return &ExternalAddressExtra_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcForkDeriveExtraParam

// optional string network = 1;
inline void BtcForkDeriveExtraParam::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcForkDeriveExtraParam::network() const {
  // @@protoc_insertion_point(field_get:api.BtcForkDeriveExtraParam.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcForkDeriveExtraParam::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.BtcForkDeriveExtraParam.network)
}
inline void BtcForkDeriveExtraParam::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.BtcForkDeriveExtraParam.network)
}
inline void BtcForkDeriveExtraParam::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.BtcForkDeriveExtraParam.network)
}
inline ::std::string* BtcForkDeriveExtraParam::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:api.BtcForkDeriveExtraParam.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcForkDeriveExtraParam::release_network() {
  // @@protoc_insertion_point(field_release:api.BtcForkDeriveExtraParam.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcForkDeriveExtraParam::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:api.BtcForkDeriveExtraParam.network)
}

// optional string segWit = 2;
inline void BtcForkDeriveExtraParam::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcForkDeriveExtraParam::segwit() const {
  // @@protoc_insertion_point(field_get:api.BtcForkDeriveExtraParam.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcForkDeriveExtraParam::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.BtcForkDeriveExtraParam.segWit)
}
inline void BtcForkDeriveExtraParam::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.BtcForkDeriveExtraParam.segWit)
}
inline void BtcForkDeriveExtraParam::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.BtcForkDeriveExtraParam.segWit)
}
inline ::std::string* BtcForkDeriveExtraParam::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:api.BtcForkDeriveExtraParam.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcForkDeriveExtraParam::release_segwit() {
  // @@protoc_insertion_point(field_release:api.BtcForkDeriveExtraParam.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcForkDeriveExtraParam::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:api.BtcForkDeriveExtraParam.segWit)
}

inline const BtcForkDeriveExtraParam* BtcForkDeriveExtraParam::internal_default_instance() {
  return &BtcForkDeriveExtraParam_default_instance_.get();
}
// -------------------------------------------------------------------

// HdStoreExtendedPublicKeyParam

// optional string id = 1;
inline void HdStoreExtendedPublicKeyParam::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreExtendedPublicKeyParam::id() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyParam.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyParam::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyParam.id)
}
inline void HdStoreExtendedPublicKeyParam::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyParam.id)
}
inline void HdStoreExtendedPublicKeyParam::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyParam.id)
}
inline ::std::string* HdStoreExtendedPublicKeyParam::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyParam.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreExtendedPublicKeyParam::release_id() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyParam.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyParam::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyParam.id)
}

// optional string password = 2;
inline void HdStoreExtendedPublicKeyParam::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreExtendedPublicKeyParam::password() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyParam.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyParam::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyParam.password)
}
inline void HdStoreExtendedPublicKeyParam::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyParam.password)
}
inline void HdStoreExtendedPublicKeyParam::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyParam.password)
}
inline ::std::string* HdStoreExtendedPublicKeyParam::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyParam.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreExtendedPublicKeyParam::release_password() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyParam.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyParam::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyParam.password)
}

// optional string chainType = 3;
inline void HdStoreExtendedPublicKeyParam::clear_chaintype() {
  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreExtendedPublicKeyParam::chaintype() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyParam.chainType)
  return chaintype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyParam::set_chaintype(const ::std::string& value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyParam.chainType)
}
inline void HdStoreExtendedPublicKeyParam::set_chaintype(const char* value) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyParam.chainType)
}
inline void HdStoreExtendedPublicKeyParam::set_chaintype(const char* value, size_t size) {
  
  chaintype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyParam.chainType)
}
inline ::std::string* HdStoreExtendedPublicKeyParam::mutable_chaintype() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyParam.chainType)
  return chaintype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreExtendedPublicKeyParam::release_chaintype() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyParam.chainType)
  
  return chaintype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyParam::set_allocated_chaintype(::std::string* chaintype) {
  if (chaintype != NULL) {
    
  } else {
    
  }
  chaintype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaintype);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyParam.chainType)
}

// optional string address = 4;
inline void HdStoreExtendedPublicKeyParam::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreExtendedPublicKeyParam::address() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyParam.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyParam::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyParam.address)
}
inline void HdStoreExtendedPublicKeyParam::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyParam.address)
}
inline void HdStoreExtendedPublicKeyParam::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyParam.address)
}
inline ::std::string* HdStoreExtendedPublicKeyParam::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyParam.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreExtendedPublicKeyParam::release_address() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyParam.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyParam::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyParam.address)
}

inline const HdStoreExtendedPublicKeyParam* HdStoreExtendedPublicKeyParam::internal_default_instance() {
  return &HdStoreExtendedPublicKeyParam_default_instance_.get();
}
// -------------------------------------------------------------------

// HdStoreExtendedPublicKeyResponse

// optional string extendedPublicKey = 1;
inline void HdStoreExtendedPublicKeyResponse::clear_extendedpublickey() {
  extendedpublickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HdStoreExtendedPublicKeyResponse::extendedpublickey() const {
  // @@protoc_insertion_point(field_get:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
  return extendedpublickey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyResponse::set_extendedpublickey(const ::std::string& value) {
  
  extendedpublickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
}
inline void HdStoreExtendedPublicKeyResponse::set_extendedpublickey(const char* value) {
  
  extendedpublickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
}
inline void HdStoreExtendedPublicKeyResponse::set_extendedpublickey(const char* value, size_t size) {
  
  extendedpublickey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
}
inline ::std::string* HdStoreExtendedPublicKeyResponse::mutable_extendedpublickey() {
  
  // @@protoc_insertion_point(field_mutable:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
  return extendedpublickey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HdStoreExtendedPublicKeyResponse::release_extendedpublickey() {
  // @@protoc_insertion_point(field_release:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
  
  return extendedpublickey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HdStoreExtendedPublicKeyResponse::set_allocated_extendedpublickey(::std::string* extendedpublickey) {
  if (extendedpublickey != NULL) {
    
  } else {
    
  }
  extendedpublickey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extendedpublickey);
  // @@protoc_insertion_point(field_set_allocated:api.HdStoreExtendedPublicKeyResponse.extendedPublicKey)
}

inline const HdStoreExtendedPublicKeyResponse* HdStoreExtendedPublicKeyResponse::internal_default_instance() {
  return &HdStoreExtendedPublicKeyResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// DeviceParam

// optional string action = 1;
inline void DeviceParam::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeviceParam::action() const {
  // @@protoc_insertion_point(field_get:api.DeviceParam.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceParam::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.DeviceParam.action)
}
inline void DeviceParam::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.DeviceParam.action)
}
inline void DeviceParam::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.DeviceParam.action)
}
inline ::std::string* DeviceParam::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:api.DeviceParam.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeviceParam::release_action() {
  // @@protoc_insertion_point(field_release:api.DeviceParam.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceParam::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:api.DeviceParam.action)
}

// optional .google.protobuf.Any param = 2;
inline bool DeviceParam::has_param() const {
  return this != internal_default_instance() && param_ != NULL;
}
inline void DeviceParam::clear_param() {
  if (GetArenaNoVirtual() == NULL && param_ != NULL) delete param_;
  param_ = NULL;
}
inline const ::google::protobuf::Any& DeviceParam::param() const {
  // @@protoc_insertion_point(field_get:api.DeviceParam.param)
  return param_ != NULL ? *param_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* DeviceParam::mutable_param() {
  
  if (param_ == NULL) {
    param_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:api.DeviceParam.param)
  return param_;
}
inline ::google::protobuf::Any* DeviceParam::release_param() {
  // @@protoc_insertion_point(field_release:api.DeviceParam.param)
  
  ::google::protobuf::Any* temp = param_;
  param_ = NULL;
  return temp;
}
inline void DeviceParam::set_allocated_param(::google::protobuf::Any* param) {
  delete param_;
  param_ = param;
  if (param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:api.DeviceParam.param)
}

inline const DeviceParam* DeviceParam::internal_default_instance() {
  return &DeviceParam_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::api::KeyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::api::KeyType>() {
  return ::api::KeyType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2eproto__INCLUDED
