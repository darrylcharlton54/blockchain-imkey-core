// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: btc.proto

#ifndef PROTOBUF_btc_2eproto__INCLUDED
#define PROTOBUF_btc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace btcapi {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_btc_2eproto();
void protobuf_InitDefaults_btc_2eproto();
void protobuf_AssignDesc_btc_2eproto();
void protobuf_ShutdownFile_btc_2eproto();

class BtcAddressResponse;
class BtcTxInput;
class BtcTxOutput;
class Utxo;

// ===================================================================

class Utxo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.Utxo) */ {
 public:
  Utxo();
  virtual ~Utxo();

  Utxo(const Utxo& from);

  inline Utxo& operator=(const Utxo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Utxo& default_instance();

  static const Utxo* internal_default_instance();

  void Swap(Utxo* other);

  // implements Message ----------------------------------------------

  inline Utxo* New() const { return New(NULL); }

  Utxo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Utxo& from);
  void MergeFrom(const Utxo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Utxo* other);
  void UnsafeMergeFrom(const Utxo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string txHash = 1;
  void clear_txhash();
  static const int kTxHashFieldNumber = 1;
  const ::std::string& txhash() const;
  void set_txhash(const ::std::string& value);
  void set_txhash(const char* value);
  void set_txhash(const char* value, size_t size);
  ::std::string* mutable_txhash();
  ::std::string* release_txhash();
  void set_allocated_txhash(::std::string* txhash);

  // optional int32 vout = 2;
  void clear_vout();
  static const int kVoutFieldNumber = 2;
  ::google::protobuf::int32 vout() const;
  void set_vout(::google::protobuf::int32 value);

  // optional int64 amount = 3;
  void clear_amount();
  static const int kAmountFieldNumber = 3;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // optional string address = 4;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional string scriptPubKey = 5;
  void clear_scriptpubkey();
  static const int kScriptPubKeyFieldNumber = 5;
  const ::std::string& scriptpubkey() const;
  void set_scriptpubkey(const ::std::string& value);
  void set_scriptpubkey(const char* value);
  void set_scriptpubkey(const char* value, size_t size);
  ::std::string* mutable_scriptpubkey();
  ::std::string* release_scriptpubkey();
  void set_allocated_scriptpubkey(::std::string* scriptpubkey);

  // optional string derivedPath = 6;
  void clear_derivedpath();
  static const int kDerivedPathFieldNumber = 6;
  const ::std::string& derivedpath() const;
  void set_derivedpath(const ::std::string& value);
  void set_derivedpath(const char* value);
  void set_derivedpath(const char* value, size_t size);
  ::std::string* mutable_derivedpath();
  ::std::string* release_derivedpath();
  void set_allocated_derivedpath(::std::string* derivedpath);

  // optional int64 sequence = 7;
  void clear_sequence();
  static const int kSequenceFieldNumber = 7;
  ::google::protobuf::int64 sequence() const;
  void set_sequence(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:btcapi.Utxo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr txhash_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr scriptpubkey_;
  ::google::protobuf::internal::ArenaStringPtr derivedpath_;
  ::google::protobuf::int64 amount_;
  ::google::protobuf::int64 sequence_;
  ::google::protobuf::int32 vout_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Utxo> Utxo_default_instance_;

// -------------------------------------------------------------------

class BtcTxInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.BtcTxInput) */ {
 public:
  BtcTxInput();
  virtual ~BtcTxInput();

  BtcTxInput(const BtcTxInput& from);

  inline BtcTxInput& operator=(const BtcTxInput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcTxInput& default_instance();

  static const BtcTxInput* internal_default_instance();

  void Swap(BtcTxInput* other);

  // implements Message ----------------------------------------------

  inline BtcTxInput* New() const { return New(NULL); }

  BtcTxInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcTxInput& from);
  void MergeFrom(const BtcTxInput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcTxInput* other);
  void UnsafeMergeFrom(const BtcTxInput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string to = 1;
  void clear_to();
  static const int kToFieldNumber = 1;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // optional int64 amount = 2;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // repeated .btcapi.Utxo unspents = 3;
  int unspents_size() const;
  void clear_unspents();
  static const int kUnspentsFieldNumber = 3;
  const ::btcapi::Utxo& unspents(int index) const;
  ::btcapi::Utxo* mutable_unspents(int index);
  ::btcapi::Utxo* add_unspents();
  ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >*
      mutable_unspents();
  const ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >&
      unspents() const;

  // optional int64 fee = 4;
  void clear_fee();
  static const int kFeeFieldNumber = 4;
  ::google::protobuf::int64 fee() const;
  void set_fee(::google::protobuf::int64 value);

  // optional uint32 changeAddressIndex = 5;
  void clear_changeaddressindex();
  static const int kChangeAddressIndexFieldNumber = 5;
  ::google::protobuf::uint32 changeaddressindex() const;
  void set_changeaddressindex(::google::protobuf::uint32 value);

  // optional string changeAddress = 6;
  void clear_changeaddress();
  static const int kChangeAddressFieldNumber = 6;
  const ::std::string& changeaddress() const;
  void set_changeaddress(const ::std::string& value);
  void set_changeaddress(const char* value);
  void set_changeaddress(const char* value, size_t size);
  ::std::string* mutable_changeaddress();
  ::std::string* release_changeaddress();
  void set_allocated_changeaddress(::std::string* changeaddress);

  // optional string network = 7;
  void clear_network();
  static const int kNetworkFieldNumber = 7;
  const ::std::string& network() const;
  void set_network(const ::std::string& value);
  void set_network(const char* value);
  void set_network(const char* value, size_t size);
  ::std::string* mutable_network();
  ::std::string* release_network();
  void set_allocated_network(::std::string* network);

  // optional string segWit = 8;
  void clear_segwit();
  static const int kSegWitFieldNumber = 8;
  const ::std::string& segwit() const;
  void set_segwit(const ::std::string& value);
  void set_segwit(const char* value);
  void set_segwit(const char* value, size_t size);
  ::std::string* mutable_segwit();
  ::std::string* release_segwit();
  void set_allocated_segwit(::std::string* segwit);

  // optional string payment = 9;
  void clear_payment();
  static const int kPaymentFieldNumber = 9;
  const ::std::string& payment() const;
  void set_payment(const ::std::string& value);
  void set_payment(const char* value);
  void set_payment(const char* value, size_t size);
  ::std::string* mutable_payment();
  ::std::string* release_payment();
  void set_allocated_payment(::std::string* payment);

  // optional string to_dis = 10;
  void clear_to_dis();
  static const int kToDisFieldNumber = 10;
  const ::std::string& to_dis() const;
  void set_to_dis(const ::std::string& value);
  void set_to_dis(const char* value);
  void set_to_dis(const char* value, size_t size);
  ::std::string* mutable_to_dis();
  ::std::string* release_to_dis();
  void set_allocated_to_dis(::std::string* to_dis);

  // optional string from = 11;
  void clear_from();
  static const int kFromFieldNumber = 11;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  void set_from(const char* value);
  void set_from(const char* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // optional string fee_dis = 12;
  void clear_fee_dis();
  static const int kFeeDisFieldNumber = 12;
  const ::std::string& fee_dis() const;
  void set_fee_dis(const ::std::string& value);
  void set_fee_dis(const char* value);
  void set_fee_dis(const char* value, size_t size);
  ::std::string* mutable_fee_dis();
  ::std::string* release_fee_dis();
  void set_allocated_fee_dis(::std::string* fee_dis);

  // optional bytes extra_data = 13;
  void clear_extra_data();
  static const int kExtraDataFieldNumber = 13;
  const ::std::string& extra_data() const;
  void set_extra_data(const ::std::string& value);
  void set_extra_data(const char* value);
  void set_extra_data(const void* value, size_t size);
  ::std::string* mutable_extra_data();
  ::std::string* release_extra_data();
  void set_allocated_extra_data(::std::string* extra_data);

  // optional string path_prefix = 14;
  void clear_path_prefix();
  static const int kPathPrefixFieldNumber = 14;
  const ::std::string& path_prefix() const;
  void set_path_prefix(const ::std::string& value);
  void set_path_prefix(const char* value);
  void set_path_prefix(const char* value, size_t size);
  ::std::string* mutable_path_prefix();
  ::std::string* release_path_prefix();
  void set_allocated_path_prefix(::std::string* path_prefix);

  // optional int32 property_id = 15;
  void clear_property_id();
  static const int kPropertyIdFieldNumber = 15;
  ::google::protobuf::int32 property_id() const;
  void set_property_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:btcapi.BtcTxInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo > unspents_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr changeaddress_;
  ::google::protobuf::internal::ArenaStringPtr network_;
  ::google::protobuf::internal::ArenaStringPtr segwit_;
  ::google::protobuf::internal::ArenaStringPtr payment_;
  ::google::protobuf::internal::ArenaStringPtr to_dis_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  ::google::protobuf::internal::ArenaStringPtr fee_dis_;
  ::google::protobuf::internal::ArenaStringPtr extra_data_;
  ::google::protobuf::internal::ArenaStringPtr path_prefix_;
  ::google::protobuf::int64 amount_;
  ::google::protobuf::int64 fee_;
  ::google::protobuf::uint32 changeaddressindex_;
  ::google::protobuf::int32 property_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcTxInput> BtcTxInput_default_instance_;

// -------------------------------------------------------------------

class BtcTxOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.BtcTxOutput) */ {
 public:
  BtcTxOutput();
  virtual ~BtcTxOutput();

  BtcTxOutput(const BtcTxOutput& from);

  inline BtcTxOutput& operator=(const BtcTxOutput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcTxOutput& default_instance();

  static const BtcTxOutput* internal_default_instance();

  void Swap(BtcTxOutput* other);

  // implements Message ----------------------------------------------

  inline BtcTxOutput* New() const { return New(NULL); }

  BtcTxOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcTxOutput& from);
  void MergeFrom(const BtcTxOutput& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcTxOutput* other);
  void UnsafeMergeFrom(const BtcTxOutput& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string txHash = 2;
  void clear_txhash();
  static const int kTxHashFieldNumber = 2;
  const ::std::string& txhash() const;
  void set_txhash(const ::std::string& value);
  void set_txhash(const char* value);
  void set_txhash(const char* value, size_t size);
  ::std::string* mutable_txhash();
  ::std::string* release_txhash();
  void set_allocated_txhash(::std::string* txhash);

  // optional string wtx_id = 3;
  void clear_wtx_id();
  static const int kWtxIdFieldNumber = 3;
  const ::std::string& wtx_id() const;
  void set_wtx_id(const ::std::string& value);
  void set_wtx_id(const char* value);
  void set_wtx_id(const char* value, size_t size);
  ::std::string* mutable_wtx_id();
  ::std::string* release_wtx_id();
  void set_allocated_wtx_id(::std::string* wtx_id);

  // @@protoc_insertion_point(class_scope:btcapi.BtcTxOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr txhash_;
  ::google::protobuf::internal::ArenaStringPtr wtx_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcTxOutput> BtcTxOutput_default_instance_;

// -------------------------------------------------------------------

class BtcAddressResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:btcapi.BtcAddressResponse) */ {
 public:
  BtcAddressResponse();
  virtual ~BtcAddressResponse();

  BtcAddressResponse(const BtcAddressResponse& from);

  inline BtcAddressResponse& operator=(const BtcAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtcAddressResponse& default_instance();

  static const BtcAddressResponse* internal_default_instance();

  void Swap(BtcAddressResponse* other);

  // implements Message ----------------------------------------------

  inline BtcAddressResponse* New() const { return New(NULL); }

  BtcAddressResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtcAddressResponse& from);
  void MergeFrom(const BtcAddressResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BtcAddressResponse* other);
  void UnsafeMergeFrom(const BtcAddressResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:btcapi.BtcAddressResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_btc_2eproto_impl();
  friend void  protobuf_AddDesc_btc_2eproto_impl();
  friend void protobuf_AssignDesc_btc_2eproto();
  friend void protobuf_ShutdownFile_btc_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BtcAddressResponse> BtcAddressResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Utxo

// optional string txHash = 1;
inline void Utxo::clear_txhash() {
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Utxo::txhash() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.txHash)
  return txhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_txhash(const ::std::string& value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.txHash)
}
inline void Utxo::set_txhash(const char* value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.txHash)
}
inline void Utxo::set_txhash(const char* value, size_t size) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.txHash)
}
inline ::std::string* Utxo::mutable_txhash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.txHash)
  return txhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utxo::release_txhash() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.txHash)
  
  return txhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_allocated_txhash(::std::string* txhash) {
  if (txhash != NULL) {
    
  } else {
    
  }
  txhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txhash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.txHash)
}

// optional int32 vout = 2;
inline void Utxo::clear_vout() {
  vout_ = 0;
}
inline ::google::protobuf::int32 Utxo::vout() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.vout)
  return vout_;
}
inline void Utxo::set_vout(::google::protobuf::int32 value) {
  
  vout_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.vout)
}

// optional int64 amount = 3;
inline void Utxo::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Utxo::amount() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.amount)
  return amount_;
}
inline void Utxo::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.amount)
}

// optional string address = 4;
inline void Utxo::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Utxo::address() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.address)
}
inline void Utxo::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.address)
}
inline void Utxo::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.address)
}
inline ::std::string* Utxo::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utxo::release_address() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.address)
}

// optional string scriptPubKey = 5;
inline void Utxo::clear_scriptpubkey() {
  scriptpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Utxo::scriptpubkey() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.scriptPubKey)
  return scriptpubkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_scriptpubkey(const ::std::string& value) {
  
  scriptpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.scriptPubKey)
}
inline void Utxo::set_scriptpubkey(const char* value) {
  
  scriptpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.scriptPubKey)
}
inline void Utxo::set_scriptpubkey(const char* value, size_t size) {
  
  scriptpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.scriptPubKey)
}
inline ::std::string* Utxo::mutable_scriptpubkey() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.scriptPubKey)
  return scriptpubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utxo::release_scriptpubkey() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.scriptPubKey)
  
  return scriptpubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_allocated_scriptpubkey(::std::string* scriptpubkey) {
  if (scriptpubkey != NULL) {
    
  } else {
    
  }
  scriptpubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scriptpubkey);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.scriptPubKey)
}

// optional string derivedPath = 6;
inline void Utxo::clear_derivedpath() {
  derivedpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Utxo::derivedpath() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.derivedPath)
  return derivedpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_derivedpath(const ::std::string& value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.Utxo.derivedPath)
}
inline void Utxo::set_derivedpath(const char* value) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.Utxo.derivedPath)
}
inline void Utxo::set_derivedpath(const char* value, size_t size) {
  
  derivedpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.Utxo.derivedPath)
}
inline ::std::string* Utxo::mutable_derivedpath() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.Utxo.derivedPath)
  return derivedpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utxo::release_derivedpath() {
  // @@protoc_insertion_point(field_release:btcapi.Utxo.derivedPath)
  
  return derivedpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utxo::set_allocated_derivedpath(::std::string* derivedpath) {
  if (derivedpath != NULL) {
    
  } else {
    
  }
  derivedpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), derivedpath);
  // @@protoc_insertion_point(field_set_allocated:btcapi.Utxo.derivedPath)
}

// optional int64 sequence = 7;
inline void Utxo::clear_sequence() {
  sequence_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Utxo::sequence() const {
  // @@protoc_insertion_point(field_get:btcapi.Utxo.sequence)
  return sequence_;
}
inline void Utxo::set_sequence(::google::protobuf::int64 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:btcapi.Utxo.sequence)
}

inline const Utxo* Utxo::internal_default_instance() {
  return &Utxo_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcTxInput

// optional string to = 1;
inline void BtcTxInput::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::to() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.to)
}
inline void BtcTxInput::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.to)
}
inline void BtcTxInput::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.to)
}
inline ::std::string* BtcTxInput::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_to() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.to)
}

// optional int64 amount = 2;
inline void BtcTxInput::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BtcTxInput::amount() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.amount)
  return amount_;
}
inline void BtcTxInput::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.amount)
}

// repeated .btcapi.Utxo unspents = 3;
inline int BtcTxInput::unspents_size() const {
  return unspents_.size();
}
inline void BtcTxInput::clear_unspents() {
  unspents_.Clear();
}
inline const ::btcapi::Utxo& BtcTxInput::unspents(int index) const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.unspents)
  return unspents_.Get(index);
}
inline ::btcapi::Utxo* BtcTxInput::mutable_unspents(int index) {
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.unspents)
  return unspents_.Mutable(index);
}
inline ::btcapi::Utxo* BtcTxInput::add_unspents() {
  // @@protoc_insertion_point(field_add:btcapi.BtcTxInput.unspents)
  return unspents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >*
BtcTxInput::mutable_unspents() {
  // @@protoc_insertion_point(field_mutable_list:btcapi.BtcTxInput.unspents)
  return &unspents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::btcapi::Utxo >&
BtcTxInput::unspents() const {
  // @@protoc_insertion_point(field_list:btcapi.BtcTxInput.unspents)
  return unspents_;
}

// optional int64 fee = 4;
inline void BtcTxInput::clear_fee() {
  fee_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BtcTxInput::fee() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.fee)
  return fee_;
}
inline void BtcTxInput::set_fee(::google::protobuf::int64 value) {
  
  fee_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.fee)
}

// optional uint32 changeAddressIndex = 5;
inline void BtcTxInput::clear_changeaddressindex() {
  changeaddressindex_ = 0u;
}
inline ::google::protobuf::uint32 BtcTxInput::changeaddressindex() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.changeAddressIndex)
  return changeaddressindex_;
}
inline void BtcTxInput::set_changeaddressindex(::google::protobuf::uint32 value) {
  
  changeaddressindex_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.changeAddressIndex)
}

// optional string changeAddress = 6;
inline void BtcTxInput::clear_changeaddress() {
  changeaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::changeaddress() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.changeAddress)
  return changeaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_changeaddress(const ::std::string& value) {
  
  changeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.changeAddress)
}
inline void BtcTxInput::set_changeaddress(const char* value) {
  
  changeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.changeAddress)
}
inline void BtcTxInput::set_changeaddress(const char* value, size_t size) {
  
  changeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.changeAddress)
}
inline ::std::string* BtcTxInput::mutable_changeaddress() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.changeAddress)
  return changeaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_changeaddress() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.changeAddress)
  
  return changeaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_changeaddress(::std::string* changeaddress) {
  if (changeaddress != NULL) {
    
  } else {
    
  }
  changeaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), changeaddress);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.changeAddress)
}

// optional string network = 7;
inline void BtcTxInput::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::network() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.network)
}
inline void BtcTxInput::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.network)
}
inline void BtcTxInput::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.network)
}
inline ::std::string* BtcTxInput::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_network() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.network)
}

// optional string segWit = 8;
inline void BtcTxInput::clear_segwit() {
  segwit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::segwit() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.segWit)
  return segwit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_segwit(const ::std::string& value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.segWit)
}
inline void BtcTxInput::set_segwit(const char* value) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.segWit)
}
inline void BtcTxInput::set_segwit(const char* value, size_t size) {
  
  segwit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.segWit)
}
inline ::std::string* BtcTxInput::mutable_segwit() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.segWit)
  return segwit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_segwit() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.segWit)
  
  return segwit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_segwit(::std::string* segwit) {
  if (segwit != NULL) {
    
  } else {
    
  }
  segwit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segwit);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.segWit)
}

// optional string payment = 9;
inline void BtcTxInput::clear_payment() {
  payment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::payment() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.payment)
  return payment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_payment(const ::std::string& value) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.payment)
}
inline void BtcTxInput::set_payment(const char* value) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.payment)
}
inline void BtcTxInput::set_payment(const char* value, size_t size) {
  
  payment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.payment)
}
inline ::std::string* BtcTxInput::mutable_payment() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.payment)
  return payment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_payment() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.payment)
  
  return payment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_payment(::std::string* payment) {
  if (payment != NULL) {
    
  } else {
    
  }
  payment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payment);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.payment)
}

// optional string to_dis = 10;
inline void BtcTxInput::clear_to_dis() {
  to_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::to_dis() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.to_dis)
  return to_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_to_dis(const ::std::string& value) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.to_dis)
}
inline void BtcTxInput::set_to_dis(const char* value) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.to_dis)
}
inline void BtcTxInput::set_to_dis(const char* value, size_t size) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.to_dis)
}
inline ::std::string* BtcTxInput::mutable_to_dis() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.to_dis)
  return to_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_to_dis() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.to_dis)
  
  return to_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_to_dis(::std::string* to_dis) {
  if (to_dis != NULL) {
    
  } else {
    
  }
  to_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_dis);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.to_dis)
}

// optional string from = 11;
inline void BtcTxInput::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::from() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.from)
  return from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.from)
}
inline void BtcTxInput::set_from(const char* value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.from)
}
inline void BtcTxInput::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.from)
}
inline ::std::string* BtcTxInput::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_from() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.from)
}

// optional string fee_dis = 12;
inline void BtcTxInput::clear_fee_dis() {
  fee_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::fee_dis() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.fee_dis)
  return fee_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_fee_dis(const ::std::string& value) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.fee_dis)
}
inline void BtcTxInput::set_fee_dis(const char* value) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.fee_dis)
}
inline void BtcTxInput::set_fee_dis(const char* value, size_t size) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.fee_dis)
}
inline ::std::string* BtcTxInput::mutable_fee_dis() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.fee_dis)
  return fee_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_fee_dis() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.fee_dis)
  
  return fee_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_fee_dis(::std::string* fee_dis) {
  if (fee_dis != NULL) {
    
  } else {
    
  }
  fee_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fee_dis);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.fee_dis)
}

// optional bytes extra_data = 13;
inline void BtcTxInput::clear_extra_data() {
  extra_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::extra_data() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.extra_data)
  return extra_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_extra_data(const ::std::string& value) {
  
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.extra_data)
}
inline void BtcTxInput::set_extra_data(const char* value) {
  
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.extra_data)
}
inline void BtcTxInput::set_extra_data(const void* value, size_t size) {
  
  extra_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.extra_data)
}
inline ::std::string* BtcTxInput::mutable_extra_data() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.extra_data)
  return extra_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_extra_data() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.extra_data)
  
  return extra_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_extra_data(::std::string* extra_data) {
  if (extra_data != NULL) {
    
  } else {
    
  }
  extra_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_data);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.extra_data)
}

// optional string path_prefix = 14;
inline void BtcTxInput::clear_path_prefix() {
  path_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxInput::path_prefix() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.path_prefix)
  return path_prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_path_prefix(const ::std::string& value) {
  
  path_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.path_prefix)
}
inline void BtcTxInput::set_path_prefix(const char* value) {
  
  path_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxInput.path_prefix)
}
inline void BtcTxInput::set_path_prefix(const char* value, size_t size) {
  
  path_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxInput.path_prefix)
}
inline ::std::string* BtcTxInput::mutable_path_prefix() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxInput.path_prefix)
  return path_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxInput::release_path_prefix() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxInput.path_prefix)
  
  return path_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxInput::set_allocated_path_prefix(::std::string* path_prefix) {
  if (path_prefix != NULL) {
    
  } else {
    
  }
  path_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path_prefix);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxInput.path_prefix)
}

// optional int32 property_id = 15;
inline void BtcTxInput::clear_property_id() {
  property_id_ = 0;
}
inline ::google::protobuf::int32 BtcTxInput::property_id() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxInput.property_id)
  return property_id_;
}
inline void BtcTxInput::set_property_id(::google::protobuf::int32 value) {
  
  property_id_ = value;
  // @@protoc_insertion_point(field_set:btcapi.BtcTxInput.property_id)
}

inline const BtcTxInput* BtcTxInput::internal_default_instance() {
  return &BtcTxInput_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcTxOutput

// optional string signature = 1;
inline void BtcTxOutput::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxOutput::signature() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.signature)
}
inline void BtcTxOutput::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.signature)
}
inline void BtcTxOutput::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.signature)
}
inline ::std::string* BtcTxOutput::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxOutput::release_signature() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.signature)
}

// optional string txHash = 2;
inline void BtcTxOutput::clear_txhash() {
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxOutput::txhash() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.txHash)
  return txhash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_txhash(const ::std::string& value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.txHash)
}
inline void BtcTxOutput::set_txhash(const char* value) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.txHash)
}
inline void BtcTxOutput::set_txhash(const char* value, size_t size) {
  
  txhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.txHash)
}
inline ::std::string* BtcTxOutput::mutable_txhash() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.txHash)
  return txhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxOutput::release_txhash() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.txHash)
  
  return txhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_allocated_txhash(::std::string* txhash) {
  if (txhash != NULL) {
    
  } else {
    
  }
  txhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txhash);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.txHash)
}

// optional string wtx_id = 3;
inline void BtcTxOutput::clear_wtx_id() {
  wtx_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcTxOutput::wtx_id() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcTxOutput.wtx_id)
  return wtx_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_wtx_id(const ::std::string& value) {
  
  wtx_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcTxOutput.wtx_id)
}
inline void BtcTxOutput::set_wtx_id(const char* value) {
  
  wtx_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcTxOutput.wtx_id)
}
inline void BtcTxOutput::set_wtx_id(const char* value, size_t size) {
  
  wtx_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcTxOutput.wtx_id)
}
inline ::std::string* BtcTxOutput::mutable_wtx_id() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcTxOutput.wtx_id)
  return wtx_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcTxOutput::release_wtx_id() {
  // @@protoc_insertion_point(field_release:btcapi.BtcTxOutput.wtx_id)
  
  return wtx_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcTxOutput::set_allocated_wtx_id(::std::string* wtx_id) {
  if (wtx_id != NULL) {
    
  } else {
    
  }
  wtx_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wtx_id);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcTxOutput.wtx_id)
}

inline const BtcTxOutput* BtcTxOutput::internal_default_instance() {
  return &BtcTxOutput_default_instance_.get();
}
// -------------------------------------------------------------------

// BtcAddressResponse

// optional string address = 1;
inline void BtcAddressResponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BtcAddressResponse::address() const {
  // @@protoc_insertion_point(field_get:btcapi.BtcAddressResponse.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcAddressResponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:btcapi.BtcAddressResponse.address)
}
inline void BtcAddressResponse::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:btcapi.BtcAddressResponse.address)
}
inline void BtcAddressResponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:btcapi.BtcAddressResponse.address)
}
inline ::std::string* BtcAddressResponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:btcapi.BtcAddressResponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BtcAddressResponse::release_address() {
  // @@protoc_insertion_point(field_release:btcapi.BtcAddressResponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BtcAddressResponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:btcapi.BtcAddressResponse.address)
}

inline const BtcAddressResponse* BtcAddressResponse::internal_default_instance() {
  return &BtcAddressResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace btcapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_btc_2eproto__INCLUDED
