// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: filecoin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "filecoin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace filecoinapi {

namespace {

const ::google::protobuf::Descriptor* FilecoinTxReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilecoinTxReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsignedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsignedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilecoinTxRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilecoinTxRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Signature_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Signature_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilecoinAddressReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilecoinAddressReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilecoinAddressRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilecoinAddressRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_filecoin_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_filecoin_2eproto() {
  protobuf_AddDesc_filecoin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "filecoin.proto");
  GOOGLE_CHECK(file != NULL);
  FilecoinTxReq_descriptor_ = file->message_type(0);
  static const int FilecoinTxReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxReq, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxReq, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxReq, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxReq, payment_dis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxReq, to_dis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxReq, from_dis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxReq, fee_dis_),
  };
  FilecoinTxReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FilecoinTxReq_descriptor_,
      FilecoinTxReq::internal_default_instance(),
      FilecoinTxReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(FilecoinTxReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxReq, _internal_metadata_));
  UnsignedMessage_descriptor_ = file->message_type(1);
  static const int UnsignedMessage_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, nonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, gaslimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, gasfeecap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, gaspremium_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, params_),
  };
  UnsignedMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsignedMessage_descriptor_,
      UnsignedMessage::internal_default_instance(),
      UnsignedMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsignedMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsignedMessage, _internal_metadata_));
  FilecoinTxRes_descriptor_ = file->message_type(2);
  static const int FilecoinTxRes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxRes, cid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxRes, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxRes, signature_),
  };
  FilecoinTxRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FilecoinTxRes_descriptor_,
      FilecoinTxRes::internal_default_instance(),
      FilecoinTxRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(FilecoinTxRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinTxRes, _internal_metadata_));
  Signature_descriptor_ = file->message_type(3);
  static const int Signature_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, data_),
  };
  Signature_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Signature_descriptor_,
      Signature::internal_default_instance(),
      Signature_offsets_,
      -1,
      -1,
      -1,
      sizeof(Signature),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, _internal_metadata_));
  FilecoinAddressReq_descriptor_ = file->message_type(4);
  static const int FilecoinAddressReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinAddressReq, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinAddressReq, path_),
  };
  FilecoinAddressReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FilecoinAddressReq_descriptor_,
      FilecoinAddressReq::internal_default_instance(),
      FilecoinAddressReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(FilecoinAddressReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinAddressReq, _internal_metadata_));
  FilecoinAddressRes_descriptor_ = file->message_type(5);
  static const int FilecoinAddressRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinAddressRes, address_),
  };
  FilecoinAddressRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FilecoinAddressRes_descriptor_,
      FilecoinAddressRes::internal_default_instance(),
      FilecoinAddressRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(FilecoinAddressRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilecoinAddressRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_filecoin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FilecoinTxReq_descriptor_, FilecoinTxReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsignedMessage_descriptor_, UnsignedMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FilecoinTxRes_descriptor_, FilecoinTxRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Signature_descriptor_, Signature::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FilecoinAddressReq_descriptor_, FilecoinAddressReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FilecoinAddressRes_descriptor_, FilecoinAddressRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_filecoin_2eproto() {
  FilecoinTxReq_default_instance_.Shutdown();
  delete FilecoinTxReq_reflection_;
  UnsignedMessage_default_instance_.Shutdown();
  delete UnsignedMessage_reflection_;
  FilecoinTxRes_default_instance_.Shutdown();
  delete FilecoinTxRes_reflection_;
  Signature_default_instance_.Shutdown();
  delete Signature_reflection_;
  FilecoinAddressReq_default_instance_.Shutdown();
  delete FilecoinAddressReq_reflection_;
  FilecoinAddressRes_default_instance_.Shutdown();
  delete FilecoinAddressRes_reflection_;
}

void protobuf_InitDefaults_filecoin_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  FilecoinTxReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UnsignedMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FilecoinTxRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Signature_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FilecoinAddressReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FilecoinAddressRes_default_instance_.DefaultConstruct();
  FilecoinTxReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  UnsignedMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  FilecoinTxRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  Signature_default_instance_.get_mutable()->InitAsDefaultInstance();
  FilecoinAddressReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  FilecoinAddressRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_filecoin_2eproto_once_);
void protobuf_InitDefaults_filecoin_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_filecoin_2eproto_once_,
                 &protobuf_InitDefaults_filecoin_2eproto_impl);
}
void protobuf_AddDesc_filecoin_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_filecoin_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016filecoin.proto\022\013filecoinapi\"\245\001\n\rFileco"
    "inTxReq\022-\n\007message\030\001 \001(\0132\034.filecoinapi.U"
    "nsignedMessage\022\014\n\004path\030\002 \001(\t\022\017\n\007network\030"
    "\003 \001(\t\022\023\n\013payment_dis\030\004 \001(\t\022\016\n\006to_dis\030\005 \001"
    "(\t\022\020\n\010from_dis\030\006 \001(\t\022\017\n\007fee_dis\030\007 \001(\t\"\242\001"
    "\n\017UnsignedMessage\022\n\n\002to\030\001 \001(\t\022\014\n\004from\030\002 "
    "\001(\t\022\r\n\005nonce\030\003 \001(\004\022\r\n\005value\030\004 \001(\t\022\020\n\010gas"
    "Limit\030\005 \001(\003\022\021\n\tgasFeeCap\030\006 \001(\t\022\022\n\ngasPre"
    "mium\030\007 \001(\t\022\016\n\006method\030\010 \001(\004\022\016\n\006params\030\t \001"
    "(\t\"v\n\rFilecoinTxRes\022\013\n\003cid\030\001 \001(\t\022-\n\007mess"
    "age\030\002 \001(\0132\034.filecoinapi.UnsignedMessage\022"
    ")\n\tsignature\030\003 \001(\0132\026.filecoinapi.Signatu"
    "re\"\'\n\tSignature\022\014\n\004type\030\001 \001(\r\022\014\n\004data\030\002 "
    "\001(\t\"3\n\022FilecoinAddressReq\022\017\n\007network\030\001 \001"
    "(\t\022\014\n\004path\030\002 \001(\t\"%\n\022FilecoinAddressRes\022\017"
    "\n\007address\030\001 \001(\tb\006proto3", 623);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "filecoin.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_filecoin_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_filecoin_2eproto_once_);
void protobuf_AddDesc_filecoin_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_filecoin_2eproto_once_,
                 &protobuf_AddDesc_filecoin_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_filecoin_2eproto {
  StaticDescriptorInitializer_filecoin_2eproto() {
    protobuf_AddDesc_filecoin_2eproto();
  }
} static_descriptor_initializer_filecoin_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilecoinTxReq::kMessageFieldNumber;
const int FilecoinTxReq::kPathFieldNumber;
const int FilecoinTxReq::kNetworkFieldNumber;
const int FilecoinTxReq::kPaymentDisFieldNumber;
const int FilecoinTxReq::kToDisFieldNumber;
const int FilecoinTxReq::kFromDisFieldNumber;
const int FilecoinTxReq::kFeeDisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilecoinTxReq::FilecoinTxReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_filecoin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:filecoinapi.FilecoinTxReq)
}

void FilecoinTxReq::InitAsDefaultInstance() {
  message_ = const_cast< ::filecoinapi::UnsignedMessage*>(
      ::filecoinapi::UnsignedMessage::internal_default_instance());
}

FilecoinTxReq::FilecoinTxReq(const FilecoinTxReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:filecoinapi.FilecoinTxReq)
}

void FilecoinTxReq::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_dis_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_dis_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_dis_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_dis_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = NULL;
  _cached_size_ = 0;
}

FilecoinTxReq::~FilecoinTxReq() {
  // @@protoc_insertion_point(destructor:filecoinapi.FilecoinTxReq)
  SharedDtor();
}

void FilecoinTxReq::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_dis_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_dis_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_dis_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_dis_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &FilecoinTxReq_default_instance_.get()) {
    delete message_;
  }
}

void FilecoinTxReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilecoinTxReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilecoinTxReq_descriptor_;
}

const FilecoinTxReq& FilecoinTxReq::default_instance() {
  protobuf_InitDefaults_filecoin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FilecoinTxReq> FilecoinTxReq_default_instance_;

FilecoinTxReq* FilecoinTxReq::New(::google::protobuf::Arena* arena) const {
  FilecoinTxReq* n = new FilecoinTxReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilecoinTxReq::Clear() {
// @@protoc_insertion_point(message_clear_start:filecoinapi.FilecoinTxReq)
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fee_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FilecoinTxReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:filecoinapi.FilecoinTxReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .filecoinapi.UnsignedMessage message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // optional string path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinTxReq.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_network;
        break;
      }

      // optional string network = 3;
      case 3: {
        if (tag == 26) {
         parse_network:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinTxReq.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_payment_dis;
        break;
      }

      // optional string payment_dis = 4;
      case 4: {
        if (tag == 34) {
         parse_payment_dis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payment_dis()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payment_dis().data(), this->payment_dis().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinTxReq.payment_dis"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_to_dis;
        break;
      }

      // optional string to_dis = 5;
      case 5: {
        if (tag == 42) {
         parse_to_dis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_dis()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_dis().data(), this->to_dis().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinTxReq.to_dis"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_from_dis;
        break;
      }

      // optional string from_dis = 6;
      case 6: {
        if (tag == 50) {
         parse_from_dis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_dis()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_dis().data(), this->from_dis().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinTxReq.from_dis"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_fee_dis;
        break;
      }

      // optional string fee_dis = 7;
      case 7: {
        if (tag == 58) {
         parse_fee_dis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fee_dis()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fee_dis().data(), this->fee_dis().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinTxReq.fee_dis"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:filecoinapi.FilecoinTxReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:filecoinapi.FilecoinTxReq)
  return false;
#undef DO_
}

void FilecoinTxReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:filecoinapi.FilecoinTxReq)
  // optional .filecoinapi.UnsignedMessage message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->message_, output);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->network(), output);
  }

  // optional string payment_dis = 4;
  if (this->payment_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment_dis().data(), this->payment_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.payment_dis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->payment_dis(), output);
  }

  // optional string to_dis = 5;
  if (this->to_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_dis().data(), this->to_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.to_dis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->to_dis(), output);
  }

  // optional string from_dis = 6;
  if (this->from_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_dis().data(), this->from_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.from_dis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->from_dis(), output);
  }

  // optional string fee_dis = 7;
  if (this->fee_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fee_dis().data(), this->fee_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.fee_dis");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->fee_dis(), output);
  }

  // @@protoc_insertion_point(serialize_end:filecoinapi.FilecoinTxReq)
}

::google::protobuf::uint8* FilecoinTxReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:filecoinapi.FilecoinTxReq)
  // optional .filecoinapi.UnsignedMessage message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->message_, false, target);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->network(), target);
  }

  // optional string payment_dis = 4;
  if (this->payment_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payment_dis().data(), this->payment_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.payment_dis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->payment_dis(), target);
  }

  // optional string to_dis = 5;
  if (this->to_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_dis().data(), this->to_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.to_dis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->to_dis(), target);
  }

  // optional string from_dis = 6;
  if (this->from_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_dis().data(), this->from_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.from_dis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->from_dis(), target);
  }

  // optional string fee_dis = 7;
  if (this->fee_dis().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fee_dis().data(), this->fee_dis().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxReq.fee_dis");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->fee_dis(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:filecoinapi.FilecoinTxReq)
  return target;
}

size_t FilecoinTxReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filecoinapi.FilecoinTxReq)
  size_t total_size = 0;

  // optional .filecoinapi.UnsignedMessage message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->message_);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string network = 3;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // optional string payment_dis = 4;
  if (this->payment_dis().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payment_dis());
  }

  // optional string to_dis = 5;
  if (this->to_dis().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_dis());
  }

  // optional string from_dis = 6;
  if (this->from_dis().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_dis());
  }

  // optional string fee_dis = 7;
  if (this->fee_dis().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fee_dis());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilecoinTxReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:filecoinapi.FilecoinTxReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FilecoinTxReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilecoinTxReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:filecoinapi.FilecoinTxReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:filecoinapi.FilecoinTxReq)
    UnsafeMergeFrom(*source);
  }
}

void FilecoinTxReq::MergeFrom(const FilecoinTxReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:filecoinapi.FilecoinTxReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FilecoinTxReq::UnsafeMergeFrom(const FilecoinTxReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_message()) {
    mutable_message()->::filecoinapi::UnsignedMessage::MergeFrom(from.message());
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.payment_dis().size() > 0) {

    payment_dis_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_dis_);
  }
  if (from.to_dis().size() > 0) {

    to_dis_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_dis_);
  }
  if (from.from_dis().size() > 0) {

    from_dis_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_dis_);
  }
  if (from.fee_dis().size() > 0) {

    fee_dis_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fee_dis_);
  }
}

void FilecoinTxReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:filecoinapi.FilecoinTxReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilecoinTxReq::CopyFrom(const FilecoinTxReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filecoinapi.FilecoinTxReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FilecoinTxReq::IsInitialized() const {

  return true;
}

void FilecoinTxReq::Swap(FilecoinTxReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilecoinTxReq::InternalSwap(FilecoinTxReq* other) {
  std::swap(message_, other->message_);
  path_.Swap(&other->path_);
  network_.Swap(&other->network_);
  payment_dis_.Swap(&other->payment_dis_);
  to_dis_.Swap(&other->to_dis_);
  from_dis_.Swap(&other->from_dis_);
  fee_dis_.Swap(&other->fee_dis_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilecoinTxReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilecoinTxReq_descriptor_;
  metadata.reflection = FilecoinTxReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilecoinTxReq

// optional .filecoinapi.UnsignedMessage message = 1;
bool FilecoinTxReq::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
void FilecoinTxReq::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
const ::filecoinapi::UnsignedMessage& FilecoinTxReq::message() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.message)
  return message_ != NULL ? *message_
                         : *::filecoinapi::UnsignedMessage::internal_default_instance();
}
::filecoinapi::UnsignedMessage* FilecoinTxReq::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::filecoinapi::UnsignedMessage;
  }
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.message)
  return message_;
}
::filecoinapi::UnsignedMessage* FilecoinTxReq::release_message() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.message)
  
  ::filecoinapi::UnsignedMessage* temp = message_;
  message_ = NULL;
  return temp;
}
void FilecoinTxReq::set_allocated_message(::filecoinapi::UnsignedMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.message)
}

// optional string path = 2;
void FilecoinTxReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinTxReq::path() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.path)
}
void FilecoinTxReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.path)
}
void FilecoinTxReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.path)
}
::std::string* FilecoinTxReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinTxReq::release_path() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.path)
}

// optional string network = 3;
void FilecoinTxReq::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinTxReq::network() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.network)
}
void FilecoinTxReq::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.network)
}
void FilecoinTxReq::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.network)
}
::std::string* FilecoinTxReq::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinTxReq::release_network() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.network)
}

// optional string payment_dis = 4;
void FilecoinTxReq::clear_payment_dis() {
  payment_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinTxReq::payment_dis() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.payment_dis)
  return payment_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_payment_dis(const ::std::string& value) {
  
  payment_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.payment_dis)
}
void FilecoinTxReq::set_payment_dis(const char* value) {
  
  payment_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.payment_dis)
}
void FilecoinTxReq::set_payment_dis(const char* value, size_t size) {
  
  payment_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.payment_dis)
}
::std::string* FilecoinTxReq::mutable_payment_dis() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.payment_dis)
  return payment_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinTxReq::release_payment_dis() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.payment_dis)
  
  return payment_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_allocated_payment_dis(::std::string* payment_dis) {
  if (payment_dis != NULL) {
    
  } else {
    
  }
  payment_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payment_dis);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.payment_dis)
}

// optional string to_dis = 5;
void FilecoinTxReq::clear_to_dis() {
  to_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinTxReq::to_dis() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.to_dis)
  return to_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_to_dis(const ::std::string& value) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.to_dis)
}
void FilecoinTxReq::set_to_dis(const char* value) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.to_dis)
}
void FilecoinTxReq::set_to_dis(const char* value, size_t size) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.to_dis)
}
::std::string* FilecoinTxReq::mutable_to_dis() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.to_dis)
  return to_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinTxReq::release_to_dis() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.to_dis)
  
  return to_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_allocated_to_dis(::std::string* to_dis) {
  if (to_dis != NULL) {
    
  } else {
    
  }
  to_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_dis);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.to_dis)
}

// optional string from_dis = 6;
void FilecoinTxReq::clear_from_dis() {
  from_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinTxReq::from_dis() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.from_dis)
  return from_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_from_dis(const ::std::string& value) {
  
  from_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.from_dis)
}
void FilecoinTxReq::set_from_dis(const char* value) {
  
  from_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.from_dis)
}
void FilecoinTxReq::set_from_dis(const char* value, size_t size) {
  
  from_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.from_dis)
}
::std::string* FilecoinTxReq::mutable_from_dis() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.from_dis)
  return from_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinTxReq::release_from_dis() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.from_dis)
  
  return from_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_allocated_from_dis(::std::string* from_dis) {
  if (from_dis != NULL) {
    
  } else {
    
  }
  from_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_dis);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.from_dis)
}

// optional string fee_dis = 7;
void FilecoinTxReq::clear_fee_dis() {
  fee_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinTxReq::fee_dis() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.fee_dis)
  return fee_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_fee_dis(const ::std::string& value) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.fee_dis)
}
void FilecoinTxReq::set_fee_dis(const char* value) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.fee_dis)
}
void FilecoinTxReq::set_fee_dis(const char* value, size_t size) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.fee_dis)
}
::std::string* FilecoinTxReq::mutable_fee_dis() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.fee_dis)
  return fee_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinTxReq::release_fee_dis() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.fee_dis)
  
  return fee_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxReq::set_allocated_fee_dis(::std::string* fee_dis) {
  if (fee_dis != NULL) {
    
  } else {
    
  }
  fee_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fee_dis);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.fee_dis)
}

inline const FilecoinTxReq* FilecoinTxReq::internal_default_instance() {
  return &FilecoinTxReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsignedMessage::kToFieldNumber;
const int UnsignedMessage::kFromFieldNumber;
const int UnsignedMessage::kNonceFieldNumber;
const int UnsignedMessage::kValueFieldNumber;
const int UnsignedMessage::kGasLimitFieldNumber;
const int UnsignedMessage::kGasFeeCapFieldNumber;
const int UnsignedMessage::kGasPremiumFieldNumber;
const int UnsignedMessage::kMethodFieldNumber;
const int UnsignedMessage::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsignedMessage::UnsignedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_filecoin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:filecoinapi.UnsignedMessage)
}

void UnsignedMessage::InitAsDefaultInstance() {
}

UnsignedMessage::UnsignedMessage(const UnsignedMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:filecoinapi.UnsignedMessage)
}

void UnsignedMessage::SharedCtor() {
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasfeecap_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gaspremium_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, reinterpret_cast<char*>(&method_) -
    reinterpret_cast<char*>(&nonce_) + sizeof(method_));
  _cached_size_ = 0;
}

UnsignedMessage::~UnsignedMessage() {
  // @@protoc_insertion_point(destructor:filecoinapi.UnsignedMessage)
  SharedDtor();
}

void UnsignedMessage::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasfeecap_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gaspremium_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnsignedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsignedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsignedMessage_descriptor_;
}

const UnsignedMessage& UnsignedMessage::default_instance() {
  protobuf_InitDefaults_filecoin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UnsignedMessage> UnsignedMessage_default_instance_;

UnsignedMessage* UnsignedMessage::New(::google::protobuf::Arena* arena) const {
  UnsignedMessage* n = new UnsignedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsignedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:filecoinapi.UnsignedMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UnsignedMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UnsignedMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nonce_, method_);
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gasfeecap_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gaspremium_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UnsignedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:filecoinapi.UnsignedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string to = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), this->to().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.UnsignedMessage.to"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_from;
        break;
      }

      // optional string from = 2;
      case 2: {
        if (tag == 18) {
         parse_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), this->from().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.UnsignedMessage.from"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nonce;
        break;
      }

      // optional uint64 nonce = 3;
      case 3: {
        if (tag == 24) {
         parse_nonce:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_value;
        break;
      }

      // optional string value = 4;
      case 4: {
        if (tag == 34) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.UnsignedMessage.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gasLimit;
        break;
      }

      // optional int64 gasLimit = 5;
      case 5: {
        if (tag == 40) {
         parse_gasLimit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gaslimit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_gasFeeCap;
        break;
      }

      // optional string gasFeeCap = 6;
      case 6: {
        if (tag == 50) {
         parse_gasFeeCap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gasfeecap()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gasfeecap().data(), this->gasfeecap().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.UnsignedMessage.gasFeeCap"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_gasPremium;
        break;
      }

      // optional string gasPremium = 7;
      case 7: {
        if (tag == 58) {
         parse_gasPremium:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gaspremium()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gaspremium().data(), this->gaspremium().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.UnsignedMessage.gasPremium"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_method;
        break;
      }

      // optional uint64 method = 8;
      case 8: {
        if (tag == 64) {
         parse_method:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &method_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_params;
        break;
      }

      // optional string params = 9;
      case 9: {
        if (tag == 74) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params().data(), this->params().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.UnsignedMessage.params"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:filecoinapi.UnsignedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:filecoinapi.UnsignedMessage)
  return false;
#undef DO_
}

void UnsignedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:filecoinapi.UnsignedMessage)
  // optional string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  // optional string from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), this->from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from(), output);
  }

  // optional uint64 nonce = 3;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->nonce(), output);
  }

  // optional string value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  // optional int64 gasLimit = 5;
  if (this->gaslimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->gaslimit(), output);
  }

  // optional string gasFeeCap = 6;
  if (this->gasfeecap().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gasfeecap().data(), this->gasfeecap().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.gasFeeCap");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->gasfeecap(), output);
  }

  // optional string gasPremium = 7;
  if (this->gaspremium().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gaspremium().data(), this->gaspremium().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.gasPremium");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->gaspremium(), output);
  }

  // optional uint64 method = 8;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->method(), output);
  }

  // optional string params = 9;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), this->params().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->params(), output);
  }

  // @@protoc_insertion_point(serialize_end:filecoinapi.UnsignedMessage)
}

::google::protobuf::uint8* UnsignedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:filecoinapi.UnsignedMessage)
  // optional string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  // optional string from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), this->from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from(), target);
  }

  // optional uint64 nonce = 3;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->nonce(), target);
  }

  // optional string value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->value(), target);
  }

  // optional int64 gasLimit = 5;
  if (this->gaslimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->gaslimit(), target);
  }

  // optional string gasFeeCap = 6;
  if (this->gasfeecap().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gasfeecap().data(), this->gasfeecap().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.gasFeeCap");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->gasfeecap(), target);
  }

  // optional string gasPremium = 7;
  if (this->gaspremium().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gaspremium().data(), this->gaspremium().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.gasPremium");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->gaspremium(), target);
  }

  // optional uint64 method = 8;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->method(), target);
  }

  // optional string params = 9;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), this->params().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.UnsignedMessage.params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->params(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:filecoinapi.UnsignedMessage)
  return target;
}

size_t UnsignedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filecoinapi.UnsignedMessage)
  size_t total_size = 0;

  // optional string to = 1;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // optional string from = 2;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // optional uint64 nonce = 3;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  // optional string value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional int64 gasLimit = 5;
  if (this->gaslimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->gaslimit());
  }

  // optional string gasFeeCap = 6;
  if (this->gasfeecap().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gasfeecap());
  }

  // optional string gasPremium = 7;
  if (this->gaspremium().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gaspremium());
  }

  // optional uint64 method = 8;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->method());
  }

  // optional string params = 9;
  if (this->params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->params());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsignedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:filecoinapi.UnsignedMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnsignedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsignedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:filecoinapi.UnsignedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:filecoinapi.UnsignedMessage)
    UnsafeMergeFrom(*source);
  }
}

void UnsignedMessage::MergeFrom(const UnsignedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:filecoinapi.UnsignedMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UnsignedMessage::UnsafeMergeFrom(const UnsignedMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.gaslimit() != 0) {
    set_gaslimit(from.gaslimit());
  }
  if (from.gasfeecap().size() > 0) {

    gasfeecap_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gasfeecap_);
  }
  if (from.gaspremium().size() > 0) {

    gaspremium_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gaspremium_);
  }
  if (from.method() != 0) {
    set_method(from.method());
  }
  if (from.params().size() > 0) {

    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
}

void UnsignedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:filecoinapi.UnsignedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsignedMessage::CopyFrom(const UnsignedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filecoinapi.UnsignedMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UnsignedMessage::IsInitialized() const {

  return true;
}

void UnsignedMessage::Swap(UnsignedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsignedMessage::InternalSwap(UnsignedMessage* other) {
  to_.Swap(&other->to_);
  from_.Swap(&other->from_);
  std::swap(nonce_, other->nonce_);
  value_.Swap(&other->value_);
  std::swap(gaslimit_, other->gaslimit_);
  gasfeecap_.Swap(&other->gasfeecap_);
  gaspremium_.Swap(&other->gaspremium_);
  std::swap(method_, other->method_);
  params_.Swap(&other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsignedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsignedMessage_descriptor_;
  metadata.reflection = UnsignedMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsignedMessage

// optional string to = 1;
void UnsignedMessage::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnsignedMessage::to() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.to)
}
void UnsignedMessage::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.to)
}
void UnsignedMessage::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.to)
}
::std::string* UnsignedMessage::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnsignedMessage::release_to() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.to)
}

// optional string from = 2;
void UnsignedMessage::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnsignedMessage::from() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.from)
  return from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.from)
}
void UnsignedMessage::set_from(const char* value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.from)
}
void UnsignedMessage::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.from)
}
::std::string* UnsignedMessage::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnsignedMessage::release_from() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.from)
}

// optional uint64 nonce = 3;
void UnsignedMessage::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnsignedMessage::nonce() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.nonce)
  return nonce_;
}
void UnsignedMessage::set_nonce(::google::protobuf::uint64 value) {
  
  nonce_ = value;
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.nonce)
}

// optional string value = 4;
void UnsignedMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnsignedMessage::value() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.value)
}
void UnsignedMessage::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.value)
}
void UnsignedMessage::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.value)
}
::std::string* UnsignedMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnsignedMessage::release_value() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.value)
}

// optional int64 gasLimit = 5;
void UnsignedMessage::clear_gaslimit() {
  gaslimit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UnsignedMessage::gaslimit() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.gasLimit)
  return gaslimit_;
}
void UnsignedMessage::set_gaslimit(::google::protobuf::int64 value) {
  
  gaslimit_ = value;
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.gasLimit)
}

// optional string gasFeeCap = 6;
void UnsignedMessage::clear_gasfeecap() {
  gasfeecap_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnsignedMessage::gasfeecap() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.gasFeeCap)
  return gasfeecap_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_gasfeecap(const ::std::string& value) {
  
  gasfeecap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.gasFeeCap)
}
void UnsignedMessage::set_gasfeecap(const char* value) {
  
  gasfeecap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.gasFeeCap)
}
void UnsignedMessage::set_gasfeecap(const char* value, size_t size) {
  
  gasfeecap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.gasFeeCap)
}
::std::string* UnsignedMessage::mutable_gasfeecap() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.gasFeeCap)
  return gasfeecap_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnsignedMessage::release_gasfeecap() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.gasFeeCap)
  
  return gasfeecap_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_allocated_gasfeecap(::std::string* gasfeecap) {
  if (gasfeecap != NULL) {
    
  } else {
    
  }
  gasfeecap_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gasfeecap);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.gasFeeCap)
}

// optional string gasPremium = 7;
void UnsignedMessage::clear_gaspremium() {
  gaspremium_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnsignedMessage::gaspremium() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.gasPremium)
  return gaspremium_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_gaspremium(const ::std::string& value) {
  
  gaspremium_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.gasPremium)
}
void UnsignedMessage::set_gaspremium(const char* value) {
  
  gaspremium_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.gasPremium)
}
void UnsignedMessage::set_gaspremium(const char* value, size_t size) {
  
  gaspremium_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.gasPremium)
}
::std::string* UnsignedMessage::mutable_gaspremium() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.gasPremium)
  return gaspremium_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnsignedMessage::release_gaspremium() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.gasPremium)
  
  return gaspremium_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_allocated_gaspremium(::std::string* gaspremium) {
  if (gaspremium != NULL) {
    
  } else {
    
  }
  gaspremium_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gaspremium);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.gasPremium)
}

// optional uint64 method = 8;
void UnsignedMessage::clear_method() {
  method_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UnsignedMessage::method() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.method)
  return method_;
}
void UnsignedMessage::set_method(::google::protobuf::uint64 value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.method)
}

// optional string params = 9;
void UnsignedMessage::clear_params() {
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnsignedMessage::params() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.params)
  return params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_params(const ::std::string& value) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.params)
}
void UnsignedMessage::set_params(const char* value) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.params)
}
void UnsignedMessage::set_params(const char* value, size_t size) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.params)
}
::std::string* UnsignedMessage::mutable_params() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.params)
  return params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnsignedMessage::release_params() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.params)
  
  return params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnsignedMessage::set_allocated_params(::std::string* params) {
  if (params != NULL) {
    
  } else {
    
  }
  params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), params);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.params)
}

inline const UnsignedMessage* UnsignedMessage::internal_default_instance() {
  return &UnsignedMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilecoinTxRes::kCidFieldNumber;
const int FilecoinTxRes::kMessageFieldNumber;
const int FilecoinTxRes::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilecoinTxRes::FilecoinTxRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_filecoin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:filecoinapi.FilecoinTxRes)
}

void FilecoinTxRes::InitAsDefaultInstance() {
  message_ = const_cast< ::filecoinapi::UnsignedMessage*>(
      ::filecoinapi::UnsignedMessage::internal_default_instance());
  signature_ = const_cast< ::filecoinapi::Signature*>(
      ::filecoinapi::Signature::internal_default_instance());
}

FilecoinTxRes::FilecoinTxRes(const FilecoinTxRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:filecoinapi.FilecoinTxRes)
}

void FilecoinTxRes::SharedCtor() {
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = NULL;
  signature_ = NULL;
  _cached_size_ = 0;
}

FilecoinTxRes::~FilecoinTxRes() {
  // @@protoc_insertion_point(destructor:filecoinapi.FilecoinTxRes)
  SharedDtor();
}

void FilecoinTxRes::SharedDtor() {
  cid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &FilecoinTxRes_default_instance_.get()) {
    delete message_;
    delete signature_;
  }
}

void FilecoinTxRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilecoinTxRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilecoinTxRes_descriptor_;
}

const FilecoinTxRes& FilecoinTxRes::default_instance() {
  protobuf_InitDefaults_filecoin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FilecoinTxRes> FilecoinTxRes_default_instance_;

FilecoinTxRes* FilecoinTxRes::New(::google::protobuf::Arena* arena) const {
  FilecoinTxRes* n = new FilecoinTxRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilecoinTxRes::Clear() {
// @@protoc_insertion_point(message_clear_start:filecoinapi.FilecoinTxRes)
  cid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
  if (GetArenaNoVirtual() == NULL && signature_ != NULL) delete signature_;
  signature_ = NULL;
}

bool FilecoinTxRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:filecoinapi.FilecoinTxRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string cid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cid().data(), this->cid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinTxRes.cid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional .filecoinapi.UnsignedMessage message = 2;
      case 2: {
        if (tag == 18) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_signature;
        break;
      }

      // optional .filecoinapi.Signature signature = 3;
      case 3: {
        if (tag == 26) {
         parse_signature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:filecoinapi.FilecoinTxRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:filecoinapi.FilecoinTxRes)
  return false;
#undef DO_
}

void FilecoinTxRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:filecoinapi.FilecoinTxRes)
  // optional string cid = 1;
  if (this->cid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cid().data(), this->cid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxRes.cid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cid(), output);
  }

  // optional .filecoinapi.UnsignedMessage message = 2;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->message_, output);
  }

  // optional .filecoinapi.Signature signature = 3;
  if (this->has_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->signature_, output);
  }

  // @@protoc_insertion_point(serialize_end:filecoinapi.FilecoinTxRes)
}

::google::protobuf::uint8* FilecoinTxRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:filecoinapi.FilecoinTxRes)
  // optional string cid = 1;
  if (this->cid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cid().data(), this->cid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinTxRes.cid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cid(), target);
  }

  // optional .filecoinapi.UnsignedMessage message = 2;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->message_, false, target);
  }

  // optional .filecoinapi.Signature signature = 3;
  if (this->has_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->signature_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:filecoinapi.FilecoinTxRes)
  return target;
}

size_t FilecoinTxRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filecoinapi.FilecoinTxRes)
  size_t total_size = 0;

  // optional string cid = 1;
  if (this->cid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cid());
  }

  // optional .filecoinapi.UnsignedMessage message = 2;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->message_);
  }

  // optional .filecoinapi.Signature signature = 3;
  if (this->has_signature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->signature_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilecoinTxRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:filecoinapi.FilecoinTxRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FilecoinTxRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilecoinTxRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:filecoinapi.FilecoinTxRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:filecoinapi.FilecoinTxRes)
    UnsafeMergeFrom(*source);
  }
}

void FilecoinTxRes::MergeFrom(const FilecoinTxRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:filecoinapi.FilecoinTxRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FilecoinTxRes::UnsafeMergeFrom(const FilecoinTxRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.cid().size() > 0) {

    cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
  }
  if (from.has_message()) {
    mutable_message()->::filecoinapi::UnsignedMessage::MergeFrom(from.message());
  }
  if (from.has_signature()) {
    mutable_signature()->::filecoinapi::Signature::MergeFrom(from.signature());
  }
}

void FilecoinTxRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:filecoinapi.FilecoinTxRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilecoinTxRes::CopyFrom(const FilecoinTxRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filecoinapi.FilecoinTxRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FilecoinTxRes::IsInitialized() const {

  return true;
}

void FilecoinTxRes::Swap(FilecoinTxRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilecoinTxRes::InternalSwap(FilecoinTxRes* other) {
  cid_.Swap(&other->cid_);
  std::swap(message_, other->message_);
  std::swap(signature_, other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilecoinTxRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilecoinTxRes_descriptor_;
  metadata.reflection = FilecoinTxRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilecoinTxRes

// optional string cid = 1;
void FilecoinTxRes::clear_cid() {
  cid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinTxRes::cid() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxRes.cid)
  return cid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxRes::set_cid(const ::std::string& value) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxRes.cid)
}
void FilecoinTxRes::set_cid(const char* value) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxRes.cid)
}
void FilecoinTxRes::set_cid(const char* value, size_t size) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxRes.cid)
}
::std::string* FilecoinTxRes::mutable_cid() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxRes.cid)
  return cid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinTxRes::release_cid() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxRes.cid)
  
  return cid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinTxRes::set_allocated_cid(::std::string* cid) {
  if (cid != NULL) {
    
  } else {
    
  }
  cid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cid);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxRes.cid)
}

// optional .filecoinapi.UnsignedMessage message = 2;
bool FilecoinTxRes::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
void FilecoinTxRes::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
const ::filecoinapi::UnsignedMessage& FilecoinTxRes::message() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxRes.message)
  return message_ != NULL ? *message_
                         : *::filecoinapi::UnsignedMessage::internal_default_instance();
}
::filecoinapi::UnsignedMessage* FilecoinTxRes::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::filecoinapi::UnsignedMessage;
  }
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxRes.message)
  return message_;
}
::filecoinapi::UnsignedMessage* FilecoinTxRes::release_message() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxRes.message)
  
  ::filecoinapi::UnsignedMessage* temp = message_;
  message_ = NULL;
  return temp;
}
void FilecoinTxRes::set_allocated_message(::filecoinapi::UnsignedMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxRes.message)
}

// optional .filecoinapi.Signature signature = 3;
bool FilecoinTxRes::has_signature() const {
  return this != internal_default_instance() && signature_ != NULL;
}
void FilecoinTxRes::clear_signature() {
  if (GetArenaNoVirtual() == NULL && signature_ != NULL) delete signature_;
  signature_ = NULL;
}
const ::filecoinapi::Signature& FilecoinTxRes::signature() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxRes.signature)
  return signature_ != NULL ? *signature_
                         : *::filecoinapi::Signature::internal_default_instance();
}
::filecoinapi::Signature* FilecoinTxRes::mutable_signature() {
  
  if (signature_ == NULL) {
    signature_ = new ::filecoinapi::Signature;
  }
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxRes.signature)
  return signature_;
}
::filecoinapi::Signature* FilecoinTxRes::release_signature() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxRes.signature)
  
  ::filecoinapi::Signature* temp = signature_;
  signature_ = NULL;
  return temp;
}
void FilecoinTxRes::set_allocated_signature(::filecoinapi::Signature* signature) {
  delete signature_;
  signature_ = signature;
  if (signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxRes.signature)
}

inline const FilecoinTxRes* FilecoinTxRes::internal_default_instance() {
  return &FilecoinTxRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature::kTypeFieldNumber;
const int Signature::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature::Signature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_filecoin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:filecoinapi.Signature)
}

void Signature::InitAsDefaultInstance() {
}

Signature::Signature(const Signature& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:filecoinapi.Signature)
}

void Signature::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
  _cached_size_ = 0;
}

Signature::~Signature() {
  // @@protoc_insertion_point(destructor:filecoinapi.Signature)
  SharedDtor();
}

void Signature::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Signature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Signature::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Signature_descriptor_;
}

const Signature& Signature::default_instance() {
  protobuf_InitDefaults_filecoin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Signature> Signature_default_instance_;

Signature* Signature::New(::google::protobuf::Arena* arena) const {
  Signature* n = new Signature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:filecoinapi.Signature)
  type_ = 0u;
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Signature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:filecoinapi.Signature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional string data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.Signature.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:filecoinapi.Signature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:filecoinapi.Signature)
  return false;
#undef DO_
}

void Signature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:filecoinapi.Signature)
  // optional uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.Signature.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:filecoinapi.Signature)
}

::google::protobuf::uint8* Signature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:filecoinapi.Signature)
  // optional uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.Signature.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:filecoinapi.Signature)
  return target;
}

size_t Signature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filecoinapi.Signature)
  size_t total_size = 0;

  // optional uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Signature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:filecoinapi.Signature)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Signature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:filecoinapi.Signature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:filecoinapi.Signature)
    UnsafeMergeFrom(*source);
  }
}

void Signature::MergeFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:filecoinapi.Signature)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Signature::UnsafeMergeFrom(const Signature& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void Signature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:filecoinapi.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature::CopyFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filecoinapi.Signature)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Signature::IsInitialized() const {

  return true;
}

void Signature::Swap(Signature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature::InternalSwap(Signature* other) {
  std::swap(type_, other->type_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Signature::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Signature_descriptor_;
  metadata.reflection = Signature_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Signature

// optional uint32 type = 1;
void Signature::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 Signature::type() const {
  // @@protoc_insertion_point(field_get:filecoinapi.Signature.type)
  return type_;
}
void Signature::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:filecoinapi.Signature.type)
}

// optional string data = 2;
void Signature::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Signature::data() const {
  // @@protoc_insertion_point(field_get:filecoinapi.Signature.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Signature::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.Signature.data)
}
void Signature::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.Signature.data)
}
void Signature::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.Signature.data)
}
::std::string* Signature::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.Signature.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Signature::release_data() {
  // @@protoc_insertion_point(field_release:filecoinapi.Signature.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Signature::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.Signature.data)
}

inline const Signature* Signature::internal_default_instance() {
  return &Signature_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilecoinAddressReq::kNetworkFieldNumber;
const int FilecoinAddressReq::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilecoinAddressReq::FilecoinAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_filecoin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:filecoinapi.FilecoinAddressReq)
}

void FilecoinAddressReq::InitAsDefaultInstance() {
}

FilecoinAddressReq::FilecoinAddressReq(const FilecoinAddressReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:filecoinapi.FilecoinAddressReq)
}

void FilecoinAddressReq::SharedCtor() {
  network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FilecoinAddressReq::~FilecoinAddressReq() {
  // @@protoc_insertion_point(destructor:filecoinapi.FilecoinAddressReq)
  SharedDtor();
}

void FilecoinAddressReq::SharedDtor() {
  network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FilecoinAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilecoinAddressReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilecoinAddressReq_descriptor_;
}

const FilecoinAddressReq& FilecoinAddressReq::default_instance() {
  protobuf_InitDefaults_filecoin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FilecoinAddressReq> FilecoinAddressReq_default_instance_;

FilecoinAddressReq* FilecoinAddressReq::New(::google::protobuf::Arena* arena) const {
  FilecoinAddressReq* n = new FilecoinAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilecoinAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:filecoinapi.FilecoinAddressReq)
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FilecoinAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:filecoinapi.FilecoinAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string network = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network().data(), this->network().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinAddressReq.network"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // optional string path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinAddressReq.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:filecoinapi.FilecoinAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:filecoinapi.FilecoinAddressReq)
  return false;
#undef DO_
}

void FilecoinAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:filecoinapi.FilecoinAddressReq)
  // optional string network = 1;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinAddressReq.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->network(), output);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinAddressReq.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:filecoinapi.FilecoinAddressReq)
}

::google::protobuf::uint8* FilecoinAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:filecoinapi.FilecoinAddressReq)
  // optional string network = 1;
  if (this->network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network().data(), this->network().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinAddressReq.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->network(), target);
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinAddressReq.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:filecoinapi.FilecoinAddressReq)
  return target;
}

size_t FilecoinAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filecoinapi.FilecoinAddressReq)
  size_t total_size = 0;

  // optional string network = 1;
  if (this->network().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network());
  }

  // optional string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilecoinAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:filecoinapi.FilecoinAddressReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FilecoinAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilecoinAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:filecoinapi.FilecoinAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:filecoinapi.FilecoinAddressReq)
    UnsafeMergeFrom(*source);
  }
}

void FilecoinAddressReq::MergeFrom(const FilecoinAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:filecoinapi.FilecoinAddressReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FilecoinAddressReq::UnsafeMergeFrom(const FilecoinAddressReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.network().size() > 0) {

    network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void FilecoinAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:filecoinapi.FilecoinAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilecoinAddressReq::CopyFrom(const FilecoinAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filecoinapi.FilecoinAddressReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FilecoinAddressReq::IsInitialized() const {

  return true;
}

void FilecoinAddressReq::Swap(FilecoinAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilecoinAddressReq::InternalSwap(FilecoinAddressReq* other) {
  network_.Swap(&other->network_);
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilecoinAddressReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilecoinAddressReq_descriptor_;
  metadata.reflection = FilecoinAddressReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilecoinAddressReq

// optional string network = 1;
void FilecoinAddressReq::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinAddressReq::network() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinAddressReq.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinAddressReq::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinAddressReq.network)
}
void FilecoinAddressReq::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinAddressReq.network)
}
void FilecoinAddressReq::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinAddressReq.network)
}
::std::string* FilecoinAddressReq::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinAddressReq.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinAddressReq::release_network() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinAddressReq.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinAddressReq::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinAddressReq.network)
}

// optional string path = 2;
void FilecoinAddressReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinAddressReq::path() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinAddressReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinAddressReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinAddressReq.path)
}
void FilecoinAddressReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinAddressReq.path)
}
void FilecoinAddressReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinAddressReq.path)
}
::std::string* FilecoinAddressReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinAddressReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinAddressReq::release_path() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinAddressReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinAddressReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinAddressReq.path)
}

inline const FilecoinAddressReq* FilecoinAddressReq::internal_default_instance() {
  return &FilecoinAddressReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilecoinAddressRes::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilecoinAddressRes::FilecoinAddressRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_filecoin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:filecoinapi.FilecoinAddressRes)
}

void FilecoinAddressRes::InitAsDefaultInstance() {
}

FilecoinAddressRes::FilecoinAddressRes(const FilecoinAddressRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:filecoinapi.FilecoinAddressRes)
}

void FilecoinAddressRes::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FilecoinAddressRes::~FilecoinAddressRes() {
  // @@protoc_insertion_point(destructor:filecoinapi.FilecoinAddressRes)
  SharedDtor();
}

void FilecoinAddressRes::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FilecoinAddressRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilecoinAddressRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilecoinAddressRes_descriptor_;
}

const FilecoinAddressRes& FilecoinAddressRes::default_instance() {
  protobuf_InitDefaults_filecoin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FilecoinAddressRes> FilecoinAddressRes_default_instance_;

FilecoinAddressRes* FilecoinAddressRes::New(::google::protobuf::Arena* arena) const {
  FilecoinAddressRes* n = new FilecoinAddressRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilecoinAddressRes::Clear() {
// @@protoc_insertion_point(message_clear_start:filecoinapi.FilecoinAddressRes)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FilecoinAddressRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:filecoinapi.FilecoinAddressRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "filecoinapi.FilecoinAddressRes.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:filecoinapi.FilecoinAddressRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:filecoinapi.FilecoinAddressRes)
  return false;
#undef DO_
}

void FilecoinAddressRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:filecoinapi.FilecoinAddressRes)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinAddressRes.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:filecoinapi.FilecoinAddressRes)
}

::google::protobuf::uint8* FilecoinAddressRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:filecoinapi.FilecoinAddressRes)
  // optional string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "filecoinapi.FilecoinAddressRes.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:filecoinapi.FilecoinAddressRes)
  return target;
}

size_t FilecoinAddressRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filecoinapi.FilecoinAddressRes)
  size_t total_size = 0;

  // optional string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilecoinAddressRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:filecoinapi.FilecoinAddressRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FilecoinAddressRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilecoinAddressRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:filecoinapi.FilecoinAddressRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:filecoinapi.FilecoinAddressRes)
    UnsafeMergeFrom(*source);
  }
}

void FilecoinAddressRes::MergeFrom(const FilecoinAddressRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:filecoinapi.FilecoinAddressRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FilecoinAddressRes::UnsafeMergeFrom(const FilecoinAddressRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void FilecoinAddressRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:filecoinapi.FilecoinAddressRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilecoinAddressRes::CopyFrom(const FilecoinAddressRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filecoinapi.FilecoinAddressRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FilecoinAddressRes::IsInitialized() const {

  return true;
}

void FilecoinAddressRes::Swap(FilecoinAddressRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilecoinAddressRes::InternalSwap(FilecoinAddressRes* other) {
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilecoinAddressRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilecoinAddressRes_descriptor_;
  metadata.reflection = FilecoinAddressRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilecoinAddressRes

// optional string address = 1;
void FilecoinAddressRes::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilecoinAddressRes::address() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinAddressRes.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinAddressRes::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinAddressRes.address)
}
void FilecoinAddressRes::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinAddressRes.address)
}
void FilecoinAddressRes::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinAddressRes.address)
}
::std::string* FilecoinAddressRes::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinAddressRes.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilecoinAddressRes::release_address() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinAddressRes.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilecoinAddressRes::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinAddressRes.address)
}

inline const FilecoinAddressRes* FilecoinAddressRes::internal_default_instance() {
  return &FilecoinAddressRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace filecoinapi

// @@protoc_insertion_point(global_scope)
