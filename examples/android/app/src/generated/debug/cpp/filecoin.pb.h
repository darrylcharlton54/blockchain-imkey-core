// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: filecoin.proto

#ifndef PROTOBUF_filecoin_2eproto__INCLUDED
#define PROTOBUF_filecoin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace filecoinapi {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_filecoin_2eproto();
void protobuf_InitDefaults_filecoin_2eproto();
void protobuf_AssignDesc_filecoin_2eproto();
void protobuf_ShutdownFile_filecoin_2eproto();

class FilecoinAddressReq;
class FilecoinAddressRes;
class FilecoinTxReq;
class FilecoinTxRes;
class Signature;
class UnsignedMessage;

// ===================================================================

class FilecoinTxReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:filecoinapi.FilecoinTxReq) */ {
 public:
  FilecoinTxReq();
  virtual ~FilecoinTxReq();

  FilecoinTxReq(const FilecoinTxReq& from);

  inline FilecoinTxReq& operator=(const FilecoinTxReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilecoinTxReq& default_instance();

  static const FilecoinTxReq* internal_default_instance();

  void Swap(FilecoinTxReq* other);

  // implements Message ----------------------------------------------

  inline FilecoinTxReq* New() const { return New(NULL); }

  FilecoinTxReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FilecoinTxReq& from);
  void MergeFrom(const FilecoinTxReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilecoinTxReq* other);
  void UnsafeMergeFrom(const FilecoinTxReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .filecoinapi.UnsignedMessage message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::filecoinapi::UnsignedMessage& message() const;
  ::filecoinapi::UnsignedMessage* mutable_message();
  ::filecoinapi::UnsignedMessage* release_message();
  void set_allocated_message(::filecoinapi::UnsignedMessage* message);

  // optional string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string network = 3;
  void clear_network();
  static const int kNetworkFieldNumber = 3;
  const ::std::string& network() const;
  void set_network(const ::std::string& value);
  void set_network(const char* value);
  void set_network(const char* value, size_t size);
  ::std::string* mutable_network();
  ::std::string* release_network();
  void set_allocated_network(::std::string* network);

  // optional string payment_dis = 4;
  void clear_payment_dis();
  static const int kPaymentDisFieldNumber = 4;
  const ::std::string& payment_dis() const;
  void set_payment_dis(const ::std::string& value);
  void set_payment_dis(const char* value);
  void set_payment_dis(const char* value, size_t size);
  ::std::string* mutable_payment_dis();
  ::std::string* release_payment_dis();
  void set_allocated_payment_dis(::std::string* payment_dis);

  // optional string to_dis = 5;
  void clear_to_dis();
  static const int kToDisFieldNumber = 5;
  const ::std::string& to_dis() const;
  void set_to_dis(const ::std::string& value);
  void set_to_dis(const char* value);
  void set_to_dis(const char* value, size_t size);
  ::std::string* mutable_to_dis();
  ::std::string* release_to_dis();
  void set_allocated_to_dis(::std::string* to_dis);

  // optional string from_dis = 6;
  void clear_from_dis();
  static const int kFromDisFieldNumber = 6;
  const ::std::string& from_dis() const;
  void set_from_dis(const ::std::string& value);
  void set_from_dis(const char* value);
  void set_from_dis(const char* value, size_t size);
  ::std::string* mutable_from_dis();
  ::std::string* release_from_dis();
  void set_allocated_from_dis(::std::string* from_dis);

  // optional string fee_dis = 7;
  void clear_fee_dis();
  static const int kFeeDisFieldNumber = 7;
  const ::std::string& fee_dis() const;
  void set_fee_dis(const ::std::string& value);
  void set_fee_dis(const char* value);
  void set_fee_dis(const char* value, size_t size);
  ::std::string* mutable_fee_dis();
  ::std::string* release_fee_dis();
  void set_allocated_fee_dis(::std::string* fee_dis);

  // @@protoc_insertion_point(class_scope:filecoinapi.FilecoinTxReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr network_;
  ::google::protobuf::internal::ArenaStringPtr payment_dis_;
  ::google::protobuf::internal::ArenaStringPtr to_dis_;
  ::google::protobuf::internal::ArenaStringPtr from_dis_;
  ::google::protobuf::internal::ArenaStringPtr fee_dis_;
  ::filecoinapi::UnsignedMessage* message_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_filecoin_2eproto_impl();
  friend void  protobuf_AddDesc_filecoin_2eproto_impl();
  friend void protobuf_AssignDesc_filecoin_2eproto();
  friend void protobuf_ShutdownFile_filecoin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FilecoinTxReq> FilecoinTxReq_default_instance_;

// -------------------------------------------------------------------

class UnsignedMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:filecoinapi.UnsignedMessage) */ {
 public:
  UnsignedMessage();
  virtual ~UnsignedMessage();

  UnsignedMessage(const UnsignedMessage& from);

  inline UnsignedMessage& operator=(const UnsignedMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsignedMessage& default_instance();

  static const UnsignedMessage* internal_default_instance();

  void Swap(UnsignedMessage* other);

  // implements Message ----------------------------------------------

  inline UnsignedMessage* New() const { return New(NULL); }

  UnsignedMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsignedMessage& from);
  void MergeFrom(const UnsignedMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnsignedMessage* other);
  void UnsafeMergeFrom(const UnsignedMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string to = 1;
  void clear_to();
  static const int kToFieldNumber = 1;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // optional string from = 2;
  void clear_from();
  static const int kFromFieldNumber = 2;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  void set_from(const char* value);
  void set_from(const char* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // optional uint64 nonce = 3;
  void clear_nonce();
  static const int kNonceFieldNumber = 3;
  ::google::protobuf::uint64 nonce() const;
  void set_nonce(::google::protobuf::uint64 value);

  // optional string value = 4;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional int64 gasLimit = 5;
  void clear_gaslimit();
  static const int kGasLimitFieldNumber = 5;
  ::google::protobuf::int64 gaslimit() const;
  void set_gaslimit(::google::protobuf::int64 value);

  // optional string gasFeeCap = 6;
  void clear_gasfeecap();
  static const int kGasFeeCapFieldNumber = 6;
  const ::std::string& gasfeecap() const;
  void set_gasfeecap(const ::std::string& value);
  void set_gasfeecap(const char* value);
  void set_gasfeecap(const char* value, size_t size);
  ::std::string* mutable_gasfeecap();
  ::std::string* release_gasfeecap();
  void set_allocated_gasfeecap(::std::string* gasfeecap);

  // optional string gasPremium = 7;
  void clear_gaspremium();
  static const int kGasPremiumFieldNumber = 7;
  const ::std::string& gaspremium() const;
  void set_gaspremium(const ::std::string& value);
  void set_gaspremium(const char* value);
  void set_gaspremium(const char* value, size_t size);
  ::std::string* mutable_gaspremium();
  ::std::string* release_gaspremium();
  void set_allocated_gaspremium(::std::string* gaspremium);

  // optional uint64 method = 8;
  void clear_method();
  static const int kMethodFieldNumber = 8;
  ::google::protobuf::uint64 method() const;
  void set_method(::google::protobuf::uint64 value);

  // optional string params = 9;
  void clear_params();
  static const int kParamsFieldNumber = 9;
  const ::std::string& params() const;
  void set_params(const ::std::string& value);
  void set_params(const char* value);
  void set_params(const char* value, size_t size);
  ::std::string* mutable_params();
  ::std::string* release_params();
  void set_allocated_params(::std::string* params);

  // @@protoc_insertion_point(class_scope:filecoinapi.UnsignedMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr gasfeecap_;
  ::google::protobuf::internal::ArenaStringPtr gaspremium_;
  ::google::protobuf::internal::ArenaStringPtr params_;
  ::google::protobuf::uint64 nonce_;
  ::google::protobuf::int64 gaslimit_;
  ::google::protobuf::uint64 method_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_filecoin_2eproto_impl();
  friend void  protobuf_AddDesc_filecoin_2eproto_impl();
  friend void protobuf_AssignDesc_filecoin_2eproto();
  friend void protobuf_ShutdownFile_filecoin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UnsignedMessage> UnsignedMessage_default_instance_;

// -------------------------------------------------------------------

class FilecoinTxRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:filecoinapi.FilecoinTxRes) */ {
 public:
  FilecoinTxRes();
  virtual ~FilecoinTxRes();

  FilecoinTxRes(const FilecoinTxRes& from);

  inline FilecoinTxRes& operator=(const FilecoinTxRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilecoinTxRes& default_instance();

  static const FilecoinTxRes* internal_default_instance();

  void Swap(FilecoinTxRes* other);

  // implements Message ----------------------------------------------

  inline FilecoinTxRes* New() const { return New(NULL); }

  FilecoinTxRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FilecoinTxRes& from);
  void MergeFrom(const FilecoinTxRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilecoinTxRes* other);
  void UnsafeMergeFrom(const FilecoinTxRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cid = 1;
  void clear_cid();
  static const int kCidFieldNumber = 1;
  const ::std::string& cid() const;
  void set_cid(const ::std::string& value);
  void set_cid(const char* value);
  void set_cid(const char* value, size_t size);
  ::std::string* mutable_cid();
  ::std::string* release_cid();
  void set_allocated_cid(::std::string* cid);

  // optional .filecoinapi.UnsignedMessage message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::filecoinapi::UnsignedMessage& message() const;
  ::filecoinapi::UnsignedMessage* mutable_message();
  ::filecoinapi::UnsignedMessage* release_message();
  void set_allocated_message(::filecoinapi::UnsignedMessage* message);

  // optional .filecoinapi.Signature signature = 3;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 3;
  const ::filecoinapi::Signature& signature() const;
  ::filecoinapi::Signature* mutable_signature();
  ::filecoinapi::Signature* release_signature();
  void set_allocated_signature(::filecoinapi::Signature* signature);

  // @@protoc_insertion_point(class_scope:filecoinapi.FilecoinTxRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cid_;
  ::filecoinapi::UnsignedMessage* message_;
  ::filecoinapi::Signature* signature_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_filecoin_2eproto_impl();
  friend void  protobuf_AddDesc_filecoin_2eproto_impl();
  friend void protobuf_AssignDesc_filecoin_2eproto();
  friend void protobuf_ShutdownFile_filecoin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FilecoinTxRes> FilecoinTxRes_default_instance_;

// -------------------------------------------------------------------

class Signature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:filecoinapi.Signature) */ {
 public:
  Signature();
  virtual ~Signature();

  Signature(const Signature& from);

  inline Signature& operator=(const Signature& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Signature& default_instance();

  static const Signature* internal_default_instance();

  void Swap(Signature* other);

  // implements Message ----------------------------------------------

  inline Signature* New() const { return New(NULL); }

  Signature* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Signature& from);
  void MergeFrom(const Signature& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Signature* other);
  void UnsafeMergeFrom(const Signature& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional string data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:filecoinapi.Signature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_filecoin_2eproto_impl();
  friend void  protobuf_AddDesc_filecoin_2eproto_impl();
  friend void protobuf_AssignDesc_filecoin_2eproto();
  friend void protobuf_ShutdownFile_filecoin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Signature> Signature_default_instance_;

// -------------------------------------------------------------------

class FilecoinAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:filecoinapi.FilecoinAddressReq) */ {
 public:
  FilecoinAddressReq();
  virtual ~FilecoinAddressReq();

  FilecoinAddressReq(const FilecoinAddressReq& from);

  inline FilecoinAddressReq& operator=(const FilecoinAddressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilecoinAddressReq& default_instance();

  static const FilecoinAddressReq* internal_default_instance();

  void Swap(FilecoinAddressReq* other);

  // implements Message ----------------------------------------------

  inline FilecoinAddressReq* New() const { return New(NULL); }

  FilecoinAddressReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FilecoinAddressReq& from);
  void MergeFrom(const FilecoinAddressReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilecoinAddressReq* other);
  void UnsafeMergeFrom(const FilecoinAddressReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string network = 1;
  void clear_network();
  static const int kNetworkFieldNumber = 1;
  const ::std::string& network() const;
  void set_network(const ::std::string& value);
  void set_network(const char* value);
  void set_network(const char* value, size_t size);
  ::std::string* mutable_network();
  ::std::string* release_network();
  void set_allocated_network(::std::string* network);

  // optional string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:filecoinapi.FilecoinAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr network_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_filecoin_2eproto_impl();
  friend void  protobuf_AddDesc_filecoin_2eproto_impl();
  friend void protobuf_AssignDesc_filecoin_2eproto();
  friend void protobuf_ShutdownFile_filecoin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FilecoinAddressReq> FilecoinAddressReq_default_instance_;

// -------------------------------------------------------------------

class FilecoinAddressRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:filecoinapi.FilecoinAddressRes) */ {
 public:
  FilecoinAddressRes();
  virtual ~FilecoinAddressRes();

  FilecoinAddressRes(const FilecoinAddressRes& from);

  inline FilecoinAddressRes& operator=(const FilecoinAddressRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilecoinAddressRes& default_instance();

  static const FilecoinAddressRes* internal_default_instance();

  void Swap(FilecoinAddressRes* other);

  // implements Message ----------------------------------------------

  inline FilecoinAddressRes* New() const { return New(NULL); }

  FilecoinAddressRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FilecoinAddressRes& from);
  void MergeFrom(const FilecoinAddressRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilecoinAddressRes* other);
  void UnsafeMergeFrom(const FilecoinAddressRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:filecoinapi.FilecoinAddressRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_filecoin_2eproto_impl();
  friend void  protobuf_AddDesc_filecoin_2eproto_impl();
  friend void protobuf_AssignDesc_filecoin_2eproto();
  friend void protobuf_ShutdownFile_filecoin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FilecoinAddressRes> FilecoinAddressRes_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FilecoinTxReq

// optional .filecoinapi.UnsignedMessage message = 1;
inline bool FilecoinTxReq::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
inline void FilecoinTxReq::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
inline const ::filecoinapi::UnsignedMessage& FilecoinTxReq::message() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.message)
  return message_ != NULL ? *message_
                         : *::filecoinapi::UnsignedMessage::internal_default_instance();
}
inline ::filecoinapi::UnsignedMessage* FilecoinTxReq::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::filecoinapi::UnsignedMessage;
  }
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.message)
  return message_;
}
inline ::filecoinapi::UnsignedMessage* FilecoinTxReq::release_message() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.message)
  
  ::filecoinapi::UnsignedMessage* temp = message_;
  message_ = NULL;
  return temp;
}
inline void FilecoinTxReq::set_allocated_message(::filecoinapi::UnsignedMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.message)
}

// optional string path = 2;
inline void FilecoinTxReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinTxReq::path() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.path)
}
inline void FilecoinTxReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.path)
}
inline void FilecoinTxReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.path)
}
inline ::std::string* FilecoinTxReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinTxReq::release_path() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.path)
}

// optional string network = 3;
inline void FilecoinTxReq::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinTxReq::network() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.network)
}
inline void FilecoinTxReq::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.network)
}
inline void FilecoinTxReq::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.network)
}
inline ::std::string* FilecoinTxReq::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinTxReq::release_network() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.network)
}

// optional string payment_dis = 4;
inline void FilecoinTxReq::clear_payment_dis() {
  payment_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinTxReq::payment_dis() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.payment_dis)
  return payment_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_payment_dis(const ::std::string& value) {
  
  payment_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.payment_dis)
}
inline void FilecoinTxReq::set_payment_dis(const char* value) {
  
  payment_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.payment_dis)
}
inline void FilecoinTxReq::set_payment_dis(const char* value, size_t size) {
  
  payment_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.payment_dis)
}
inline ::std::string* FilecoinTxReq::mutable_payment_dis() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.payment_dis)
  return payment_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinTxReq::release_payment_dis() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.payment_dis)
  
  return payment_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_allocated_payment_dis(::std::string* payment_dis) {
  if (payment_dis != NULL) {
    
  } else {
    
  }
  payment_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payment_dis);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.payment_dis)
}

// optional string to_dis = 5;
inline void FilecoinTxReq::clear_to_dis() {
  to_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinTxReq::to_dis() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.to_dis)
  return to_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_to_dis(const ::std::string& value) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.to_dis)
}
inline void FilecoinTxReq::set_to_dis(const char* value) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.to_dis)
}
inline void FilecoinTxReq::set_to_dis(const char* value, size_t size) {
  
  to_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.to_dis)
}
inline ::std::string* FilecoinTxReq::mutable_to_dis() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.to_dis)
  return to_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinTxReq::release_to_dis() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.to_dis)
  
  return to_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_allocated_to_dis(::std::string* to_dis) {
  if (to_dis != NULL) {
    
  } else {
    
  }
  to_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_dis);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.to_dis)
}

// optional string from_dis = 6;
inline void FilecoinTxReq::clear_from_dis() {
  from_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinTxReq::from_dis() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.from_dis)
  return from_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_from_dis(const ::std::string& value) {
  
  from_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.from_dis)
}
inline void FilecoinTxReq::set_from_dis(const char* value) {
  
  from_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.from_dis)
}
inline void FilecoinTxReq::set_from_dis(const char* value, size_t size) {
  
  from_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.from_dis)
}
inline ::std::string* FilecoinTxReq::mutable_from_dis() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.from_dis)
  return from_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinTxReq::release_from_dis() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.from_dis)
  
  return from_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_allocated_from_dis(::std::string* from_dis) {
  if (from_dis != NULL) {
    
  } else {
    
  }
  from_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_dis);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.from_dis)
}

// optional string fee_dis = 7;
inline void FilecoinTxReq::clear_fee_dis() {
  fee_dis_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinTxReq::fee_dis() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxReq.fee_dis)
  return fee_dis_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_fee_dis(const ::std::string& value) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxReq.fee_dis)
}
inline void FilecoinTxReq::set_fee_dis(const char* value) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxReq.fee_dis)
}
inline void FilecoinTxReq::set_fee_dis(const char* value, size_t size) {
  
  fee_dis_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxReq.fee_dis)
}
inline ::std::string* FilecoinTxReq::mutable_fee_dis() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxReq.fee_dis)
  return fee_dis_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinTxReq::release_fee_dis() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxReq.fee_dis)
  
  return fee_dis_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxReq::set_allocated_fee_dis(::std::string* fee_dis) {
  if (fee_dis != NULL) {
    
  } else {
    
  }
  fee_dis_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fee_dis);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxReq.fee_dis)
}

inline const FilecoinTxReq* FilecoinTxReq::internal_default_instance() {
  return &FilecoinTxReq_default_instance_.get();
}
// -------------------------------------------------------------------

// UnsignedMessage

// optional string to = 1;
inline void UnsignedMessage::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsignedMessage::to() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.to)
}
inline void UnsignedMessage::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.to)
}
inline void UnsignedMessage::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.to)
}
inline ::std::string* UnsignedMessage::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsignedMessage::release_to() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.to)
}

// optional string from = 2;
inline void UnsignedMessage::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsignedMessage::from() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.from)
  return from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.from)
}
inline void UnsignedMessage::set_from(const char* value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.from)
}
inline void UnsignedMessage::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.from)
}
inline ::std::string* UnsignedMessage::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsignedMessage::release_from() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.from)
}

// optional uint64 nonce = 3;
inline void UnsignedMessage::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UnsignedMessage::nonce() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.nonce)
  return nonce_;
}
inline void UnsignedMessage::set_nonce(::google::protobuf::uint64 value) {
  
  nonce_ = value;
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.nonce)
}

// optional string value = 4;
inline void UnsignedMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsignedMessage::value() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.value)
}
inline void UnsignedMessage::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.value)
}
inline void UnsignedMessage::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.value)
}
inline ::std::string* UnsignedMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsignedMessage::release_value() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.value)
}

// optional int64 gasLimit = 5;
inline void UnsignedMessage::clear_gaslimit() {
  gaslimit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UnsignedMessage::gaslimit() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.gasLimit)
  return gaslimit_;
}
inline void UnsignedMessage::set_gaslimit(::google::protobuf::int64 value) {
  
  gaslimit_ = value;
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.gasLimit)
}

// optional string gasFeeCap = 6;
inline void UnsignedMessage::clear_gasfeecap() {
  gasfeecap_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsignedMessage::gasfeecap() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.gasFeeCap)
  return gasfeecap_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_gasfeecap(const ::std::string& value) {
  
  gasfeecap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.gasFeeCap)
}
inline void UnsignedMessage::set_gasfeecap(const char* value) {
  
  gasfeecap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.gasFeeCap)
}
inline void UnsignedMessage::set_gasfeecap(const char* value, size_t size) {
  
  gasfeecap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.gasFeeCap)
}
inline ::std::string* UnsignedMessage::mutable_gasfeecap() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.gasFeeCap)
  return gasfeecap_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsignedMessage::release_gasfeecap() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.gasFeeCap)
  
  return gasfeecap_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_allocated_gasfeecap(::std::string* gasfeecap) {
  if (gasfeecap != NULL) {
    
  } else {
    
  }
  gasfeecap_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gasfeecap);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.gasFeeCap)
}

// optional string gasPremium = 7;
inline void UnsignedMessage::clear_gaspremium() {
  gaspremium_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsignedMessage::gaspremium() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.gasPremium)
  return gaspremium_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_gaspremium(const ::std::string& value) {
  
  gaspremium_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.gasPremium)
}
inline void UnsignedMessage::set_gaspremium(const char* value) {
  
  gaspremium_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.gasPremium)
}
inline void UnsignedMessage::set_gaspremium(const char* value, size_t size) {
  
  gaspremium_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.gasPremium)
}
inline ::std::string* UnsignedMessage::mutable_gaspremium() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.gasPremium)
  return gaspremium_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsignedMessage::release_gaspremium() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.gasPremium)
  
  return gaspremium_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_allocated_gaspremium(::std::string* gaspremium) {
  if (gaspremium != NULL) {
    
  } else {
    
  }
  gaspremium_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gaspremium);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.gasPremium)
}

// optional uint64 method = 8;
inline void UnsignedMessage::clear_method() {
  method_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UnsignedMessage::method() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.method)
  return method_;
}
inline void UnsignedMessage::set_method(::google::protobuf::uint64 value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.method)
}

// optional string params = 9;
inline void UnsignedMessage::clear_params() {
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsignedMessage::params() const {
  // @@protoc_insertion_point(field_get:filecoinapi.UnsignedMessage.params)
  return params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_params(const ::std::string& value) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.UnsignedMessage.params)
}
inline void UnsignedMessage::set_params(const char* value) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.UnsignedMessage.params)
}
inline void UnsignedMessage::set_params(const char* value, size_t size) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.UnsignedMessage.params)
}
inline ::std::string* UnsignedMessage::mutable_params() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.UnsignedMessage.params)
  return params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsignedMessage::release_params() {
  // @@protoc_insertion_point(field_release:filecoinapi.UnsignedMessage.params)
  
  return params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsignedMessage::set_allocated_params(::std::string* params) {
  if (params != NULL) {
    
  } else {
    
  }
  params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), params);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.UnsignedMessage.params)
}

inline const UnsignedMessage* UnsignedMessage::internal_default_instance() {
  return &UnsignedMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// FilecoinTxRes

// optional string cid = 1;
inline void FilecoinTxRes::clear_cid() {
  cid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinTxRes::cid() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxRes.cid)
  return cid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxRes::set_cid(const ::std::string& value) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinTxRes.cid)
}
inline void FilecoinTxRes::set_cid(const char* value) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinTxRes.cid)
}
inline void FilecoinTxRes::set_cid(const char* value, size_t size) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinTxRes.cid)
}
inline ::std::string* FilecoinTxRes::mutable_cid() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxRes.cid)
  return cid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinTxRes::release_cid() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxRes.cid)
  
  return cid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinTxRes::set_allocated_cid(::std::string* cid) {
  if (cid != NULL) {
    
  } else {
    
  }
  cid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cid);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxRes.cid)
}

// optional .filecoinapi.UnsignedMessage message = 2;
inline bool FilecoinTxRes::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
inline void FilecoinTxRes::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
inline const ::filecoinapi::UnsignedMessage& FilecoinTxRes::message() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxRes.message)
  return message_ != NULL ? *message_
                         : *::filecoinapi::UnsignedMessage::internal_default_instance();
}
inline ::filecoinapi::UnsignedMessage* FilecoinTxRes::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::filecoinapi::UnsignedMessage;
  }
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxRes.message)
  return message_;
}
inline ::filecoinapi::UnsignedMessage* FilecoinTxRes::release_message() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxRes.message)
  
  ::filecoinapi::UnsignedMessage* temp = message_;
  message_ = NULL;
  return temp;
}
inline void FilecoinTxRes::set_allocated_message(::filecoinapi::UnsignedMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxRes.message)
}

// optional .filecoinapi.Signature signature = 3;
inline bool FilecoinTxRes::has_signature() const {
  return this != internal_default_instance() && signature_ != NULL;
}
inline void FilecoinTxRes::clear_signature() {
  if (GetArenaNoVirtual() == NULL && signature_ != NULL) delete signature_;
  signature_ = NULL;
}
inline const ::filecoinapi::Signature& FilecoinTxRes::signature() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinTxRes.signature)
  return signature_ != NULL ? *signature_
                         : *::filecoinapi::Signature::internal_default_instance();
}
inline ::filecoinapi::Signature* FilecoinTxRes::mutable_signature() {
  
  if (signature_ == NULL) {
    signature_ = new ::filecoinapi::Signature;
  }
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinTxRes.signature)
  return signature_;
}
inline ::filecoinapi::Signature* FilecoinTxRes::release_signature() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinTxRes.signature)
  
  ::filecoinapi::Signature* temp = signature_;
  signature_ = NULL;
  return temp;
}
inline void FilecoinTxRes::set_allocated_signature(::filecoinapi::Signature* signature) {
  delete signature_;
  signature_ = signature;
  if (signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinTxRes.signature)
}

inline const FilecoinTxRes* FilecoinTxRes::internal_default_instance() {
  return &FilecoinTxRes_default_instance_.get();
}
// -------------------------------------------------------------------

// Signature

// optional uint32 type = 1;
inline void Signature::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Signature::type() const {
  // @@protoc_insertion_point(field_get:filecoinapi.Signature.type)
  return type_;
}
inline void Signature::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:filecoinapi.Signature.type)
}

// optional string data = 2;
inline void Signature::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature::data() const {
  // @@protoc_insertion_point(field_get:filecoinapi.Signature.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.Signature.data)
}
inline void Signature::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.Signature.data)
}
inline void Signature::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.Signature.data)
}
inline ::std::string* Signature::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.Signature.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature::release_data() {
  // @@protoc_insertion_point(field_release:filecoinapi.Signature.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.Signature.data)
}

inline const Signature* Signature::internal_default_instance() {
  return &Signature_default_instance_.get();
}
// -------------------------------------------------------------------

// FilecoinAddressReq

// optional string network = 1;
inline void FilecoinAddressReq::clear_network() {
  network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinAddressReq::network() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinAddressReq.network)
  return network_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinAddressReq::set_network(const ::std::string& value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinAddressReq.network)
}
inline void FilecoinAddressReq::set_network(const char* value) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinAddressReq.network)
}
inline void FilecoinAddressReq::set_network(const char* value, size_t size) {
  
  network_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinAddressReq.network)
}
inline ::std::string* FilecoinAddressReq::mutable_network() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinAddressReq.network)
  return network_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinAddressReq::release_network() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinAddressReq.network)
  
  return network_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinAddressReq::set_allocated_network(::std::string* network) {
  if (network != NULL) {
    
  } else {
    
  }
  network_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinAddressReq.network)
}

// optional string path = 2;
inline void FilecoinAddressReq::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinAddressReq::path() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinAddressReq.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinAddressReq::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinAddressReq.path)
}
inline void FilecoinAddressReq::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinAddressReq.path)
}
inline void FilecoinAddressReq::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinAddressReq.path)
}
inline ::std::string* FilecoinAddressReq::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinAddressReq.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinAddressReq::release_path() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinAddressReq.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinAddressReq::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinAddressReq.path)
}

inline const FilecoinAddressReq* FilecoinAddressReq::internal_default_instance() {
  return &FilecoinAddressReq_default_instance_.get();
}
// -------------------------------------------------------------------

// FilecoinAddressRes

// optional string address = 1;
inline void FilecoinAddressRes::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilecoinAddressRes::address() const {
  // @@protoc_insertion_point(field_get:filecoinapi.FilecoinAddressRes.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinAddressRes::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:filecoinapi.FilecoinAddressRes.address)
}
inline void FilecoinAddressRes::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:filecoinapi.FilecoinAddressRes.address)
}
inline void FilecoinAddressRes::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:filecoinapi.FilecoinAddressRes.address)
}
inline ::std::string* FilecoinAddressRes::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:filecoinapi.FilecoinAddressRes.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilecoinAddressRes::release_address() {
  // @@protoc_insertion_point(field_release:filecoinapi.FilecoinAddressRes.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilecoinAddressRes::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:filecoinapi.FilecoinAddressRes.address)
}

inline const FilecoinAddressRes* FilecoinAddressRes::internal_default_instance() {
  return &FilecoinAddressRes_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace filecoinapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_filecoin_2eproto__INCLUDED
